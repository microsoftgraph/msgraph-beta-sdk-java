// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.security.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.security.models.AttackSimulationInfo;
import com.microsoft.graph.security.models.SubmissionCategory;
import com.microsoft.graph.security.models.TenantAllowOrBlockListAction;
import com.microsoft.graph.security.models.ThreatSubmission;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Email Threat Submission.
 */
public class EmailThreatSubmission extends ThreatSubmission implements IJsonBackedObject {


    /**
     * The Attack Simulation Info.
     * If the email is phishing simulation, this field will not be null.
     */
    @SerializedName(value = "attackSimulationInfo", alternate = {"AttackSimulationInfo"})
    @Expose
	@Nullable
    public AttackSimulationInfo attackSimulationInfo;

    /**
     * The Internet Message Id.
     * Specifies the internet message id of the email being submitted. This information is present in the email header.
     */
    @SerializedName(value = "internetMessageId", alternate = {"InternetMessageId"})
    @Expose
	@Nullable
    public String internetMessageId;

    /**
     * The Original Category.
     * The original category of the submission. The possible values are: notJunk, spam, phishing, malware and unkownFutureValue.
     */
    @SerializedName(value = "originalCategory", alternate = {"OriginalCategory"})
    @Expose
	@Nullable
    public SubmissionCategory originalCategory;

    /**
     * The Received Date Time.
     * Specifies the date and time stamp when the email was received.
     */
    @SerializedName(value = "receivedDateTime", alternate = {"ReceivedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime receivedDateTime;

    /**
     * The Recipient Email Address.
     * Specifies the email address (in smtp format) of the recipient who received the email.
     */
    @SerializedName(value = "recipientEmailAddress", alternate = {"RecipientEmailAddress"})
    @Expose
	@Nullable
    public String recipientEmailAddress;

    /**
     * The Sender.
     * Specifies the email address of the sender.
     */
    @SerializedName(value = "sender", alternate = {"Sender"})
    @Expose
	@Nullable
    public String sender;

    /**
     * The Sender IP.
     * Specifies the IP address of the sender.
     */
    @SerializedName(value = "senderIP", alternate = {"SenderIP"})
    @Expose
	@Nullable
    public String senderIP;

    /**
     * The Subject.
     * Specifies the subject of the email .
     */
    @SerializedName(value = "subject", alternate = {"Subject"})
    @Expose
	@Nullable
    public String subject;

    /**
     * The Tenant Allow Or Block List Action.
     * It is used to automatically add allows for the components such as URL, file, sender; which are deemed bad by Microsoft so that similar messages in the future can be allowed.
     */
    @SerializedName(value = "tenantAllowOrBlockListAction", alternate = {"TenantAllowOrBlockListAction"})
    @Expose
	@Nullable
    public TenantAllowOrBlockListAction tenantAllowOrBlockListAction;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
