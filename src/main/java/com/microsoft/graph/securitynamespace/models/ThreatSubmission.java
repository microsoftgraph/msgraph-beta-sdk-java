// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.security.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.security.models.SubmissionAdminReview;
import com.microsoft.graph.security.models.SubmissionCategory;
import com.microsoft.graph.security.models.SubmissionClientSource;
import com.microsoft.graph.security.models.SubmissionContentType;
import com.microsoft.graph.security.models.SubmissionUserIdentity;
import com.microsoft.graph.security.models.SubmissionResult;
import com.microsoft.graph.security.models.SubmissionSource;
import com.microsoft.graph.security.models.LongRunningOperationStatus;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Threat Submission.
 */
public class ThreatSubmission extends Entity implements IJsonBackedObject {


    /**
     * The Admin Review.
     * Specifies the admin review property that constitutes of who reviewed the user submission, when and what was it identified as.
     */
    @SerializedName(value = "adminReview", alternate = {"AdminReview"})
    @Expose
	@Nullable
    public SubmissionAdminReview adminReview;

    /**
     * The Category.
     * Specifies the category of the submission. Supports $filter = category eq 'value'. The possible values are: notJunk, spam, phishing, malware and unkownFutureValue.
     */
    @SerializedName(value = "category", alternate = {"Category"})
    @Expose
	@Nullable
    public SubmissionCategory category;

    /**
     * The Client Source.
     * Specifies the source of the submission. The possible values are: microsoft,  other and unkownFutureValue.
     */
    @SerializedName(value = "clientSource", alternate = {"ClientSource"})
    @Expose
	@Nullable
    public SubmissionClientSource clientSource;

    /**
     * The Content Type.
     * Specifies the type of content being submitted. The possible values are: email, url, file, app and unkownFutureValue.
     */
    @SerializedName(value = "contentType", alternate = {"ContentType"})
    @Expose
	@Nullable
    public SubmissionContentType contentType;

    /**
     * The Created By.
     * Specifies who submitted the email as a threat. Supports $filter = createdBy/email eq 'value'.
     */
    @SerializedName(value = "createdBy", alternate = {"CreatedBy"})
    @Expose
	@Nullable
    public SubmissionUserIdentity createdBy;

    /**
     * The Created Date Time.
     * Specifies when the threat submission was created. Supports $filter = createdDateTime ge 2022-01-01T00:00:00Z and createdDateTime lt 2022-01-02T00:00:00Z.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Result.
     * Specifies the result of the analysis performed by Microsoft.
     */
    @SerializedName(value = "result", alternate = {"Result"})
    @Expose
	@Nullable
    public SubmissionResult result;

    /**
     * The Source.
     * Specifies the role of the submitter. Supports $filter = source eq 'value'. The possible values are: administrator,  user and unkownFutureValue.
     */
    @SerializedName(value = "source", alternate = {"Source"})
    @Expose
	@Nullable
    public SubmissionSource source;

    /**
     * The Status.
     * Indicates whether the threat submission has been analyzed by Microsoft. Supports $filter = status eq 'value'. The possible values are: notStarted, running, succeeded, failed, skipped and unkownFutureValue.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
	@Nullable
    public LongRunningOperationStatus status;

    /**
     * The Tenant Id.
     * Indicates the tenant id of the submitter. Not required when created using a POST operation. It's extracted from the token of the post API call.
     */
    @SerializedName(value = "tenantId", alternate = {"TenantId"})
    @Expose
	@Nullable
    public String tenantId;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
