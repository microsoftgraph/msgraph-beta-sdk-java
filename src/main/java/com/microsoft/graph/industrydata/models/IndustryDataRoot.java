// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.industrydata.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.industrydata.requests.IndustryDataConnectorCollectionPage;
import com.microsoft.graph.industrydata.requests.InboundFlowCollectionPage;
import com.microsoft.graph.requests.LongRunningOperationCollectionPage;
import com.microsoft.graph.industrydata.requests.ReferenceDefinitionCollectionPage;
import com.microsoft.graph.industrydata.requests.RoleGroupCollectionPage;
import com.microsoft.graph.industrydata.requests.IndustryDataRunCollectionPage;
import com.microsoft.graph.industrydata.requests.SourceSystemDefinitionCollectionPage;
import com.microsoft.graph.industrydata.requests.YearTimePeriodDefinitionCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Industry Data Root.
 */
public class IndustryDataRoot extends Entity implements IJsonBackedObject {


    /**
     * The Data Connectors.
     * Set of connectors for importing data from source systems.
     */
    @SerializedName(value = "dataConnectors", alternate = {"DataConnectors"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.IndustryDataConnectorCollectionPage dataConnectors;

    /**
     * The Inbound Flows.
     * Set of data import flow activities to bring data into the canonical store via a connector.
     */
    @SerializedName(value = "inboundFlows", alternate = {"InboundFlows"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.InboundFlowCollectionPage inboundFlows;

    /**
     * The Operations.
     * Set of ephemeral operations that the system runs currently. Read-only.
     */
    @SerializedName(value = "operations", alternate = {"Operations"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.LongRunningOperationCollectionPage operations;

    /**
     * The Reference Definitions.
     * Set of user modifiable system picker types.
     */
    @SerializedName(value = "referenceDefinitions", alternate = {"ReferenceDefinitions"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.ReferenceDefinitionCollectionPage referenceDefinitions;

    /**
     * The Role Groups.
     * Set of groups of individual roles that makes role-based admin simpler.
     */
    @SerializedName(value = "roleGroups", alternate = {"RoleGroups"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.RoleGroupCollectionPage roleGroups;

    /**
     * The Runs.
     * Set of ephemeral runs which present the point-in-time that diagnostic state of activities performed by the system. Read-only.
     */
    @SerializedName(value = "runs", alternate = {"Runs"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.IndustryDataRunCollectionPage runs;

    /**
     * The Source Systems.
     * Set of source definitions that represents real-world external systems.
     */
    @SerializedName(value = "sourceSystems", alternate = {"SourceSystems"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.SourceSystemDefinitionCollectionPage sourceSystems;

    /**
     * The Years.
     * Set of years represented in the system.
     */
    @SerializedName(value = "years", alternate = {"Years"})
    @Expose
	@Nullable
    public com.microsoft.graph.industrydata.requests.YearTimePeriodDefinitionCollectionPage years;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("dataConnectors")) {
            dataConnectors = serializer.deserializeObject(json.get("dataConnectors"), com.microsoft.graph.industrydata.requests.IndustryDataConnectorCollectionPage.class);
        }

        if (json.has("inboundFlows")) {
            inboundFlows = serializer.deserializeObject(json.get("inboundFlows"), com.microsoft.graph.industrydata.requests.InboundFlowCollectionPage.class);
        }

        if (json.has("operations")) {
            operations = serializer.deserializeObject(json.get("operations"), com.microsoft.graph.requests.LongRunningOperationCollectionPage.class);
        }

        if (json.has("referenceDefinitions")) {
            referenceDefinitions = serializer.deserializeObject(json.get("referenceDefinitions"), com.microsoft.graph.industrydata.requests.ReferenceDefinitionCollectionPage.class);
        }

        if (json.has("roleGroups")) {
            roleGroups = serializer.deserializeObject(json.get("roleGroups"), com.microsoft.graph.industrydata.requests.RoleGroupCollectionPage.class);
        }

        if (json.has("runs")) {
            runs = serializer.deserializeObject(json.get("runs"), com.microsoft.graph.industrydata.requests.IndustryDataRunCollectionPage.class);
        }

        if (json.has("sourceSystems")) {
            sourceSystems = serializer.deserializeObject(json.get("sourceSystems"), com.microsoft.graph.industrydata.requests.SourceSystemDefinitionCollectionPage.class);
        }

        if (json.has("years")) {
            years = serializer.deserializeObject(json.get("years"), com.microsoft.graph.industrydata.requests.YearTimePeriodDefinitionCollectionPage.class);
        }
    }
}
