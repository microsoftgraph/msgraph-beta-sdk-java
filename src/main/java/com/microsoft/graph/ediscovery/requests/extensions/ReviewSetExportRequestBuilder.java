// Template Source: BaseMethodRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.ediscovery.requests.extensions;
import com.microsoft.graph.ediscovery.requests.extensions.IReviewSetExportRequest;
import com.microsoft.graph.ediscovery.requests.extensions.ReviewSetExportRequest;
import com.microsoft.graph.ediscovery.models.generated.ExportOptions;
import com.microsoft.graph.ediscovery.models.generated.ExportFileStructure;
import java.util.EnumSet;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Review Set Export Request Builder.
 */
public class ReviewSetExportRequestBuilder extends BaseActionRequestBuilder implements IReviewSetExportRequestBuilder {

    /**
     * The request builder for this ReviewSetExport
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param outputName the outputName
     * @param description the description
     * @param azureBlobContainer the azureBlobContainer
     * @param azureBlobToken the azureBlobToken
     * @param exportOptions the exportOptions
     * @param exportStructure the exportStructure
     */
    public ReviewSetExportRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final String outputName, final String description, final String azureBlobContainer, final String azureBlobToken, final EnumSet<ExportOptions> exportOptions, final ExportFileStructure exportStructure) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("outputName", outputName);
        bodyParams.put("description", description);
        bodyParams.put("azureBlobContainer", azureBlobContainer);
        bodyParams.put("azureBlobToken", azureBlobToken);
        bodyParams.put("exportOptions", exportOptions);
        bodyParams.put("exportStructure", exportStructure);
    }

    /**
     * Creates the IReviewSetExportRequest
     *
     * @param requestOptions the options for the request
     * @return the IReviewSetExportRequest instance
     */
    public IReviewSetExportRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the IReviewSetExportRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IReviewSetExportRequest instance
     */
    public IReviewSetExportRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        ReviewSetExportRequest request = new ReviewSetExportRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("outputName")) {
            request.body.outputName = getParameter("outputName");
        }

        if (hasParameter("description")) {
            request.body.description = getParameter("description");
        }

        if (hasParameter("azureBlobContainer")) {
            request.body.azureBlobContainer = getParameter("azureBlobContainer");
        }

        if (hasParameter("azureBlobToken")) {
            request.body.azureBlobToken = getParameter("azureBlobToken");
        }

        if (hasParameter("exportOptions")) {
            request.body.exportOptions = getParameter("exportOptions");
        }

        if (hasParameter("exportStructure")) {
            request.body.exportStructure = getParameter("exportStructure");
        }

        return request;
    }
}
