// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.ediscovery.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.ediscovery.models.extensions.LegalHold;
import com.microsoft.graph.ediscovery.requests.extensions.ISiteSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.ISiteSourceRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.SiteSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.SiteSourceRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.IUnifiedGroupSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.IUnifiedGroupSourceRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.UnifiedGroupSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.UnifiedGroupSourceRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.IUserSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.IUserSourceRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.UserSourceCollectionRequestBuilder;
import com.microsoft.graph.ediscovery.requests.extensions.UserSourceRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Legal Hold Request Builder.
 */
public class LegalHoldRequestBuilder extends BaseRequestBuilder implements ILegalHoldRequestBuilder {

    /**
     * The request builder for the LegalHold
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public LegalHoldRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the ILegalHoldRequest instance
     */
    public ILegalHoldRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ILegalHoldRequest instance
     */
    public ILegalHoldRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.ediscovery.requests.extensions.LegalHoldRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public ISiteSourceCollectionRequestBuilder siteSources() {
        return new SiteSourceCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("siteSources"), getClient(), null);
    }

    public ISiteSourceRequestBuilder siteSources(final String id) {
        return new SiteSourceRequestBuilder(getRequestUrlWithAdditionalSegment("siteSources") + "/" + id, getClient(), null);
    }
    public IUnifiedGroupSourceCollectionRequestBuilder unifiedGroupSources() {
        return new UnifiedGroupSourceCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("unifiedGroupSources"), getClient(), null);
    }

    public IUnifiedGroupSourceRequestBuilder unifiedGroupSources(final String id) {
        return new UnifiedGroupSourceRequestBuilder(getRequestUrlWithAdditionalSegment("unifiedGroupSources") + "/" + id, getClient(), null);
    }
    public IUserSourceCollectionRequestBuilder userSources() {
        return new UserSourceCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("userSources"), getClient(), null);
    }

    public IUserSourceRequestBuilder userSources(final String id) {
        return new UserSourceRequestBuilder(getRequestUrlWithAdditionalSegment("userSources") + "/" + id, getClient(), null);
    }
}
