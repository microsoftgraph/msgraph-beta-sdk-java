// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.ediscovery.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.IdentitySet;
import com.microsoft.graph.ediscovery.models.generated.DataSourceScopes;
import com.microsoft.graph.ediscovery.models.generated.TenantSources;
import com.microsoft.graph.ediscovery.models.extensions.DataSource;
import com.microsoft.graph.ediscovery.models.extensions.AddToReviewSetOperation;
import com.microsoft.graph.ediscovery.models.extensions.EstimateStatisticsOperation;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.ediscovery.requests.extensions.DataSourceCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Source Collection.
 */
public class SourceCollection extends Entity implements IJsonBackedObject {


    /**
     * The Content Query.
     * 
     */
    @SerializedName(value = "contentQuery", alternate = {"ContentQuery"})
    @Expose
    public String contentQuery;

    /**
     * The Created By.
     * 
     */
    @SerializedName(value = "createdBy", alternate = {"CreatedBy"})
    @Expose
    public IdentitySet createdBy;

    /**
     * The Created Date Time.
     * 
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
    public java.util.Calendar createdDateTime;

    /**
     * The Data Source Scopes.
     * 
     */
    @SerializedName(value = "dataSourceScopes", alternate = {"DataSourceScopes"})
    @Expose
    public EnumSet<DataSourceScopes> dataSourceScopes;

    /**
     * The Description.
     * 
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Display Name.
     * 
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Last Modified By.
     * 
     */
    @SerializedName(value = "lastModifiedBy", alternate = {"LastModifiedBy"})
    @Expose
    public IdentitySet lastModifiedBy;

    /**
     * The Last Modified Date Time.
     * 
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Tenant Sources.
     * 
     */
    @SerializedName(value = "tenantSources", alternate = {"TenantSources"})
    @Expose
    public EnumSet<TenantSources> tenantSources;

    /**
     * The Additional Sources.
     * 
     */
    @SerializedName(value = "additionalSources", alternate = {"AdditionalSources"})
    @Expose
    public DataSourceCollectionPage additionalSources;

    /**
     * The Add To Review Set Operation.
     * 
     */
    @SerializedName(value = "addToReviewSetOperation", alternate = {"AddToReviewSetOperation"})
    @Expose
    public AddToReviewSetOperation addToReviewSetOperation;

    /**
     * The Custodian Sources.
     * 
     */
    public DataSourceCollectionPage custodianSources;

    /**
     * The Last Estimate Statistics Operation.
     * 
     */
    @SerializedName(value = "lastEstimateStatisticsOperation", alternate = {"LastEstimateStatisticsOperation"})
    @Expose
    public EstimateStatisticsOperation lastEstimateStatisticsOperation;

    /**
     * The Noncustodial Sources.
     * 
     */
    public DataSourceCollectionPage noncustodialSources;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("additionalSources")) {
            additionalSources = serializer.deserializeObject(json.get("additionalSources").toString(), DataSourceCollectionPage.class);
        }

        if (json.has("custodianSources")) {
            custodianSources = serializer.deserializeObject(json.get("custodianSources").toString(), DataSourceCollectionPage.class);
        }

        if (json.has("noncustodialSources")) {
            noncustodialSources = serializer.deserializeObject(json.get("noncustodialSources").toString(), DataSourceCollectionPage.class);
        }
    }
}
