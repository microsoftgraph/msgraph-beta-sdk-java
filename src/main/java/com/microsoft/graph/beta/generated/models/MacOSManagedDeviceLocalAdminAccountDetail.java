package com.microsoft.graph.beta.models;

import com.microsoft.kiota.serialization.AdditionalDataHolder;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import com.microsoft.kiota.store.BackedModel;
import com.microsoft.kiota.store.BackingStore;
import com.microsoft.kiota.store.BackingStoreFactorySingleton;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
/**
 * The local admin account password and its last rotation timestamp of the macOS managed device
 */
@jakarta.annotation.Generated("com.microsoft.kiota")
public class MacOSManagedDeviceLocalAdminAccountDetail implements AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    @jakarta.annotation.Nonnull
    protected BackingStore backingStore;
    /**
     * Instantiates a new {@link MacOSManagedDeviceLocalAdminAccountDetail} and sets the default values.
     */
    public MacOSManagedDeviceLocalAdminAccountDetail() {
        this.backingStore = BackingStoreFactorySingleton.instance.createBackingStore();
        this.setAdditionalData(new HashMap<>());
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a {@link MacOSManagedDeviceLocalAdminAccountDetail}
     */
    @jakarta.annotation.Nonnull
    public static MacOSManagedDeviceLocalAdminAccountDetail createFromDiscriminatorValue(@jakarta.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        return new MacOSManagedDeviceLocalAdminAccountDetail();
    }
    /**
     * Gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return a {@link Map<String, Object>}
     */
    @jakarta.annotation.Nonnull
    public Map<String, Object> getAdditionalData() {
        Map<String, Object> value = this.backingStore.get("additionalData");
        if(value == null) {
            value = new HashMap<>();
            this.setAdditionalData(value);
        }
        return value;
    }
    /**
     * Gets the adminAccountPassword property value. The local administrator account password for the macOS device. This password is auto generated, 15 characters by default, and unique for each device. The autogenerated password is created when the device is enrolled by Automated Device Enrollment process. Read-only.
     * @return a {@link String}
     */
    @jakarta.annotation.Nullable
    public String getAdminAccountPassword() {
        return this.backingStore.get("adminAccountPassword");
    }
    /**
     * Gets the backingStore property value. Stores model information.
     * @return a {@link BackingStore}
     */
    @jakarta.annotation.Nonnull
    public BackingStore getBackingStore() {
        return this.backingStore;
    }
    /**
     * The deserialization information for the current model
     * @return a {@link Map<String, java.util.function.Consumer<ParseNode>>}
     */
    @jakarta.annotation.Nonnull
    public Map<String, java.util.function.Consumer<ParseNode>> getFieldDeserializers() {
        final HashMap<String, java.util.function.Consumer<ParseNode>> deserializerMap = new HashMap<String, java.util.function.Consumer<ParseNode>>(3);
        deserializerMap.put("adminAccountPassword", (n) -> { this.setAdminAccountPassword(n.getStringValue()); });
        deserializerMap.put("@odata.type", (n) -> { this.setOdataType(n.getStringValue()); });
        deserializerMap.put("passwordLastRotatedDateTime", (n) -> { this.setPasswordLastRotatedDateTime(n.getOffsetDateTimeValue()); });
        return deserializerMap;
    }
    /**
     * Gets the @odata.type property value. The OdataType property
     * @return a {@link String}
     */
    @jakarta.annotation.Nullable
    public String getOdataType() {
        return this.backingStore.get("odataType");
    }
    /**
     * Gets the passwordLastRotatedDateTime property value. The timestamp when the admin account password was last rotated. The timestamp type represents data and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like &apos;2014-01-01T00:00:00Z&apos;. Read-only.
     * @return a {@link OffsetDateTime}
     */
    @jakarta.annotation.Nullable
    public OffsetDateTime getPasswordLastRotatedDateTime() {
        return this.backingStore.get("passwordLastRotatedDateTime");
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     */
    public void serialize(@jakarta.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        writer.writeStringValue("adminAccountPassword", this.getAdminAccountPassword());
        writer.writeStringValue("@odata.type", this.getOdataType());
        writer.writeOffsetDateTimeValue("passwordLastRotatedDateTime", this.getPasswordLastRotatedDateTime());
        writer.writeAdditionalData(this.getAdditionalData());
    }
    /**
     * Sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the AdditionalData property.
     */
    public void setAdditionalData(@jakarta.annotation.Nullable final Map<String, Object> value) {
        this.backingStore.set("additionalData", value);
    }
    /**
     * Sets the adminAccountPassword property value. The local administrator account password for the macOS device. This password is auto generated, 15 characters by default, and unique for each device. The autogenerated password is created when the device is enrolled by Automated Device Enrollment process. Read-only.
     * @param value Value to set for the adminAccountPassword property.
     */
    public void setAdminAccountPassword(@jakarta.annotation.Nullable final String value) {
        this.backingStore.set("adminAccountPassword", value);
    }
    /**
     * Sets the backingStore property value. Stores model information.
     * @param value Value to set for the backingStore property.
     */
    public void setBackingStore(@jakarta.annotation.Nonnull final BackingStore value) {
        Objects.requireNonNull(value);
        this.backingStore = value;
    }
    /**
     * Sets the @odata.type property value. The OdataType property
     * @param value Value to set for the @odata.type property.
     */
    public void setOdataType(@jakarta.annotation.Nullable final String value) {
        this.backingStore.set("odataType", value);
    }
    /**
     * Sets the passwordLastRotatedDateTime property value. The timestamp when the admin account password was last rotated. The timestamp type represents data and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like &apos;2014-01-01T00:00:00Z&apos;. Read-only.
     * @param value Value to set for the passwordLastRotatedDateTime property.
     */
    public void setPasswordLastRotatedDateTime(@jakarta.annotation.Nullable final OffsetDateTime value) {
        this.backingStore.set("passwordLastRotatedDateTime", value);
    }
}
