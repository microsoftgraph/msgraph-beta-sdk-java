package com.microsoft.graph.models.managedtenants;

import com.microsoft.graph.models.Entity;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.time.OffsetDateTime;
import java.util.function.Consumer;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
/** Provides operations to manage the collection of accessReview entities. */
public class WindowsDeviceMalwareState extends Entity implements Parsable {
    /** The additional information URL for the discovered malware. Optional. Read-only. */
    private String _additionalInformationUrl;
    /** The number of times the piece of malware has been detected. Optional. Read-only. */
    private Integer _detectionCount;
    /** A flag indicating whether the device has been deleted. Optional. Read-only. */
    private Boolean _deviceDeleted;
    /** The date and time the piece of malware was initially detected. Optional. Read-only. */
    private OffsetDateTime _initialDetectionDateTime;
    /** Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only. */
    private OffsetDateTime _lastRefreshedDateTime;
    /** The date and time the malware state was last changed. Optional. Read-only. */
    private OffsetDateTime _lastStateChangeDateTime;
    /** The category for the detected malware. Optional. Read-only. */
    private String _malwareCategory;
    /** The display name for the detected malware. Optional. Read-only. */
    private String _malwareDisplayName;
    /** The execution state for the detected malware. Optional. Read-only. */
    private String _malwareExecutionState;
    /** The unique identifier for the detected malware. Optional. Read-only. */
    private String _malwareId;
    /** The severity for the detected malware. Optional. Read-only. */
    private String _malwareSeverity;
    /** The threat state for the detected malware. Optional. Read-only. */
    private String _malwareThreatState;
    /** The identifier for the managed device where the malware was detected. Optional. Read-only. */
    private String _managedDeviceId;
    /** The display name for the managed device where the malware was detected. Optional. Read-only. */
    private String _managedDeviceName;
    /** The display name for the managed tenant. Optional. Read-only. */
    private String _tenantDisplayName;
    /** The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only. */
    private String _tenantId;
    /**
     * Instantiates a new windowsDeviceMalwareState and sets the default values.
     * @return a void
     */
    @javax.annotation.Nullable
    public WindowsDeviceMalwareState() {
        super();
        this.setOdataType("#microsoft.graph.managedTenants.windowsDeviceMalwareState");
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a windowsDeviceMalwareState
     */
    @javax.annotation.Nonnull
    public static WindowsDeviceMalwareState createFromDiscriminatorValue(@javax.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        return new WindowsDeviceMalwareState();
    }
    /**
     * Gets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getAdditionalInformationUrl() {
        return this._additionalInformationUrl;
    }
    /**
     * Gets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
     * @return a integer
     */
    @javax.annotation.Nullable
    public Integer getDetectionCount() {
        return this._detectionCount;
    }
    /**
     * Gets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
     * @return a boolean
     */
    @javax.annotation.Nullable
    public Boolean getDeviceDeleted() {
        return this._deviceDeleted;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, Consumer<ParseNode>>
     */
    @javax.annotation.Nonnull
    public Map<String, Consumer<ParseNode>> getFieldDeserializers() {
        final WindowsDeviceMalwareState currentObject = this;
        return new HashMap<String, Consumer<ParseNode>>(super.getFieldDeserializers()) {{
            this.put("additionalInformationUrl", (n) -> { currentObject.setAdditionalInformationUrl(n.getStringValue()); });
            this.put("detectionCount", (n) -> { currentObject.setDetectionCount(n.getIntegerValue()); });
            this.put("deviceDeleted", (n) -> { currentObject.setDeviceDeleted(n.getBooleanValue()); });
            this.put("initialDetectionDateTime", (n) -> { currentObject.setInitialDetectionDateTime(n.getOffsetDateTimeValue()); });
            this.put("lastRefreshedDateTime", (n) -> { currentObject.setLastRefreshedDateTime(n.getOffsetDateTimeValue()); });
            this.put("lastStateChangeDateTime", (n) -> { currentObject.setLastStateChangeDateTime(n.getOffsetDateTimeValue()); });
            this.put("malwareCategory", (n) -> { currentObject.setMalwareCategory(n.getStringValue()); });
            this.put("malwareDisplayName", (n) -> { currentObject.setMalwareDisplayName(n.getStringValue()); });
            this.put("malwareExecutionState", (n) -> { currentObject.setMalwareExecutionState(n.getStringValue()); });
            this.put("malwareId", (n) -> { currentObject.setMalwareId(n.getStringValue()); });
            this.put("malwareSeverity", (n) -> { currentObject.setMalwareSeverity(n.getStringValue()); });
            this.put("malwareThreatState", (n) -> { currentObject.setMalwareThreatState(n.getStringValue()); });
            this.put("managedDeviceId", (n) -> { currentObject.setManagedDeviceId(n.getStringValue()); });
            this.put("managedDeviceName", (n) -> { currentObject.setManagedDeviceName(n.getStringValue()); });
            this.put("tenantDisplayName", (n) -> { currentObject.setTenantDisplayName(n.getStringValue()); });
            this.put("tenantId", (n) -> { currentObject.setTenantId(n.getStringValue()); });
        }};
    }
    /**
     * Gets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
     * @return a OffsetDateTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getInitialDetectionDateTime() {
        return this._initialDetectionDateTime;
    }
    /**
     * Gets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     * @return a OffsetDateTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getLastRefreshedDateTime() {
        return this._lastRefreshedDateTime;
    }
    /**
     * Gets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
     * @return a OffsetDateTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getLastStateChangeDateTime() {
        return this._lastStateChangeDateTime;
    }
    /**
     * Gets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareCategory() {
        return this._malwareCategory;
    }
    /**
     * Gets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareDisplayName() {
        return this._malwareDisplayName;
    }
    /**
     * Gets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareExecutionState() {
        return this._malwareExecutionState;
    }
    /**
     * Gets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareId() {
        return this._malwareId;
    }
    /**
     * Gets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareSeverity() {
        return this._malwareSeverity;
    }
    /**
     * Gets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getMalwareThreatState() {
        return this._malwareThreatState;
    }
    /**
     * Gets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getManagedDeviceId() {
        return this._managedDeviceId;
    }
    /**
     * Gets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getManagedDeviceName() {
        return this._managedDeviceName;
    }
    /**
     * Gets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getTenantDisplayName() {
        return this._tenantDisplayName;
    }
    /**
     * Gets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
     * @return a string
     */
    @javax.annotation.Nullable
    public String getTenantId() {
        return this._tenantId;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     * @return a void
     */
    @javax.annotation.Nonnull
    public void serialize(@javax.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        super.serialize(writer);
        writer.writeStringValue("additionalInformationUrl", this.getAdditionalInformationUrl());
        writer.writeIntegerValue("detectionCount", this.getDetectionCount());
        writer.writeBooleanValue("deviceDeleted", this.getDeviceDeleted());
        writer.writeOffsetDateTimeValue("initialDetectionDateTime", this.getInitialDetectionDateTime());
        writer.writeOffsetDateTimeValue("lastRefreshedDateTime", this.getLastRefreshedDateTime());
        writer.writeOffsetDateTimeValue("lastStateChangeDateTime", this.getLastStateChangeDateTime());
        writer.writeStringValue("malwareCategory", this.getMalwareCategory());
        writer.writeStringValue("malwareDisplayName", this.getMalwareDisplayName());
        writer.writeStringValue("malwareExecutionState", this.getMalwareExecutionState());
        writer.writeStringValue("malwareId", this.getMalwareId());
        writer.writeStringValue("malwareSeverity", this.getMalwareSeverity());
        writer.writeStringValue("malwareThreatState", this.getMalwareThreatState());
        writer.writeStringValue("managedDeviceId", this.getManagedDeviceId());
        writer.writeStringValue("managedDeviceName", this.getManagedDeviceName());
        writer.writeStringValue("tenantDisplayName", this.getTenantDisplayName());
        writer.writeStringValue("tenantId", this.getTenantId());
    }
    /**
     * Sets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
     * @param value Value to set for the additionalInformationUrl property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setAdditionalInformationUrl(@javax.annotation.Nullable final String value) {
        this._additionalInformationUrl = value;
    }
    /**
     * Sets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
     * @param value Value to set for the detectionCount property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setDetectionCount(@javax.annotation.Nullable final Integer value) {
        this._detectionCount = value;
    }
    /**
     * Sets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
     * @param value Value to set for the deviceDeleted property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setDeviceDeleted(@javax.annotation.Nullable final Boolean value) {
        this._deviceDeleted = value;
    }
    /**
     * Sets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
     * @param value Value to set for the initialDetectionDateTime property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setInitialDetectionDateTime(@javax.annotation.Nullable final OffsetDateTime value) {
        this._initialDetectionDateTime = value;
    }
    /**
     * Sets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     * @param value Value to set for the lastRefreshedDateTime property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setLastRefreshedDateTime(@javax.annotation.Nullable final OffsetDateTime value) {
        this._lastRefreshedDateTime = value;
    }
    /**
     * Sets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
     * @param value Value to set for the lastStateChangeDateTime property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setLastStateChangeDateTime(@javax.annotation.Nullable final OffsetDateTime value) {
        this._lastStateChangeDateTime = value;
    }
    /**
     * Sets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareCategory property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareCategory(@javax.annotation.Nullable final String value) {
        this._malwareCategory = value;
    }
    /**
     * Sets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareDisplayName property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareDisplayName(@javax.annotation.Nullable final String value) {
        this._malwareDisplayName = value;
    }
    /**
     * Sets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareExecutionState property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareExecutionState(@javax.annotation.Nullable final String value) {
        this._malwareExecutionState = value;
    }
    /**
     * Sets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareId property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareId(@javax.annotation.Nullable final String value) {
        this._malwareId = value;
    }
    /**
     * Sets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareSeverity property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareSeverity(@javax.annotation.Nullable final String value) {
        this._malwareSeverity = value;
    }
    /**
     * Sets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
     * @param value Value to set for the malwareThreatState property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareThreatState(@javax.annotation.Nullable final String value) {
        this._malwareThreatState = value;
    }
    /**
     * Sets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
     * @param value Value to set for the managedDeviceId property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setManagedDeviceId(@javax.annotation.Nullable final String value) {
        this._managedDeviceId = value;
    }
    /**
     * Sets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
     * @param value Value to set for the managedDeviceName property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setManagedDeviceName(@javax.annotation.Nullable final String value) {
        this._managedDeviceName = value;
    }
    /**
     * Sets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
     * @param value Value to set for the tenantDisplayName property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setTenantDisplayName(@javax.annotation.Nullable final String value) {
        this._tenantDisplayName = value;
    }
    /**
     * Sets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
     * @param value Value to set for the tenantId property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setTenantId(@javax.annotation.Nullable final String value) {
        this._tenantId = value;
    }
}
