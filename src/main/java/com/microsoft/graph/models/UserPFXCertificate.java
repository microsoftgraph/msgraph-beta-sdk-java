// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.UserPfxIntendedPurpose;
import com.microsoft.graph.models.UserPfxPaddingScheme;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User PFXCertificate.
 */
public class UserPFXCertificate extends Entity implements IJsonBackedObject {


    /**
     * The Created Date Time.
     * Date/time when this PFX certificate was imported.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Encrypted Pfx Blob.
     * Encrypted PFX blob.
     */
    @SerializedName(value = "encryptedPfxBlob", alternate = {"EncryptedPfxBlob"})
    @Expose
	@Nullable
    public byte[] encryptedPfxBlob;

    /**
     * The Encrypted Pfx Password.
     * Encrypted PFX password.
     */
    @SerializedName(value = "encryptedPfxPassword", alternate = {"EncryptedPfxPassword"})
    @Expose
	@Nullable
    public String encryptedPfxPassword;

    /**
     * The Expiration Date Time.
     * Certificate's validity expiration date/time.
     */
    @SerializedName(value = "expirationDateTime", alternate = {"ExpirationDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime expirationDateTime;

    /**
     * The Intended Purpose.
     * Certificate's intended purpose from the point-of-view of deployment. Possible values are: unassigned, smimeEncryption, smimeSigning, vpn, wifi.
     */
    @SerializedName(value = "intendedPurpose", alternate = {"IntendedPurpose"})
    @Expose
	@Nullable
    public UserPfxIntendedPurpose intendedPurpose;

    /**
     * The Key Name.
     * Name of the key (within the provider) used to encrypt the blob.
     */
    @SerializedName(value = "keyName", alternate = {"KeyName"})
    @Expose
	@Nullable
    public String keyName;

    /**
     * The Last Modified Date Time.
     * Date/time when this PFX certificate was last modified.
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime lastModifiedDateTime;

    /**
     * The Padding Scheme.
     * Padding scheme used by the provider during encryption/decryption. Possible values are: none, pkcs1, oaepSha1, oaepSha256, oaepSha384, oaepSha512.
     */
    @SerializedName(value = "paddingScheme", alternate = {"PaddingScheme"})
    @Expose
	@Nullable
    public UserPfxPaddingScheme paddingScheme;

    /**
     * The Provider Name.
     * Crypto provider used to encrypt this blob.
     */
    @SerializedName(value = "providerName", alternate = {"ProviderName"})
    @Expose
	@Nullable
    public String providerName;

    /**
     * The Start Date Time.
     * Certificate's validity start date/time.
     */
    @SerializedName(value = "startDateTime", alternate = {"StartDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime startDateTime;

    /**
     * The Thumbprint.
     * SHA-1 thumbprint of the PFX certificate.
     */
    @SerializedName(value = "thumbprint", alternate = {"Thumbprint"})
    @Expose
	@Nullable
    public String thumbprint;

    /**
     * The User Principal Name.
     * User Principal Name of the PFX certificate.
     */
    @SerializedName(value = "userPrincipalName", alternate = {"UserPrincipalName"})
    @Expose
	@Nullable
    public String userPrincipalName;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
