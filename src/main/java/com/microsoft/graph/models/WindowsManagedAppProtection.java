// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.WindowsManagedAppDataTransferLevel;
import com.microsoft.graph.models.WindowsManagedAppClipboardSharingLevel;
import com.microsoft.graph.models.ManagedAppRemediationAction;
import com.microsoft.graph.models.ManagedAppDeviceThreatLevel;
import com.microsoft.graph.models.ManagedAppPolicy;
import com.microsoft.graph.requests.ManagedMobileAppCollectionPage;
import com.microsoft.graph.requests.TargetedManagedAppPolicyAssignmentCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Managed App Protection.
 */
public class WindowsManagedAppProtection extends ManagedAppPolicy implements IJsonBackedObject {


    /**
     * The Allowed Inbound Data Transfer Sources.
     * Indicates the sources from which data is allowed to be transferred. Some possible values are allApps or none. Possible values are: allApps, none.
     */
    @SerializedName(value = "allowedInboundDataTransferSources", alternate = {"AllowedInboundDataTransferSources"})
    @Expose
	@Nullable
    public WindowsManagedAppDataTransferLevel allowedInboundDataTransferSources;

    /**
     * The Allowed Outbound Clipboard Sharing Level.
     * Indicates the level to which the clipboard may be shared across org &amp; non-org resources. Some possible values are anyDestinationAnySource or none. Possible values are: anyDestinationAnySource, none.
     */
    @SerializedName(value = "allowedOutboundClipboardSharingLevel", alternate = {"AllowedOutboundClipboardSharingLevel"})
    @Expose
	@Nullable
    public WindowsManagedAppClipboardSharingLevel allowedOutboundClipboardSharingLevel;

    /**
     * The Allowed Outbound Data Transfer Destinations.
     * Indicates the destinations to which data is allowed to be transferred. Some possible values are allApps or none. Possible values are: allApps, none.
     */
    @SerializedName(value = "allowedOutboundDataTransferDestinations", alternate = {"AllowedOutboundDataTransferDestinations"})
    @Expose
	@Nullable
    public WindowsManagedAppDataTransferLevel allowedOutboundDataTransferDestinations;

    /**
     * The App Action If Unable To Authenticate User.
     * If set, it will specify what action to take in the case where the user is unable to checkin because their authentication token is invalid. This happens when the user is deleted or disabled in AAD. Some possible values are block or wipe. If this property is not set, no action will be taken. Possible values are: block, wipe, warn.
     */
    @SerializedName(value = "appActionIfUnableToAuthenticateUser", alternate = {"AppActionIfUnableToAuthenticateUser"})
    @Expose
	@Nullable
    public ManagedAppRemediationAction appActionIfUnableToAuthenticateUser;

    /**
     * The Deployed App Count.
     * Indicates the total number of applications for which the current policy is deployed.
     */
    @SerializedName(value = "deployedAppCount", alternate = {"DeployedAppCount"})
    @Expose
	@Nullable
    public Integer deployedAppCount;

    /**
     * The Is Assigned.
     * When TRUE, indicates that the policy is deployed to some inclusion groups. When FALSE, indicates that the policy is not deployed to any inclusion groups. Default value is FALSE.
     */
    @SerializedName(value = "isAssigned", alternate = {"IsAssigned"})
    @Expose
	@Nullable
    public Boolean isAssigned;

    /**
     * The Maximum Allowed Device Threat Level.
     * Maximum allowed device threat level, as reported by the Mobile Threat Defense app. Possible values are: notConfigured, secured, low, medium, high.
     */
    @SerializedName(value = "maximumAllowedDeviceThreatLevel", alternate = {"MaximumAllowedDeviceThreatLevel"})
    @Expose
	@Nullable
    public ManagedAppDeviceThreatLevel maximumAllowedDeviceThreatLevel;

    /**
     * The Maximum Required Os Version.
     * Versions bigger than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "maximumRequiredOsVersion", alternate = {"MaximumRequiredOsVersion"})
    @Expose
	@Nullable
    public String maximumRequiredOsVersion;

    /**
     * The Maximum Warning Os Version.
     * Versions bigger than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "maximumWarningOsVersion", alternate = {"MaximumWarningOsVersion"})
    @Expose
	@Nullable
    public String maximumWarningOsVersion;

    /**
     * The Maximum Wipe Os Version.
     * Versions bigger than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "maximumWipeOsVersion", alternate = {"MaximumWipeOsVersion"})
    @Expose
	@Nullable
    public String maximumWipeOsVersion;

    /**
     * The Minimum Required App Version.
     * Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumRequiredAppVersion", alternate = {"MinimumRequiredAppVersion"})
    @Expose
	@Nullable
    public String minimumRequiredAppVersion;

    /**
     * The Minimum Required Os Version.
     * Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumRequiredOsVersion", alternate = {"MinimumRequiredOsVersion"})
    @Expose
	@Nullable
    public String minimumRequiredOsVersion;

    /**
     * The Minimum Required Sdk Version.
     * Versions less than the specified version will block the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumRequiredSdkVersion", alternate = {"MinimumRequiredSdkVersion"})
    @Expose
	@Nullable
    public String minimumRequiredSdkVersion;

    /**
     * The Minimum Warning App Version.
     * Versions less than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumWarningAppVersion", alternate = {"MinimumWarningAppVersion"})
    @Expose
	@Nullable
    public String minimumWarningAppVersion;

    /**
     * The Minimum Warning Os Version.
     * Versions less than the specified version will result in warning message on the managed app from accessing company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumWarningOsVersion", alternate = {"MinimumWarningOsVersion"})
    @Expose
	@Nullable
    public String minimumWarningOsVersion;

    /**
     * The Minimum Wipe App Version.
     * Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumWipeAppVersion", alternate = {"MinimumWipeAppVersion"})
    @Expose
	@Nullable
    public String minimumWipeAppVersion;

    /**
     * The Minimum Wipe Os Version.
     * Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumWipeOsVersion", alternate = {"MinimumWipeOsVersion"})
    @Expose
	@Nullable
    public String minimumWipeOsVersion;

    /**
     * The Minimum Wipe Sdk Version.
     * Versions less than the specified version will wipe the managed app and the associated company data. For example: '8.1.0' or '13.1.1'.
     */
    @SerializedName(value = "minimumWipeSdkVersion", alternate = {"MinimumWipeSdkVersion"})
    @Expose
	@Nullable
    public String minimumWipeSdkVersion;

    /**
     * The Mobile Threat Defense Remediation Action.
     * Determines what action to take if the mobile threat defense threat threshold isn't met. Some possible values are block or wipe. Warn isn't a supported value for this property. Possible values are: block, wipe, warn.
     */
    @SerializedName(value = "mobileThreatDefenseRemediationAction", alternate = {"MobileThreatDefenseRemediationAction"})
    @Expose
	@Nullable
    public ManagedAppRemediationAction mobileThreatDefenseRemediationAction;

    /**
     * The Period Offline Before Access Check.
     * The period after which access is checked when the device is not connected to the internet. For example, PT5M indicates that the interval is 5 minutes in duration. A timespan value of PT0S indicates that access will be blocked immediately when the device is not connected to the internet.
     */
    @SerializedName(value = "periodOfflineBeforeAccessCheck", alternate = {"PeriodOfflineBeforeAccessCheck"})
    @Expose
	@Nullable
    public javax.xml.datatype.Duration periodOfflineBeforeAccessCheck;

    /**
     * The Period Offline Before Wipe Is Enforced.
     * The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped. For example, P5D indicates that the interval is 5 days in duration. A timespan value of PT0S indicates that managed data will never be wiped when the device is not connected to the internet.
     */
    @SerializedName(value = "periodOfflineBeforeWipeIsEnforced", alternate = {"PeriodOfflineBeforeWipeIsEnforced"})
    @Expose
	@Nullable
    public javax.xml.datatype.Duration periodOfflineBeforeWipeIsEnforced;

    /**
     * The Print Blocked.
     * When TRUE, indicates that printing is blocked from managed apps. When FALSE, indicates that printing is allowed from managed apps. Default value is FALSE.
     */
    @SerializedName(value = "printBlocked", alternate = {"PrintBlocked"})
    @Expose
	@Nullable
    public Boolean printBlocked;

    /**
     * The Apps.
     * List of apps to which the policy is deployed.
     */
    @SerializedName(value = "apps", alternate = {"Apps"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.ManagedMobileAppCollectionPage apps;

    /**
     * The Assignments.
     * Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
     */
    @SerializedName(value = "assignments", alternate = {"Assignments"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.TargetedManagedAppPolicyAssignmentCollectionPage assignments;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("apps")) {
            apps = serializer.deserializeObject(json.get("apps"), com.microsoft.graph.requests.ManagedMobileAppCollectionPage.class);
        }

        if (json.has("assignments")) {
            assignments = serializer.deserializeObject(json.get("assignments"), com.microsoft.graph.requests.TargetedManagedAppPolicyAssignmentCollectionPage.class);
        }
    }
}
