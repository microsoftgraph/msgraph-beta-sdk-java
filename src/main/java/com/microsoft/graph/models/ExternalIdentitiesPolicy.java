// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.PolicyBase;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the External Identities Policy.
 */
public class ExternalIdentitiesPolicy extends PolicyBase implements IJsonBackedObject {


    /**
     * The Allow Deleted Identities Data Removal.
     * Notifies Azure AD whether to clean up the user information about the external identity, from the guest tenant, when the user is deleted in their home tenant.
     */
    @SerializedName(value = "allowDeletedIdentitiesDataRemoval", alternate = {"AllowDeletedIdentitiesDataRemoval"})
    @Expose
	@Nullable
    public Boolean allowDeletedIdentitiesDataRemoval;

    /**
     * The Allow External Identities To Leave.
     * Defines whether external users can leave the guest tenant. If set to false, self-service controls are not enabled, and the admin of the guest tenant must manually remove the external user from the guest tenant.
     */
    @SerializedName(value = "allowExternalIdentitiesToLeave", alternate = {"AllowExternalIdentitiesToLeave"})
    @Expose
	@Nullable
    public Boolean allowExternalIdentitiesToLeave;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
