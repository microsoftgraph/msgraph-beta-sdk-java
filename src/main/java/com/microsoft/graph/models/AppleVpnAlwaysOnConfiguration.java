// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.VpnServiceExceptionAction;
import com.microsoft.graph.models.SpecifiedCaptiveNetworkPlugins;
import com.microsoft.graph.models.VpnTunnelConfigurationType;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Apple Vpn Always On Configuration.
 */
public class AppleVpnAlwaysOnConfiguration implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Air Print Exception Action.
     * Determine whether AirPrint service will be exempt from the always-on VPN connection. Possible values are: forceTrafficViaVPN, allowTrafficOutside, dropTraffic.
     */
    @SerializedName(value = "airPrintExceptionAction", alternate = {"AirPrintExceptionAction"})
    @Expose
	@Nullable
    public VpnServiceExceptionAction airPrintExceptionAction;

    /**
     * The Allow All Captive Network Plugins.
     * Specifies whether traffic from all captive network plugins should be allowed outside the vpn
     */
    @SerializedName(value = "allowAllCaptiveNetworkPlugins", alternate = {"AllowAllCaptiveNetworkPlugins"})
    @Expose
	@Nullable
    public Boolean allowAllCaptiveNetworkPlugins;

    /**
     * The Allow Captive Web Sheet.
     * Determines whether traffic from the Websheet app is allowed outside of the VPN
     */
    @SerializedName(value = "allowCaptiveWebSheet", alternate = {"AllowCaptiveWebSheet"})
    @Expose
	@Nullable
    public Boolean allowCaptiveWebSheet;

    /**
     * The Allowed Captive Network Plugins.
     * Determines whether all, some, or no non-native captive networking apps are allowed
     */
    @SerializedName(value = "allowedCaptiveNetworkPlugins", alternate = {"AllowedCaptiveNetworkPlugins"})
    @Expose
	@Nullable
    public SpecifiedCaptiveNetworkPlugins allowedCaptiveNetworkPlugins;

    /**
     * The Cellular Exception Action.
     * Determine whether Cellular service will be exempt from the always-on VPN connection. Possible values are: forceTrafficViaVPN, allowTrafficOutside, dropTraffic.
     */
    @SerializedName(value = "cellularExceptionAction", alternate = {"CellularExceptionAction"})
    @Expose
	@Nullable
    public VpnServiceExceptionAction cellularExceptionAction;

    /**
     * The Nat Keep Alive Interval In Seconds.
     * Specifies how often in seconds to send a network address translation keepalive package through the VPN
     */
    @SerializedName(value = "natKeepAliveIntervalInSeconds", alternate = {"NatKeepAliveIntervalInSeconds"})
    @Expose
	@Nullable
    public Integer natKeepAliveIntervalInSeconds;

    /**
     * The Nat Keep Alive Offload Enable.
     * Enable hardware offloading of NAT keepalive signals when the device is asleep
     */
    @SerializedName(value = "natKeepAliveOffloadEnable", alternate = {"NatKeepAliveOffloadEnable"})
    @Expose
	@Nullable
    public Boolean natKeepAliveOffloadEnable;

    /**
     * The Tunnel Configuration.
     * Determines what connections the specific tunnel configuration applies to. Possible values are: wifiAndCellular, cellular, wifi.
     */
    @SerializedName(value = "tunnelConfiguration", alternate = {"TunnelConfiguration"})
    @Expose
	@Nullable
    public VpnTunnelConfigurationType tunnelConfiguration;

    /**
     * The User Toggle Enabled.
     * Allow the user to toggle the VPN configuration using the UI
     */
    @SerializedName(value = "userToggleEnabled", alternate = {"UserToggleEnabled"})
    @Expose
	@Nullable
    public Boolean userToggleEnabled;

    /**
     * The Voicemail Exception Action.
     * Determine whether voicemail service will be exempt from the always-on VPN connection. Possible values are: forceTrafficViaVPN, allowTrafficOutside, dropTraffic.
     */
    @SerializedName(value = "voicemailExceptionAction", alternate = {"VoicemailExceptionAction"})
    @Expose
	@Nullable
    public VpnServiceExceptionAction voicemailExceptionAction;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
