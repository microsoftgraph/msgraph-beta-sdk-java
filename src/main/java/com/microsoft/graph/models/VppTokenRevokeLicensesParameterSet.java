// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;


import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Vpp Token Revoke Licenses Parameter Set.
 */
public class VppTokenRevokeLicensesParameterSet {
    /**
     * The notify Managed Devices.
     * 
     */
    @SerializedName(value = "notifyManagedDevices", alternate = {"NotifyManagedDevices"})
    @Expose
	@Nullable
    public Boolean notifyManagedDevices;

    /**
     * The revoke Untracked Licenses.
     * 
     */
    @SerializedName(value = "revokeUntrackedLicenses", alternate = {"RevokeUntrackedLicenses"})
    @Expose
	@Nullable
    public Boolean revokeUntrackedLicenses;


    /**
     * Instiaciates a new VppTokenRevokeLicensesParameterSet
     */
    public VppTokenRevokeLicensesParameterSet() {}
    /**
     * Instiaciates a new VppTokenRevokeLicensesParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected VppTokenRevokeLicensesParameterSet(@Nonnull final VppTokenRevokeLicensesParameterSetBuilder builder) {
        this.notifyManagedDevices = builder.notifyManagedDevices;
        this.revokeUntrackedLicenses = builder.revokeUntrackedLicenses;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static VppTokenRevokeLicensesParameterSetBuilder newBuilder() {
        return new VppTokenRevokeLicensesParameterSetBuilder();
    }
    /**
     * Fluent builder for the VppTokenRevokeLicensesParameterSet
     */
    public static final class VppTokenRevokeLicensesParameterSetBuilder {
        /**
         * The notifyManagedDevices parameter value
         */
        @Nullable
        protected Boolean notifyManagedDevices;
        /**
         * Sets the NotifyManagedDevices
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public VppTokenRevokeLicensesParameterSetBuilder withNotifyManagedDevices(@Nullable final Boolean val) {
            this.notifyManagedDevices = val;
            return this;
        }
        /**
         * The revokeUntrackedLicenses parameter value
         */
        @Nullable
        protected Boolean revokeUntrackedLicenses;
        /**
         * Sets the RevokeUntrackedLicenses
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public VppTokenRevokeLicensesParameterSetBuilder withRevokeUntrackedLicenses(@Nullable final Boolean val) {
            this.revokeUntrackedLicenses = val;
            return this;
        }
        /**
         * Instanciates a new VppTokenRevokeLicensesParameterSetBuilder
         */
        @Nullable
        protected VppTokenRevokeLicensesParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public VppTokenRevokeLicensesParameterSet build() {
            return new VppTokenRevokeLicensesParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.notifyManagedDevices != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("notifyManagedDevices", notifyManagedDevices));
        }
        if(this.revokeUntrackedLicenses != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("revokeUntrackedLicenses", revokeUntrackedLicenses));
        }
        return result;
    }
}
