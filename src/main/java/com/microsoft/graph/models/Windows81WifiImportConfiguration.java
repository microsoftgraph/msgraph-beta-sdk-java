// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows81Wifi Import Configuration.
 */
public class Windows81WifiImportConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Payload.
     * Payload. (UTF8 encoded byte array). This is the XML file saved on the device you used to connect to the Wi-Fi endpoint.
     */
    @SerializedName(value = "payload", alternate = {"Payload"})
    @Expose
	@Nullable
    public byte[] payload;

    /**
     * The Payload File Name.
     * Payload file name (.xml).
     */
    @SerializedName(value = "payloadFileName", alternate = {"PayloadFileName"})
    @Expose
	@Nullable
    public String payloadFileName;

    /**
     * The Profile Name.
     * Profile name displayed in the UI.
     */
    @SerializedName(value = "profileName", alternate = {"ProfileName"})
    @Expose
	@Nullable
    public String profileName;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
