// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.AppListType;
import com.microsoft.graph.models.AppListItem;
import com.microsoft.graph.models.RequiredPasswordType;
import com.microsoft.graph.models.MacOSPrivacyAccessControlItem;
import com.microsoft.graph.models.MacOSSoftwareUpdateDelayPolicy;
import com.microsoft.graph.models.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Mac OSGeneral Device Configuration.
 */
public class MacOSGeneralDeviceConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Adding Game Center Friends Blocked.
     * Yes prevents users from adding friends to Game Center. Available for devices running macOS versions 10.13 and later.
     */
    @SerializedName(value = "addingGameCenterFriendsBlocked", alternate = {"AddingGameCenterFriendsBlocked"})
    @Expose
	@Nullable
    public Boolean addingGameCenterFriendsBlocked;

    /**
     * The Air Drop Blocked.
     * Indicates whether or not to allow AirDrop.
     */
    @SerializedName(value = "airDropBlocked", alternate = {"AirDropBlocked"})
    @Expose
	@Nullable
    public Boolean airDropBlocked;

    /**
     * The Apple Watch Block Auto Unlock.
     * Indicates whether or to block users from unlocking their Mac with Apple Watch.
     */
    @SerializedName(value = "appleWatchBlockAutoUnlock", alternate = {"AppleWatchBlockAutoUnlock"})
    @Expose
	@Nullable
    public Boolean appleWatchBlockAutoUnlock;

    /**
     * The Camera Blocked.
     * Indicates whether or not to block the user from accessing the camera of the device.
     */
    @SerializedName(value = "cameraBlocked", alternate = {"CameraBlocked"})
    @Expose
	@Nullable
    public Boolean cameraBlocked;

    /**
     * The Classroom App Block Remote Screen Observation.
     * Indicates whether or not to allow remote screen observation by Classroom app. Requires MDM enrollment via Apple School Manager or Apple Business Manager.
     */
    @SerializedName(value = "classroomAppBlockRemoteScreenObservation", alternate = {"ClassroomAppBlockRemoteScreenObservation"})
    @Expose
	@Nullable
    public Boolean classroomAppBlockRemoteScreenObservation;

    /**
     * The Classroom App Force Unprompted Screen Observation.
     * Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting. Requires MDM enrollment via Apple School Manager or Apple Business Manager.
     */
    @SerializedName(value = "classroomAppForceUnpromptedScreenObservation", alternate = {"ClassroomAppForceUnpromptedScreenObservation"})
    @Expose
	@Nullable
    public Boolean classroomAppForceUnpromptedScreenObservation;

    /**
     * The Classroom Force Automatically Join Classes.
     * Indicates whether or not to automatically give permission to the teacher's requests, without prompting the student. Requires MDM enrollment via Apple School Manager or Apple Business Manager.
     */
    @SerializedName(value = "classroomForceAutomaticallyJoinClasses", alternate = {"ClassroomForceAutomaticallyJoinClasses"})
    @Expose
	@Nullable
    public Boolean classroomForceAutomaticallyJoinClasses;

    /**
     * The Classroom Force Request Permission To Leave Classes.
     * Indicates whether a student enrolled in an unmanaged course via Classroom will be required to request permission from the teacher when attempting to leave the course. Requires MDM enrollment via Apple School Manager or Apple Business Manager.
     */
    @SerializedName(value = "classroomForceRequestPermissionToLeaveClasses", alternate = {"ClassroomForceRequestPermissionToLeaveClasses"})
    @Expose
	@Nullable
    public Boolean classroomForceRequestPermissionToLeaveClasses;

    /**
     * The Classroom Force Unprompted App And Device Lock.
     * Indicates whether or not to allow the teacher to lock apps or the device without prompting the student. Requires MDM enrollment via Apple School Manager or Apple Business Manager.
     */
    @SerializedName(value = "classroomForceUnpromptedAppAndDeviceLock", alternate = {"ClassroomForceUnpromptedAppAndDeviceLock"})
    @Expose
	@Nullable
    public Boolean classroomForceUnpromptedAppAndDeviceLock;

    /**
     * The Compliant App List Type.
     * List that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.
     */
    @SerializedName(value = "compliantAppListType", alternate = {"CompliantAppListType"})
    @Expose
	@Nullable
    public AppListType compliantAppListType;

    /**
     * The Compliant Apps List.
     * List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
     */
    @SerializedName(value = "compliantAppsList", alternate = {"CompliantAppsList"})
    @Expose
	@Nullable
    public java.util.List<AppListItem> compliantAppsList;

    /**
     * The Content Caching Blocked.
     * Indicates whether or not to allow content caching.
     */
    @SerializedName(value = "contentCachingBlocked", alternate = {"ContentCachingBlocked"})
    @Expose
	@Nullable
    public Boolean contentCachingBlocked;

    /**
     * The Definition Lookup Blocked.
     * Indicates whether or not to block definition lookup.
     */
    @SerializedName(value = "definitionLookupBlocked", alternate = {"DefinitionLookupBlocked"})
    @Expose
	@Nullable
    public Boolean definitionLookupBlocked;

    /**
     * The Email In Domain Suffixes.
     * An email address lacking a suffix that matches any of these strings will be considered out-of-domain.
     */
    @SerializedName(value = "emailInDomainSuffixes", alternate = {"EmailInDomainSuffixes"})
    @Expose
	@Nullable
    public java.util.List<String> emailInDomainSuffixes;

    /**
     * The Erase Content And Settings Blocked.
     * TRUE disables the reset option on supervised devices. FALSE enables the reset option on supervised devices. Available for devices running macOS versions 12.0 and later.
     */
    @SerializedName(value = "eraseContentAndSettingsBlocked", alternate = {"EraseContentAndSettingsBlocked"})
    @Expose
	@Nullable
    public Boolean eraseContentAndSettingsBlocked;

    /**
     * The Game Center Blocked.
     * Yes disables Game Center, and the Game Center icon is removed from the Home screen. Available for devices running macOS versions 10.13 and later.
     */
    @SerializedName(value = "gameCenterBlocked", alternate = {"GameCenterBlocked"})
    @Expose
	@Nullable
    public Boolean gameCenterBlocked;

    /**
     * The ICloud Block Activity Continuation.
     * Indicates whether or not to block the user from continuing work that they started on a MacOS device on another iOS or MacOS device (MacOS 10.15 or later).
     */
    @SerializedName(value = "iCloudBlockActivityContinuation", alternate = {"ICloudBlockActivityContinuation"})
    @Expose
	@Nullable
    public Boolean iCloudBlockActivityContinuation;

    /**
     * The ICloud Block Address Book.
     * Indicates whether or not to block iCloud from syncing contacts.
     */
    @SerializedName(value = "iCloudBlockAddressBook", alternate = {"ICloudBlockAddressBook"})
    @Expose
	@Nullable
    public Boolean iCloudBlockAddressBook;

    /**
     * The ICloud Block Bookmarks.
     * Indicates whether or not to block iCloud from syncing bookmarks.
     */
    @SerializedName(value = "iCloudBlockBookmarks", alternate = {"ICloudBlockBookmarks"})
    @Expose
	@Nullable
    public Boolean iCloudBlockBookmarks;

    /**
     * The ICloud Block Calendar.
     * Indicates whether or not to block iCloud from syncing calendars.
     */
    @SerializedName(value = "iCloudBlockCalendar", alternate = {"ICloudBlockCalendar"})
    @Expose
	@Nullable
    public Boolean iCloudBlockCalendar;

    /**
     * The ICloud Block Document Sync.
     * Indicates whether or not to block iCloud document sync.
     */
    @SerializedName(value = "iCloudBlockDocumentSync", alternate = {"ICloudBlockDocumentSync"})
    @Expose
	@Nullable
    public Boolean iCloudBlockDocumentSync;

    /**
     * The ICloud Block Mail.
     * Indicates whether or not to block iCloud from syncing mail.
     */
    @SerializedName(value = "iCloudBlockMail", alternate = {"ICloudBlockMail"})
    @Expose
	@Nullable
    public Boolean iCloudBlockMail;

    /**
     * The ICloud Block Notes.
     * Indicates whether or not to block iCloud from syncing notes.
     */
    @SerializedName(value = "iCloudBlockNotes", alternate = {"ICloudBlockNotes"})
    @Expose
	@Nullable
    public Boolean iCloudBlockNotes;

    /**
     * The ICloud Block Photo Library.
     * Indicates whether or not to block iCloud Photo Library.
     */
    @SerializedName(value = "iCloudBlockPhotoLibrary", alternate = {"ICloudBlockPhotoLibrary"})
    @Expose
	@Nullable
    public Boolean iCloudBlockPhotoLibrary;

    /**
     * The ICloud Block Reminders.
     * Indicates whether or not to block iCloud from syncing reminders.
     */
    @SerializedName(value = "iCloudBlockReminders", alternate = {"ICloudBlockReminders"})
    @Expose
	@Nullable
    public Boolean iCloudBlockReminders;

    /**
     * The ITunes Block File Sharing.
     * Indicates whether or not to block files from being transferred using iTunes.
     */
    @SerializedName(value = "iTunesBlockFileSharing", alternate = {"ITunesBlockFileSharing"})
    @Expose
	@Nullable
    public Boolean iTunesBlockFileSharing;

    /**
     * The ITunes Block Music Service.
     * Indicates whether or not to block Music service and revert Music app to classic mode.
     */
    @SerializedName(value = "iTunesBlockMusicService", alternate = {"ITunesBlockMusicService"})
    @Expose
	@Nullable
    public Boolean iTunesBlockMusicService;

    /**
     * The Keyboard Block Dictation.
     * Indicates whether or not to block the user from using dictation input.
     */
    @SerializedName(value = "keyboardBlockDictation", alternate = {"KeyboardBlockDictation"})
    @Expose
	@Nullable
    public Boolean keyboardBlockDictation;

    /**
     * The Keychain Block Cloud Sync.
     * Indicates whether or not iCloud keychain synchronization is blocked (macOS 10.12 and later).
     */
    @SerializedName(value = "keychainBlockCloudSync", alternate = {"KeychainBlockCloudSync"})
    @Expose
	@Nullable
    public Boolean keychainBlockCloudSync;

    /**
     * The Multiplayer Gaming Blocked.
     * TRUE prevents multiplayer gaming when using Game Center. FALSE allows multiplayer gaming when using Game Center. Available for devices running macOS versions 10.13 and later.
     */
    @SerializedName(value = "multiplayerGamingBlocked", alternate = {"MultiplayerGamingBlocked"})
    @Expose
	@Nullable
    public Boolean multiplayerGamingBlocked;

    /**
     * The Password Block Air Drop Sharing.
     * Indicates whether or not to block sharing passwords with the AirDrop passwords feature.
     */
    @SerializedName(value = "passwordBlockAirDropSharing", alternate = {"PasswordBlockAirDropSharing"})
    @Expose
	@Nullable
    public Boolean passwordBlockAirDropSharing;

    /**
     * The Password Block Auto Fill.
     * Indicates whether or not to block the AutoFill Passwords feature.
     */
    @SerializedName(value = "passwordBlockAutoFill", alternate = {"PasswordBlockAutoFill"})
    @Expose
	@Nullable
    public Boolean passwordBlockAutoFill;

    /**
     * The Password Block Fingerprint Unlock.
     * Indicates whether or not to block fingerprint unlock.
     */
    @SerializedName(value = "passwordBlockFingerprintUnlock", alternate = {"PasswordBlockFingerprintUnlock"})
    @Expose
	@Nullable
    public Boolean passwordBlockFingerprintUnlock;

    /**
     * The Password Block Modification.
     * Indicates whether or not to allow passcode modification.
     */
    @SerializedName(value = "passwordBlockModification", alternate = {"PasswordBlockModification"})
    @Expose
	@Nullable
    public Boolean passwordBlockModification;

    /**
     * The Password Block Proximity Requests.
     * Indicates whether or not to block requesting passwords from nearby devices.
     */
    @SerializedName(value = "passwordBlockProximityRequests", alternate = {"PasswordBlockProximityRequests"})
    @Expose
	@Nullable
    public Boolean passwordBlockProximityRequests;

    /**
     * The Password Block Simple.
     * Block simple passwords.
     */
    @SerializedName(value = "passwordBlockSimple", alternate = {"PasswordBlockSimple"})
    @Expose
	@Nullable
    public Boolean passwordBlockSimple;

    /**
     * The Password Expiration Days.
     * Number of days before the password expires.
     */
    @SerializedName(value = "passwordExpirationDays", alternate = {"PasswordExpirationDays"})
    @Expose
	@Nullable
    public Integer passwordExpirationDays;

    /**
     * The Password Maximum Attempt Count.
     * The number of allowed failed attempts to enter the passcode at the device's lock screen. Valid values 2 to 11
     */
    @SerializedName(value = "passwordMaximumAttemptCount", alternate = {"PasswordMaximumAttemptCount"})
    @Expose
	@Nullable
    public Integer passwordMaximumAttemptCount;

    /**
     * The Password Minimum Character Set Count.
     * Number of character sets a password must contain. Valid values 0 to 4
     */
    @SerializedName(value = "passwordMinimumCharacterSetCount", alternate = {"PasswordMinimumCharacterSetCount"})
    @Expose
	@Nullable
    public Integer passwordMinimumCharacterSetCount;

    /**
     * The Password Minimum Length.
     * Minimum length of passwords.
     */
    @SerializedName(value = "passwordMinimumLength", alternate = {"PasswordMinimumLength"})
    @Expose
	@Nullable
    public Integer passwordMinimumLength;

    /**
     * The Password Minutes Of Inactivity Before Lock.
     * Minutes of inactivity required before a password is required.
     */
    @SerializedName(value = "passwordMinutesOfInactivityBeforeLock", alternate = {"PasswordMinutesOfInactivityBeforeLock"})
    @Expose
	@Nullable
    public Integer passwordMinutesOfInactivityBeforeLock;

    /**
     * The Password Minutes Of Inactivity Before Screen Timeout.
     * Minutes of inactivity required before the screen times out.
     */
    @SerializedName(value = "passwordMinutesOfInactivityBeforeScreenTimeout", alternate = {"PasswordMinutesOfInactivityBeforeScreenTimeout"})
    @Expose
	@Nullable
    public Integer passwordMinutesOfInactivityBeforeScreenTimeout;

    /**
     * The Password Minutes Until Failed Login Reset.
     * The number of minutes before the login is reset after the maximum number of unsuccessful login attempts is reached.
     */
    @SerializedName(value = "passwordMinutesUntilFailedLoginReset", alternate = {"PasswordMinutesUntilFailedLoginReset"})
    @Expose
	@Nullable
    public Integer passwordMinutesUntilFailedLoginReset;

    /**
     * The Password Previous Password Block Count.
     * Number of previous passwords to block.
     */
    @SerializedName(value = "passwordPreviousPasswordBlockCount", alternate = {"PasswordPreviousPasswordBlockCount"})
    @Expose
	@Nullable
    public Integer passwordPreviousPasswordBlockCount;

    /**
     * The Password Required.
     * Whether or not to require a password.
     */
    @SerializedName(value = "passwordRequired", alternate = {"PasswordRequired"})
    @Expose
	@Nullable
    public Boolean passwordRequired;

    /**
     * The Password Required Type.
     * Type of password that is required. Possible values are: deviceDefault, alphanumeric, numeric.
     */
    @SerializedName(value = "passwordRequiredType", alternate = {"PasswordRequiredType"})
    @Expose
	@Nullable
    public RequiredPasswordType passwordRequiredType;

    /**
     * The Privacy Access Controls.
     * List of privacy preference policy controls. This collection can contain a maximum of 10000 elements.
     */
    @SerializedName(value = "privacyAccessControls", alternate = {"PrivacyAccessControls"})
    @Expose
	@Nullable
    public java.util.List<MacOSPrivacyAccessControlItem> privacyAccessControls;

    /**
     * The Safari Block Autofill.
     * Indicates whether or not to block the user from using Auto fill in Safari.
     */
    @SerializedName(value = "safariBlockAutofill", alternate = {"SafariBlockAutofill"})
    @Expose
	@Nullable
    public Boolean safariBlockAutofill;

    /**
     * The Screen Capture Blocked.
     * Indicates whether or not to block the user from taking Screenshots.
     */
    @SerializedName(value = "screenCaptureBlocked", alternate = {"ScreenCaptureBlocked"})
    @Expose
	@Nullable
    public Boolean screenCaptureBlocked;

    /**
     * The Software Update Major OSDeferred Install Delay In Days.
     * Specify the number of days (1-90) to delay visibility of major OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90
     */
    @SerializedName(value = "softwareUpdateMajorOSDeferredInstallDelayInDays", alternate = {"SoftwareUpdateMajorOSDeferredInstallDelayInDays"})
    @Expose
	@Nullable
    public Integer softwareUpdateMajorOSDeferredInstallDelayInDays;

    /**
     * The Software Update Minor OSDeferred Install Delay In Days.
     * Specify the number of days (1-90) to delay visibility of minor OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90
     */
    @SerializedName(value = "softwareUpdateMinorOSDeferredInstallDelayInDays", alternate = {"SoftwareUpdateMinorOSDeferredInstallDelayInDays"})
    @Expose
	@Nullable
    public Integer softwareUpdateMinorOSDeferredInstallDelayInDays;

    /**
     * The Software Update Non OSDeferred Install Delay In Days.
     * Specify the number of days (1-90) to delay visibility of non-OS software updates. Available for devices running macOS versions 11.3 and later. Valid values 0 to 90
     */
    @SerializedName(value = "softwareUpdateNonOSDeferredInstallDelayInDays", alternate = {"SoftwareUpdateNonOSDeferredInstallDelayInDays"})
    @Expose
	@Nullable
    public Integer softwareUpdateNonOSDeferredInstallDelayInDays;

    /**
     * The Software Updates Enforced Delay In Days.
     * Sets how many days a software update will be delyed for a supervised device. Valid values 0 to 90
     */
    @SerializedName(value = "softwareUpdatesEnforcedDelayInDays", alternate = {"SoftwareUpdatesEnforcedDelayInDays"})
    @Expose
	@Nullable
    public Integer softwareUpdatesEnforcedDelayInDays;

    /**
     * The Spotlight Block Internet Results.
     * Indicates whether or not to block Spotlight from returning any results from an Internet search.
     */
    @SerializedName(value = "spotlightBlockInternetResults", alternate = {"SpotlightBlockInternetResults"})
    @Expose
	@Nullable
    public Boolean spotlightBlockInternetResults;

    /**
     * The Update Delay Policy.
     * Determines whether to delay OS and/or app updates for macOS. Possible values are: none, delayOSUpdateVisibility, delayAppUpdateVisibility, unknownFutureValue, delayMajorOsUpdateVisibility.
     */
    @SerializedName(value = "updateDelayPolicy", alternate = {"UpdateDelayPolicy"})
    @Expose
	@Nullable
    public EnumSet<MacOSSoftwareUpdateDelayPolicy> updateDelayPolicy;

    /**
     * The Wallpaper Modification Blocked.
     * TRUE prevents the wallpaper from being changed. FALSE allows the wallpaper to be changed. Available for devices running macOS versions 10.13 and later.
     */
    @SerializedName(value = "wallpaperModificationBlocked", alternate = {"WallpaperModificationBlocked"})
    @Expose
	@Nullable
    public Boolean wallpaperModificationBlocked;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
