// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.AccessPackageAssignmentPolicy;
import com.microsoft.graph.models.AccessPackageCatalog;
import com.microsoft.graph.models.AccessPackageResourceRoleScope;
import com.microsoft.graph.models.AccessPackage;
import com.microsoft.graph.models.Group;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.AccessPackageAssignmentPolicyCollectionPage;
import com.microsoft.graph.requests.AccessPackageResourceRoleScopeCollectionPage;
import com.microsoft.graph.requests.AccessPackageCollectionPage;
import com.microsoft.graph.requests.GroupCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Access Package.
 */
public class AccessPackage extends Entity implements IJsonBackedObject {


    /**
     * The Catalog Id.
     * ID of the access package catalog referencing this access package. Read-only.
     */
    @SerializedName(value = "catalogId", alternate = {"CatalogId"})
    @Expose
	@Nullable
    public String catalogId;

    /**
     * The Created By.
     * UPN of the user or identity of the subject who created this resource. Read-only.
     */
    @SerializedName(value = "createdBy", alternate = {"CreatedBy"})
    @Expose
	@Nullable
    public String createdBy;

    /**
     * The Created Date Time.
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Description.
     * The description of the access package.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Display Name.
     * The display name of the access package.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The Is Hidden.
     * Whether the access package is hidden from the requestor.
     */
    @SerializedName(value = "isHidden", alternate = {"IsHidden"})
    @Expose
	@Nullable
    public Boolean isHidden;

    /**
     * The Is Role Scopes Visible.
     * Indicates whether role scopes are visible.
     */
    @SerializedName(value = "isRoleScopesVisible", alternate = {"IsRoleScopesVisible"})
    @Expose
	@Nullable
    public Boolean isRoleScopesVisible;

    /**
     * The Modified By.
     * The UPN of the user who last modified this resource. Read-only.
     */
    @SerializedName(value = "modifiedBy", alternate = {"ModifiedBy"})
    @Expose
	@Nullable
    public String modifiedBy;

    /**
     * The Modified Date Time.
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    @SerializedName(value = "modifiedDateTime", alternate = {"ModifiedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime modifiedDateTime;

    /**
     * The Access Package Assignment Policies.
     * Read-only. Nullable.
     */
    @SerializedName(value = "accessPackageAssignmentPolicies", alternate = {"AccessPackageAssignmentPolicies"})
    @Expose
	@Nullable
    public AccessPackageAssignmentPolicyCollectionPage accessPackageAssignmentPolicies;

    /**
     * The Access Package Catalog.
     * Read-only. Nullable.
     */
    @SerializedName(value = "accessPackageCatalog", alternate = {"AccessPackageCatalog"})
    @Expose
	@Nullable
    public AccessPackageCatalog accessPackageCatalog;

    /**
     * The Access Package Resource Role Scopes.
     * Nullable.
     */
    @SerializedName(value = "accessPackageResourceRoleScopes", alternate = {"AccessPackageResourceRoleScopes"})
    @Expose
	@Nullable
    public AccessPackageResourceRoleScopeCollectionPage accessPackageResourceRoleScopes;

    /**
     * The Access Packages Incompatible With.
     * The access packages that are incompatible with this package. Read-only.
     */
	@Nullable
    public AccessPackageCollectionPage accessPackagesIncompatibleWith;

    /**
     * The Incompatible Access Packages.
     * The  access packages whose assigned users are ineligible to be assigned this access package.
     */
	@Nullable
    public AccessPackageCollectionPage incompatibleAccessPackages;

    /**
     * The Incompatible Groups.
     * The groups whose members are ineligible to be assigned this access package.
     */
    @SerializedName(value = "incompatibleGroups", alternate = {"IncompatibleGroups"})
    @Expose
	@Nullable
    public GroupCollectionPage incompatibleGroups;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("accessPackageAssignmentPolicies")) {
            accessPackageAssignmentPolicies = serializer.deserializeObject(json.get("accessPackageAssignmentPolicies"), AccessPackageAssignmentPolicyCollectionPage.class);
        }

        if (json.has("accessPackageResourceRoleScopes")) {
            accessPackageResourceRoleScopes = serializer.deserializeObject(json.get("accessPackageResourceRoleScopes"), AccessPackageResourceRoleScopeCollectionPage.class);
        }

        if (json.has("accessPackagesIncompatibleWith")) {
            accessPackagesIncompatibleWith = serializer.deserializeObject(json.get("accessPackagesIncompatibleWith"), AccessPackageCollectionPage.class);
        }

        if (json.has("incompatibleAccessPackages")) {
            incompatibleAccessPackages = serializer.deserializeObject(json.get("incompatibleAccessPackages"), AccessPackageCollectionPage.class);
        }

        if (json.has("incompatibleGroups")) {
            incompatibleGroups = serializer.deserializeObject(json.get("incompatibleGroups"), GroupCollectionPage.class);
        }
    }
}
