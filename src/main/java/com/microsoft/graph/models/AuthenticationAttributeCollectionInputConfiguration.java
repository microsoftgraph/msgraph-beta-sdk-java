// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.AuthenticationAttributeCollectionInputType;
import com.microsoft.graph.models.AuthenticationAttributeCollectionOptionConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Authentication Attribute Collection Input Configuration.
 */
public class AuthenticationAttributeCollectionInputConfiguration implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Attribute.
     * The built-in or custom attribute for which a value is being collected.
     */
    @SerializedName(value = "attribute", alternate = {"Attribute"})
    @Expose
	@Nullable
    public String attribute;

    /**
     * The Default Value.
     * The default value of the attribute displayed to the end user.
     */
    @SerializedName(value = "defaultValue", alternate = {"DefaultValue"})
    @Expose
	@Nullable
    public String defaultValue;

    /**
     * The Editable.
     * Whether the attribute is editable by the end user.
     */
    @SerializedName(value = "editable", alternate = {"Editable"})
    @Expose
	@Nullable
    public Boolean editable;

    /**
     * The Hidden.
     * Whether the attribute is displayed to the end user.
     */
    @SerializedName(value = "hidden", alternate = {"Hidden"})
    @Expose
	@Nullable
    public Boolean hidden;

    /**
     * The Input Type.
     * The type of input field. The possible values are: text, radioSingleSelect, checkboxMultiSelect, boolean, checkboxSingleSelect, unknownFutureValue.
     */
    @SerializedName(value = "inputType", alternate = {"InputType"})
    @Expose
	@Nullable
    public AuthenticationAttributeCollectionInputType inputType;

    /**
     * The Label.
     * The label of the attribute field that will be displayed to end user, unless overridden.
     */
    @SerializedName(value = "label", alternate = {"Label"})
    @Expose
	@Nullable
    public String label;

    /**
     * The Options.
     * The option values for certain multiple-option input types.
     */
    @SerializedName(value = "options", alternate = {"Options"})
    @Expose
	@Nullable
    public java.util.List<AuthenticationAttributeCollectionOptionConfiguration> options;

    /**
     * The Required.
     * Whether the field is required.
     */
    @SerializedName(value = "required", alternate = {"Required"})
    @Expose
	@Nullable
    public Boolean required;

    /**
     * The Validation Reg Ex.
     * The regex for the value of the field.
     */
    @SerializedName(value = "validationRegEx", alternate = {"ValidationRegEx"})
    @Expose
	@Nullable
    public String validationRegEx;

    /**
     * The Write To Directory.
     * Whether the value collected will be stored.
     */
    @SerializedName(value = "writeToDirectory", alternate = {"WriteToDirectory"})
    @Expose
	@Nullable
    public Boolean writeToDirectory;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
