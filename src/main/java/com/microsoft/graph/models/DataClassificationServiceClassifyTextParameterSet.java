// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;

import com.microsoft.graph.models.SensitiveTypeScope;
import com.microsoft.graph.models.MlClassificationMatchTolerance;
import com.microsoft.graph.models.ClassificationJobResponse;
import java.util.EnumSet;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Data Classification Service Classify Text Parameter Set.
 */
public class DataClassificationServiceClassifyTextParameterSet {
    /**
     * The text.
     * 
     */
    @SerializedName(value = "text", alternate = {"Text"})
    @Expose
	@Nullable
    public String text;

    /**
     * The file Extension.
     * 
     */
    @SerializedName(value = "fileExtension", alternate = {"FileExtension"})
    @Expose
	@Nullable
    public String fileExtension;

    /**
     * The sensitive Type Ids.
     * 
     */
    @SerializedName(value = "sensitiveTypeIds", alternate = {"SensitiveTypeIds"})
    @Expose
	@Nullable
    public java.util.List<String> sensitiveTypeIds;

    /**
     * The scopes To Run.
     * 
     */
    @SerializedName(value = "scopesToRun", alternate = {"ScopesToRun"})
    @Expose
	@Nullable
    public EnumSet<SensitiveTypeScope> scopesToRun;

    /**
     * The match Tolerances To Include.
     * 
     */
    @SerializedName(value = "matchTolerancesToInclude", alternate = {"MatchTolerancesToInclude"})
    @Expose
	@Nullable
    public EnumSet<MlClassificationMatchTolerance> matchTolerancesToInclude;


    /**
     * Instiaciates a new DataClassificationServiceClassifyTextParameterSet
     */
    public DataClassificationServiceClassifyTextParameterSet() {}
    /**
     * Instiaciates a new DataClassificationServiceClassifyTextParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected DataClassificationServiceClassifyTextParameterSet(@Nonnull final DataClassificationServiceClassifyTextParameterSetBuilder builder) {
        this.text = builder.text;
        this.fileExtension = builder.fileExtension;
        this.sensitiveTypeIds = builder.sensitiveTypeIds;
        this.scopesToRun = builder.scopesToRun;
        this.matchTolerancesToInclude = builder.matchTolerancesToInclude;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static DataClassificationServiceClassifyTextParameterSetBuilder newBuilder() {
        return new DataClassificationServiceClassifyTextParameterSetBuilder();
    }
    /**
     * Fluent builder for the DataClassificationServiceClassifyTextParameterSet
     */
    public static final class DataClassificationServiceClassifyTextParameterSetBuilder {
        /**
         * The text parameter value
         */
        @Nullable
        protected String text;
        /**
         * Sets the Text
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSetBuilder withText(@Nullable final String val) {
            this.text = val;
            return this;
        }
        /**
         * The fileExtension parameter value
         */
        @Nullable
        protected String fileExtension;
        /**
         * Sets the FileExtension
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSetBuilder withFileExtension(@Nullable final String val) {
            this.fileExtension = val;
            return this;
        }
        /**
         * The sensitiveTypeIds parameter value
         */
        @Nullable
        protected java.util.List<String> sensitiveTypeIds;
        /**
         * Sets the SensitiveTypeIds
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSetBuilder withSensitiveTypeIds(@Nullable final java.util.List<String> val) {
            this.sensitiveTypeIds = val;
            return this;
        }
        /**
         * The scopesToRun parameter value
         */
        @Nullable
        protected EnumSet<SensitiveTypeScope> scopesToRun;
        /**
         * Sets the ScopesToRun
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSetBuilder withScopesToRun(@Nullable final EnumSet<SensitiveTypeScope> val) {
            this.scopesToRun = val;
            return this;
        }
        /**
         * The matchTolerancesToInclude parameter value
         */
        @Nullable
        protected EnumSet<MlClassificationMatchTolerance> matchTolerancesToInclude;
        /**
         * Sets the MatchTolerancesToInclude
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSetBuilder withMatchTolerancesToInclude(@Nullable final EnumSet<MlClassificationMatchTolerance> val) {
            this.matchTolerancesToInclude = val;
            return this;
        }
        /**
         * Instanciates a new DataClassificationServiceClassifyTextParameterSetBuilder
         */
        @Nullable
        protected DataClassificationServiceClassifyTextParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public DataClassificationServiceClassifyTextParameterSet build() {
            return new DataClassificationServiceClassifyTextParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.text != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("text", text));
        }
        if(this.fileExtension != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("fileExtension", fileExtension));
        }
        if(this.sensitiveTypeIds != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("sensitiveTypeIds", sensitiveTypeIds));
        }
        if(this.scopesToRun != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("scopesToRun", scopesToRun));
        }
        if(this.matchTolerancesToInclude != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("matchTolerancesToInclude", matchTolerancesToInclude));
        }
        return result;
    }
}
