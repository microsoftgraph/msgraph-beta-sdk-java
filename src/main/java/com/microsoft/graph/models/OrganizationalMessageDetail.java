// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.OrganizationalMessageContent;
import com.microsoft.graph.models.OrganizationalMessageFrequency;
import com.microsoft.graph.models.OrganizationalMessageScenario;
import com.microsoft.graph.models.OrganizationalMessageStatus;
import com.microsoft.graph.models.OrganizationalMessageSurface;
import com.microsoft.graph.models.OrganizationalMessageTargeting;
import com.microsoft.graph.models.OrganizationalMessageTheme;
import com.microsoft.graph.models.OrganizationalMessageInsights;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Organizational Message Detail.
 */
public class OrganizationalMessageDetail extends Entity implements IJsonBackedObject {


    /**
     * The Content.
     * The content that will be displayed to clients for the message. This includes the text portion of the message and the displayed logo
     */
    @SerializedName(value = "content", alternate = {"Content"})
    @Expose
	@Nullable
    public OrganizationalMessageContent content;

    /**
     * The Created Date Time.
     * The date and time of when the message was created
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The End Date Time.
     * The date and time of when the message will stop being displayed to clients
     */
    @SerializedName(value = "endDateTime", alternate = {"EndDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime endDateTime;

    /**
     * The Frequency.
     * The frequency at which a client will see the message. Possible values are: weeklyOnce, monthlyOnce, monthlyTwice, unknownFutureValue.
     */
    @SerializedName(value = "frequency", alternate = {"Frequency"})
    @Expose
	@Nullable
    public OrganizationalMessageFrequency frequency;

    /**
     * The Last Modified Date Time.
     * The date and time of when the message was last modified
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime lastModifiedDateTime;

    /**
     * The Scenario.
     * Indicates the scenario for the message. Possible values are: onboarding, lifecycle, unknownFutureValue.
     */
    @SerializedName(value = "scenario", alternate = {"Scenario"})
    @Expose
	@Nullable
    public OrganizationalMessageScenario scenario;

    /**
     * The Start Date Time.
     * The date and time of when the message will start being displayed to clients
     */
    @SerializedName(value = "startDateTime", alternate = {"StartDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime startDateTime;

    /**
     * The Status.
     * Indicates the deployment status of the message. Possible values are: scheduled, active, completed, cancelled, unknownFutureValue.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
	@Nullable
    public OrganizationalMessageStatus status;

    /**
     * The Surface.
     * Indicates the area where content will be displayed to customers. Possible values are: actionCenter, getStarted, softLanding, unknownFutureValue.
     */
    @SerializedName(value = "surface", alternate = {"Surface"})
    @Expose
	@Nullable
    public OrganizationalMessageSurface surface;

    /**
     * The Targeting.
     * The groups of devices that will receive the message. This also contains a list of excluded groups that will not receive the message regardless of the device being part of an included group
     */
    @SerializedName(value = "targeting", alternate = {"Targeting"})
    @Expose
	@Nullable
    public OrganizationalMessageTargeting targeting;

    /**
     * The Theme.
     * Indicates the theme for the experience. Possible values are: update, training, welcomeToWindows, explore, unknownFutureValue.
     */
    @SerializedName(value = "theme", alternate = {"Theme"})
    @Expose
	@Nullable
    public OrganizationalMessageTheme theme;

    /**
     * The User Engagement Statistics.
     * The statistics containing how the message was interacted with by clients. This includes the number of impressions, clicks, and dismisses from targeted clients.
     */
    @SerializedName(value = "userEngagementStatistics", alternate = {"UserEngagementStatistics"})
    @Expose
	@Nullable
    public OrganizationalMessageInsights userEngagementStatistics;

    /**
     * The Variant.
     * Indicates the corresponding variant for the experience
     */
    @SerializedName(value = "variant", alternate = {"Variant"})
    @Expose
	@Nullable
    public String variant;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
