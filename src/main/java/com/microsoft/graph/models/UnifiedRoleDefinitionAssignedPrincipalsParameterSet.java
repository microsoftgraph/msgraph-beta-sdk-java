// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;

import com.microsoft.graph.models.DirectoryObject;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Unified Role Definition Assigned Principals Parameter Set.
 */
public class UnifiedRoleDefinitionAssignedPrincipalsParameterSet {
    /**
     * The transitive.
     * 
     */
    @SerializedName(value = "transitive", alternate = {"Transitive"})
    @Expose
	@Nullable
    public Boolean transitive;

    /**
     * The directory Scope Type.
     * 
     */
    @SerializedName(value = "directoryScopeType", alternate = {"DirectoryScopeType"})
    @Expose
	@Nullable
    public String directoryScopeType;

    /**
     * The directory Scope Id.
     * 
     */
    @SerializedName(value = "directoryScopeId", alternate = {"DirectoryScopeId"})
    @Expose
	@Nullable
    public String directoryScopeId;


    /**
     * Instiaciates a new UnifiedRoleDefinitionAssignedPrincipalsParameterSet
     */
    public UnifiedRoleDefinitionAssignedPrincipalsParameterSet() {}
    /**
     * Instiaciates a new UnifiedRoleDefinitionAssignedPrincipalsParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected UnifiedRoleDefinitionAssignedPrincipalsParameterSet(@Nonnull final UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder builder) {
        this.transitive = builder.transitive;
        this.directoryScopeType = builder.directoryScopeType;
        this.directoryScopeId = builder.directoryScopeId;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder newBuilder() {
        return new UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder();
    }
    /**
     * Fluent builder for the UnifiedRoleDefinitionAssignedPrincipalsParameterSet
     */
    public static final class UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder {
        /**
         * The transitive parameter value
         */
        @Nullable
        protected Boolean transitive;
        /**
         * Sets the Transitive
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder withTransitive(@Nullable final Boolean val) {
            this.transitive = val;
            return this;
        }
        /**
         * The directoryScopeType parameter value
         */
        @Nullable
        protected String directoryScopeType;
        /**
         * Sets the DirectoryScopeType
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder withDirectoryScopeType(@Nullable final String val) {
            this.directoryScopeType = val;
            return this;
        }
        /**
         * The directoryScopeId parameter value
         */
        @Nullable
        protected String directoryScopeId;
        /**
         * Sets the DirectoryScopeId
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder withDirectoryScopeId(@Nullable final String val) {
            this.directoryScopeId = val;
            return this;
        }
        /**
         * Instanciates a new UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder
         */
        @Nullable
        protected UnifiedRoleDefinitionAssignedPrincipalsParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public UnifiedRoleDefinitionAssignedPrincipalsParameterSet build() {
            return new UnifiedRoleDefinitionAssignedPrincipalsParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.transitive != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("transitive", transitive));
        }
        if(this.directoryScopeType != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("directoryScopeType", directoryScopeType));
        }
        if(this.directoryScopeId != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("directoryScopeId", directoryScopeId));
        }
        return result;
    }
}
