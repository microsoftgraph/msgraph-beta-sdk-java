// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.StateManagementSetting;
import com.microsoft.graph.models.WindowsFirewallRuleInterfaceTypes;
import com.microsoft.graph.models.WindowsFirewallRuleNetworkProfileTypes;
import com.microsoft.graph.models.WindowsFirewallRuleTrafficDirectionType;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Firewall Rule.
 */
public class WindowsFirewallRule implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Action.
     * The action the rule enforces. If not specified, the default is Allowed. Possible values are: notConfigured, blocked, allowed.
     */
    @SerializedName(value = "action", alternate = {"Action"})
    @Expose
	@Nullable
    public StateManagementSetting action;

    /**
     * The Description.
     * The description of the rule.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Display Name.
     * The display name of the rule. Does not need to be unique.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The Edge Traversal.
     * Indicates whether edge traversal is enabled or disabled for this rule. The EdgeTraversal setting indicates that specific inbound traffic is allowed to tunnel through NATs and other edge devices using the Teredo tunneling technology. In order for this setting to work correctly, the application or service with the inbound firewall rule needs to support IPv6. The primary application of this setting allows listeners on the host to be globally addressable through a Teredo IPv6 address. New rules have the EdgeTraversal property disabled by default. Possible values are: notConfigured, blocked, allowed.
     */
    @SerializedName(value = "edgeTraversal", alternate = {"EdgeTraversal"})
    @Expose
	@Nullable
    public StateManagementSetting edgeTraversal;

    /**
     * The File Path.
     * The full file path of an app that's affected by the firewall rule.
     */
    @SerializedName(value = "filePath", alternate = {"FilePath"})
    @Expose
	@Nullable
    public String filePath;

    /**
     * The Interface Types.
     * The interface types of the rule. Possible values are: notConfigured, remoteAccess, wireless, lan.
     */
    @SerializedName(value = "interfaceTypes", alternate = {"InterfaceTypes"})
    @Expose
	@Nullable
    public EnumSet<WindowsFirewallRuleInterfaceTypes> interfaceTypes;

    /**
     * The Local Address Ranges.
     * List of local addresses covered by the rule. Default is any address. Valid tokens include:'' indicates any local address. If present, this must be the only token included.A subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask nor a network prefix is specified, the subnet mask defaults to 255.255.255.255.A valid IPv6 address.An IPv4 address range in the format of 'start address - end address' with no spaces included.An IPv6 address range in the format of 'start address - end address' with no spaces included.
     */
    @SerializedName(value = "localAddressRanges", alternate = {"LocalAddressRanges"})
    @Expose
	@Nullable
    public java.util.List<String> localAddressRanges;

    /**
     * The Local Port Ranges.
     * List of local port ranges. For example, '100-120', '200', '300-320'. If not specified, the default is All.
     */
    @SerializedName(value = "localPortRanges", alternate = {"LocalPortRanges"})
    @Expose
	@Nullable
    public java.util.List<String> localPortRanges;

    /**
     * The Local User Authorizations.
     * Specifies the list of authorized local users for the app container. This is a string in Security Descriptor Definition Language (SDDL) format.
     */
    @SerializedName(value = "localUserAuthorizations", alternate = {"LocalUserAuthorizations"})
    @Expose
	@Nullable
    public String localUserAuthorizations;

    /**
     * The Package Family Name.
     * The package family name of a Microsoft Store application that's affected by the firewall rule.
     */
    @SerializedName(value = "packageFamilyName", alternate = {"PackageFamilyName"})
    @Expose
	@Nullable
    public String packageFamilyName;

    /**
     * The Profile Types.
     * Specifies the profiles to which the rule belongs. If not specified, the default is All. Possible values are: notConfigured, domain, private, public.
     */
    @SerializedName(value = "profileTypes", alternate = {"ProfileTypes"})
    @Expose
	@Nullable
    public EnumSet<WindowsFirewallRuleNetworkProfileTypes> profileTypes;

    /**
     * The Protocol.
     * 0-255 number representing the IP protocol (TCP = 6, UDP = 17). If not specified, the default is All. Valid values 0 to 255
     */
    @SerializedName(value = "protocol", alternate = {"Protocol"})
    @Expose
	@Nullable
    public Integer protocol;

    /**
     * The Remote Address Ranges.
     * List of tokens specifying the remote addresses covered by the rule. Tokens are case insensitive. Default is any address. Valid tokens include:'' indicates any remote address. If present, this must be the only token included.'Defaultgateway''DHCP''DNS''WINS''Intranet' (supported on Windows versions 1809+)'RmtIntranet' (supported on Windows versions 1809+)'Internet' (supported on Windows versions 1809+)'Ply2Renders' (supported on Windows versions 1809+)'LocalSubnet' indicates any local address on the local subnet.A subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask nor a network prefix is specified, the subnet mask defaults to 255.255.255.255.A valid IPv6 address.An IPv4 address range in the format of 'start address - end address' with no spaces included.An IPv6 address range in the format of 'start address - end address' with no spaces included.
     */
    @SerializedName(value = "remoteAddressRanges", alternate = {"RemoteAddressRanges"})
    @Expose
	@Nullable
    public java.util.List<String> remoteAddressRanges;

    /**
     * The Remote Port Ranges.
     * List of remote port ranges. For example, '100-120', '200', '300-320'. If not specified, the default is All.
     */
    @SerializedName(value = "remotePortRanges", alternate = {"RemotePortRanges"})
    @Expose
	@Nullable
    public java.util.List<String> remotePortRanges;

    /**
     * The Service Name.
     * The name used in cases when a service, not an application, is sending or receiving traffic.
     */
    @SerializedName(value = "serviceName", alternate = {"ServiceName"})
    @Expose
	@Nullable
    public String serviceName;

    /**
     * The Traffic Direction.
     * The traffic direction that the rule is enabled for. If not specified, the default is Out. Possible values are: notConfigured, out, in.
     */
    @SerializedName(value = "trafficDirection", alternate = {"TrafficDirection"})
    @Expose
	@Nullable
    public WindowsFirewallRuleTrafficDirectionType trafficDirection;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
