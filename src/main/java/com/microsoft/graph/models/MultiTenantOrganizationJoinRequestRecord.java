// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.MultiTenantOrganizationMemberState;
import com.microsoft.graph.models.MultiTenantOrganizationMemberRole;
import com.microsoft.graph.models.MultiTenantOrganizationJoinRequestTransitionDetails;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Multi Tenant Organization Join Request Record.
 */
public class MultiTenantOrganizationJoinRequestRecord extends Entity implements IJsonBackedObject {


    /**
     * The Added By Tenant Id.
     * Tenant ID of the Azure Active Directory tenant that added a tenant to the multi-tenant organization. To reset a failed join request, set addedByTenantId to 00000000-0000-0000-0000-000000000000. Required.
     */
    @SerializedName(value = "addedByTenantId", alternate = {"AddedByTenantId"})
    @Expose
	@Nullable
    public String addedByTenantId;

    /**
     * The Member State.
     * State of the tenant in the multi-tenant organization. The possible values are: pending, active, removed, unknownFutureValue. Tenants in the pending state must join the multi-tenant organization to participate in the multi-tenant organization. Tenants in the active state can participate in the multi-tenant organization. Tenants in the removed state are in the process of being removed from the multi-tenant organization. Read-only.
     */
    @SerializedName(value = "memberState", alternate = {"MemberState"})
    @Expose
	@Nullable
    public MultiTenantOrganizationMemberState memberState;

    /**
     * The Role.
     * Role of the tenant in the multi-tenant organization. The possible values are: owner, member (default), unknownFutureValue. Tenants with the owner role can manage the multi-tenant organization. There can be multiple tenants with the owner role in a multi-tenant organization. Tenants with the member role can participate in a multi-tenant organization.
     */
    @SerializedName(value = "role", alternate = {"Role"})
    @Expose
	@Nullable
    public MultiTenantOrganizationMemberRole role;

    /**
     * The Transition Details.
     * Details of the processing status for a tenant joining a multi-tenant organization. Read-only.
     */
    @SerializedName(value = "transitionDetails", alternate = {"TransitionDetails"})
    @Expose
	@Nullable
    public MultiTenantOrganizationJoinRequestTransitionDetails transitionDetails;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
