package microsoft.graph.models;

import com.microsoft.kiota.serialization.AdditionalDataHolder;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.util.function.Consumer;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
public class Entity implements AdditionalDataHolder, Parsable {
    /** Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well. */
    private Map<String, Object> _additionalData;
    /** The id property */
    private String _id;
    /** The type property */
    private String _type;
    /**
     * Instantiates a new entity and sets the default values.
     * @return a void
     */
    public Entity() {
        this.setAdditionalData(new HashMap<>());
        this.setType("#microsoft.graph.entity");
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a entity
     */
    @javax.annotation.Nonnull
    public static Entity createFromDiscriminatorValue(@javax.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        final ParseNode mappingValueNode = parseNode.getChildNode("@odata.type");
        if (mappingValueNode != null) {
            final String mappingValue = mappingValueNode.getStringValue();
            switch (mappingValue) {
                case "#microsoft.graph.accessPackage": return new AccessPackage();
                case "#microsoft.graph.accessPackageAssignment": return new AccessPackageAssignment();
                case "#microsoft.graph.accessPackageAssignmentPolicy": return new AccessPackageAssignmentPolicy();
                case "#microsoft.graph.accessPackageAssignmentRequest": return new AccessPackageAssignmentRequest();
                case "#microsoft.graph.accessPackageAssignmentResourceRole": return new AccessPackageAssignmentResourceRole();
                case "#microsoft.graph.accessPackageCatalog": return new AccessPackageCatalog();
                case "#microsoft.graph.accessPackageResource": return new AccessPackageResource();
                case "#microsoft.graph.accessPackageResourceEnvironment": return new AccessPackageResourceEnvironment();
                case "#microsoft.graph.accessPackageResourceRequest": return new AccessPackageResourceRequest();
                case "#microsoft.graph.accessPackageResourceRole": return new AccessPackageResourceRole();
                case "#microsoft.graph.accessPackageResourceRoleScope": return new AccessPackageResourceRoleScope();
                case "#microsoft.graph.accessPackageResourceScope": return new AccessPackageResourceScope();
                case "#microsoft.graph.accessPackageSubject": return new AccessPackageSubject();
                case "#microsoft.graph.accessReview": return new AccessReview();
                case "#microsoft.graph.accessReviewDecision": return new AccessReviewDecision();
                case "#microsoft.graph.accessReviewHistoryDefinition": return new AccessReviewHistoryDefinition();
                case "#microsoft.graph.accessReviewHistoryInstance": return new AccessReviewHistoryInstance();
                case "#microsoft.graph.accessReviewInstance": return new AccessReviewInstance();
                case "#microsoft.graph.accessReviewInstanceDecisionItem": return new AccessReviewInstanceDecisionItem();
                case "#microsoft.graph.accessReviewPolicy": return new AccessReviewPolicy();
                case "#microsoft.graph.accessReviewReviewer": return new AccessReviewReviewer();
                case "#microsoft.graph.accessReviewScheduleDefinition": return new AccessReviewScheduleDefinition();
                case "#microsoft.graph.accessReviewSet": return new AccessReviewSet();
                case "#microsoft.graph.accessReviewStage": return new AccessReviewStage();
                case "#microsoft.graph.account": return new Account();
                case "#microsoft.graph.activityHistoryItem": return new ActivityHistoryItem();
                case "#microsoft.graph.activityStatistics": return new ActivityStatistics();
                case "#microsoft.graph.adminConsentRequestPolicy": return new AdminConsentRequestPolicy();
                case "#microsoft.graph.adminReportSettings": return new AdminReportSettings();
                case "#microsoft.graph.advancedThreatProtectionOnboardingDeviceSettingState": return new AdvancedThreatProtectionOnboardingDeviceSettingState();
                case "#microsoft.graph.advancedThreatProtectionOnboardingStateSummary": return new AdvancedThreatProtectionOnboardingStateSummary();
                case "#microsoft.graph.agedAccountsPayable": return new AgedAccountsPayable();
                case "#microsoft.graph.agedAccountsReceivable": return new AgedAccountsReceivable();
                case "#microsoft.graph.agreement": return new Agreement();
                case "#microsoft.graph.agreementAcceptance": return new AgreementAcceptance();
                case "#microsoft.graph.agreementFileProperties": return new AgreementFileProperties();
                case "#microsoft.graph.alert": return new Alert();
                case "#microsoft.graph.allowedDataLocation": return new AllowedDataLocation();
                case "#microsoft.graph.allowedValue": return new AllowedValue();
                case "#microsoft.graph.androidDeviceComplianceLocalActionBase": return new AndroidDeviceComplianceLocalActionBase();
                case "#microsoft.graph.androidDeviceOwnerEnrollmentProfile": return new AndroidDeviceOwnerEnrollmentProfile();
                case "#microsoft.graph.androidForWorkAppConfigurationSchema": return new AndroidForWorkAppConfigurationSchema();
                case "#microsoft.graph.androidForWorkEnrollmentProfile": return new AndroidForWorkEnrollmentProfile();
                case "#microsoft.graph.androidForWorkSettings": return new AndroidForWorkSettings();
                case "#microsoft.graph.androidManagedStoreAccountEnterpriseSettings": return new AndroidManagedStoreAccountEnterpriseSettings();
                case "#microsoft.graph.androidManagedStoreAppConfigurationSchema": return new AndroidManagedStoreAppConfigurationSchema();
                case "#microsoft.graph.appConsentApprovalRoute": return new AppConsentApprovalRoute();
                case "#microsoft.graph.appConsentRequest": return new AppConsentRequest();
                case "#microsoft.graph.appleEnrollmentProfileAssignment": return new AppleEnrollmentProfileAssignment();
                case "#microsoft.graph.applePushNotificationCertificate": return new ApplePushNotificationCertificate();
                case "#microsoft.graph.appleUserInitiatedEnrollmentProfile": return new AppleUserInitiatedEnrollmentProfile();
                case "#microsoft.graph.applicationSignInDetailedSummary": return new ApplicationSignInDetailedSummary();
                case "#microsoft.graph.applicationSignInSummary": return new ApplicationSignInSummary();
                case "#microsoft.graph.applicationTemplate": return new ApplicationTemplate();
                case "#microsoft.graph.appLogCollectionRequest": return new AppLogCollectionRequest();
                case "#microsoft.graph.appRoleAssignment": return new AppRoleAssignment();
                case "#microsoft.graph.approval": return new Approval();
                case "#microsoft.graph.approvalStep": return new ApprovalStep();
                case "#microsoft.graph.approvalWorkflowProvider": return new ApprovalWorkflowProvider();
                case "#microsoft.graph.appScope": return new AppScope();
                case "#microsoft.graph.appVulnerabilityManagedDevice": return new AppVulnerabilityManagedDevice();
                case "#microsoft.graph.appVulnerabilityMobileApp": return new AppVulnerabilityMobileApp();
                case "#microsoft.graph.assignmentFilterEvaluationStatusDetails": return new AssignmentFilterEvaluationStatusDetails();
                case "#microsoft.graph.attachment": return new Attachment();
                case "#microsoft.graph.attachmentBase": return new AttachmentBase();
                case "#microsoft.graph.attachmentSession": return new AttachmentSession();
                case "#microsoft.graph.attackSimulationRoot": return new AttackSimulationRoot();
                case "#microsoft.graph.attendanceRecord": return new AttendanceRecord();
                case "#microsoft.graph.attributeMappingFunctionSchema": return new AttributeMappingFunctionSchema();
                case "#microsoft.graph.attributeSet": return new AttributeSet();
                case "#microsoft.graph.audioRoutingGroup": return new AudioRoutingGroup();
                case "#microsoft.graph.auditEvent": return new AuditEvent();
                case "#microsoft.graph.auditLogRoot": return new AuditLogRoot();
                case "#microsoft.graph.authentication": return new Authentication();
                case "#microsoft.graph.authenticationContextClassReference": return new AuthenticationContextClassReference();
                case "#microsoft.graph.authenticationEventsPolicy": return new AuthenticationEventsPolicy();
                case "#microsoft.graph.authenticationFlowsPolicy": return new AuthenticationFlowsPolicy();
                case "#microsoft.graph.authenticationListener": return new AuthenticationListener();
                case "#microsoft.graph.authenticationMethod": return new AuthenticationMethod();
                case "#microsoft.graph.authenticationMethodConfiguration": return new AuthenticationMethodConfiguration();
                case "#microsoft.graph.authenticationMethodsPolicy": return new AuthenticationMethodsPolicy();
                case "#microsoft.graph.authenticationMethodsRoot": return new AuthenticationMethodsRoot();
                case "#microsoft.graph.authenticationMethodTarget": return new AuthenticationMethodTarget();
                case "#microsoft.graph.authoredNote": return new AuthoredNote();
                case "#microsoft.graph.azureADFeatureUsage": return new AzureADFeatureUsage();
                case "#microsoft.graph.azureADLicenseUsage": return new AzureADLicenseUsage();
                case "#microsoft.graph.azureADUserFeatureUsage": return new AzureADUserFeatureUsage();
                case "#microsoft.graph.b2cAuthenticationMethodsPolicy": return new B2cAuthenticationMethodsPolicy();
                case "#microsoft.graph.baseItem": return new BaseItem();
                case "#microsoft.graph.baseItemVersion": return new BaseItemVersion();
                case "#microsoft.graph.baseTask": return new BaseTask();
                case "#microsoft.graph.baseTaskList": return new BaseTaskList();
                case "#microsoft.graph.bitlocker": return new Bitlocker();
                case "#microsoft.graph.bitlockerRecoveryKey": return new BitlockerRecoveryKey();
                case "#microsoft.graph.bookingAppointment": return new BookingAppointment();
                case "#microsoft.graph.bookingCurrency": return new BookingCurrency();
                case "#microsoft.graph.bookingCustomQuestion": return new BookingCustomQuestion();
                case "#microsoft.graph.bookingNamedEntity": return new BookingNamedEntity();
                case "#microsoft.graph.businessFlow": return new BusinessFlow();
                case "#microsoft.graph.businessFlowTemplate": return new BusinessFlowTemplate();
                case "#microsoft.graph.calendar": return new Calendar();
                case "#microsoft.graph.calendarGroup": return new CalendarGroup();
                case "#microsoft.graph.calendarPermission": return new CalendarPermission();
                case "#microsoft.graph.call": return new Call();
                case "#microsoft.graph.callRecords.callRecord": return new CallRecord();
                case "#microsoft.graph.callRecords.segment": return new Segment();
                case "#microsoft.graph.callRecords.session": return new Session();
                case "#microsoft.graph.cartToClassAssociation": return new CartToClassAssociation();
                case "#microsoft.graph.certificateBasedAuthConfiguration": return new CertificateBasedAuthConfiguration();
                case "#microsoft.graph.certificateConnectorDetails": return new CertificateConnectorDetails();
                case "#microsoft.graph.changeTrackedEntity": return new ChangeTrackedEntity();
                case "#microsoft.graph.channel": return new Channel();
                case "#microsoft.graph.chat": return new Chat();
                case "#microsoft.graph.chatMessage": return new ChatMessage();
                case "#microsoft.graph.chatMessageInfo": return new ChatMessageInfo();
                case "#microsoft.graph.checklistItem": return new ChecklistItem();
                case "#microsoft.graph.chromeOSOnboardingSettings": return new ChromeOSOnboardingSettings();
                case "#microsoft.graph.cloudAppSecurityProfile": return new CloudAppSecurityProfile();
                case "#microsoft.graph.cloudCommunications": return new CloudCommunications();
                case "#microsoft.graph.cloudPC": return new CloudPC();
                case "#microsoft.graph.cloudPcAuditEvent": return new CloudPcAuditEvent();
                case "#microsoft.graph.cloudPCConnectivityIssue": return new CloudPCConnectivityIssue();
                case "#microsoft.graph.cloudPcDeviceImage": return new CloudPcDeviceImage();
                case "#microsoft.graph.cloudPcExternalPartnerSetting": return new CloudPcExternalPartnerSetting();
                case "#microsoft.graph.cloudPcGalleryImage": return new CloudPcGalleryImage();
                case "#microsoft.graph.cloudPcOnPremisesConnection": return new CloudPcOnPremisesConnection();
                case "#microsoft.graph.cloudPcOrganizationSettings": return new CloudPcOrganizationSettings();
                case "#microsoft.graph.cloudPcProvisioningPolicy": return new CloudPcProvisioningPolicy();
                case "#microsoft.graph.cloudPcProvisioningPolicyAssignment": return new CloudPcProvisioningPolicyAssignment();
                case "#microsoft.graph.cloudPcServicePlan": return new CloudPcServicePlan();
                case "#microsoft.graph.cloudPcSnapshot": return new CloudPcSnapshot();
                case "#microsoft.graph.cloudPcSupportedRegion": return new CloudPcSupportedRegion();
                case "#microsoft.graph.cloudPcUserSetting": return new CloudPcUserSetting();
                case "#microsoft.graph.cloudPcUserSettingAssignment": return new CloudPcUserSettingAssignment();
                case "#microsoft.graph.columnDefinition": return new ColumnDefinition();
                case "#microsoft.graph.columnLink": return new ColumnLink();
                case "#microsoft.graph.comanagementEligibleDevice": return new ComanagementEligibleDevice();
                case "#microsoft.graph.command": return new Command();
                case "#microsoft.graph.commsOperation": return new CommsOperation();
                case "#microsoft.graph.company": return new Company();
                case "#microsoft.graph.companyInformation": return new CompanyInformation();
                case "#microsoft.graph.complianceManagementPartner": return new ComplianceManagementPartner();
                case "#microsoft.graph.conditionalAccessPolicy": return new ConditionalAccessPolicy();
                case "#microsoft.graph.conditionalAccessRoot": return new ConditionalAccessRoot();
                case "#microsoft.graph.configManagerCollection": return new ConfigManagerCollection();
                case "#microsoft.graph.connectedOrganization": return new ConnectedOrganization();
                case "#microsoft.graph.connectionOperation": return new ConnectionOperation();
                case "#microsoft.graph.connector": return new Connector();
                case "#microsoft.graph.connectorGroup": return new ConnectorGroup();
                case "#microsoft.graph.contactFolder": return new ContactFolder();
                case "#microsoft.graph.contactMergeSuggestions": return new ContactMergeSuggestions();
                case "#microsoft.graph.contentSharingSession": return new ContentSharingSession();
                case "#microsoft.graph.contentType": return new ContentType();
                case "#microsoft.graph.continuousAccessEvaluationPolicy": return new ContinuousAccessEvaluationPolicy();
                case "#microsoft.graph.conversation": return new Conversation();
                case "#microsoft.graph.conversationMember": return new ConversationMember();
                case "#microsoft.graph.conversationThread": return new ConversationThread();
                case "#microsoft.graph.countryRegion": return new CountryRegion();
                case "#microsoft.graph.credentialUsageSummary": return new CredentialUsageSummary();
                case "#microsoft.graph.credentialUserRegistrationCount": return new CredentialUserRegistrationCount();
                case "#microsoft.graph.credentialUserRegistrationDetails": return new CredentialUserRegistrationDetails();
                case "#microsoft.graph.crossTenantAccessPolicyConfigurationDefault": return new CrossTenantAccessPolicyConfigurationDefault();
                case "#microsoft.graph.currency": return new Currency();
                case "#microsoft.graph.customCalloutExtension": return new CustomCalloutExtension();
                case "#microsoft.graph.customer": return new Customer();
                case "#microsoft.graph.customerPayment": return new CustomerPayment();
                case "#microsoft.graph.customerPaymentJournal": return new CustomerPaymentJournal();
                case "#microsoft.graph.customExtensionHandler": return new CustomExtensionHandler();
                case "#microsoft.graph.customSecurityAttributeDefinition": return new CustomSecurityAttributeDefinition();
                case "#microsoft.graph.dataClassificationService": return new DataClassificationService();
                case "#microsoft.graph.dataLossPreventionPolicy": return new DataLossPreventionPolicy();
                case "#microsoft.graph.dataPolicyOperation": return new DataPolicyOperation();
                case "#microsoft.graph.dataSharingConsent": return new DataSharingConsent();
                case "#microsoft.graph.defaultUserRoleOverride": return new DefaultUserRoleOverride();
                case "#microsoft.graph.delegatedAdminAccessAssignment": return new DelegatedAdminAccessAssignment();
                case "#microsoft.graph.delegatedAdminCustomer": return new DelegatedAdminCustomer();
                case "#microsoft.graph.delegatedAdminRelationship": return new DelegatedAdminRelationship();
                case "#microsoft.graph.delegatedAdminRelationshipOperation": return new DelegatedAdminRelationshipOperation();
                case "#microsoft.graph.delegatedAdminRelationshipRequest": return new DelegatedAdminRelationshipRequest();
                case "#microsoft.graph.delegatedAdminServiceManagementDetail": return new DelegatedAdminServiceManagementDetail();
                case "#microsoft.graph.delegatedPermissionClassification": return new DelegatedPermissionClassification();
                case "#microsoft.graph.deletedTeam": return new DeletedTeam();
                case "#microsoft.graph.depOnboardingSetting": return new DepOnboardingSetting();
                case "#microsoft.graph.detectedApp": return new DetectedApp();
                case "#microsoft.graph.deviceAndAppManagementAssignmentFilter": return new DeviceAndAppManagementAssignmentFilter();
                case "#microsoft.graph.deviceAppManagement": return new DeviceAppManagement();
                case "#microsoft.graph.deviceAppManagementTask": return new DeviceAppManagementTask();
                case "#microsoft.graph.deviceCategory": return new DeviceCategory();
                case "#microsoft.graph.deviceComplianceActionItem": return new DeviceComplianceActionItem();
                case "#microsoft.graph.deviceComplianceDeviceOverview": return new DeviceComplianceDeviceOverview();
                case "#microsoft.graph.deviceComplianceDeviceStatus": return new DeviceComplianceDeviceStatus();
                case "#microsoft.graph.deviceCompliancePolicy": return new DeviceCompliancePolicy();
                case "#microsoft.graph.deviceCompliancePolicyAssignment": return new DeviceCompliancePolicyAssignment();
                case "#microsoft.graph.deviceCompliancePolicyDeviceStateSummary": return new DeviceCompliancePolicyDeviceStateSummary();
                case "#microsoft.graph.deviceCompliancePolicyGroupAssignment": return new DeviceCompliancePolicyGroupAssignment();
                case "#microsoft.graph.deviceCompliancePolicySettingStateSummary": return new DeviceCompliancePolicySettingStateSummary();
                case "#microsoft.graph.deviceCompliancePolicyState": return new DeviceCompliancePolicyState();
                case "#microsoft.graph.deviceComplianceScheduledActionForRule": return new DeviceComplianceScheduledActionForRule();
                case "#microsoft.graph.deviceComplianceScript": return new DeviceComplianceScript();
                case "#microsoft.graph.deviceComplianceScriptDeviceState": return new DeviceComplianceScriptDeviceState();
                case "#microsoft.graph.deviceComplianceScriptRunSummary": return new DeviceComplianceScriptRunSummary();
                case "#microsoft.graph.deviceComplianceSettingState": return new DeviceComplianceSettingState();
                case "#microsoft.graph.deviceComplianceUserOverview": return new DeviceComplianceUserOverview();
                case "#microsoft.graph.deviceComplianceUserStatus": return new DeviceComplianceUserStatus();
                case "#microsoft.graph.deviceConfiguration": return new DeviceConfiguration();
                case "#microsoft.graph.deviceConfigurationAssignment": return new DeviceConfigurationAssignment();
                case "#microsoft.graph.deviceConfigurationConflictSummary": return new DeviceConfigurationConflictSummary();
                case "#microsoft.graph.deviceConfigurationDeviceOverview": return new DeviceConfigurationDeviceOverview();
                case "#microsoft.graph.deviceConfigurationDeviceStateSummary": return new DeviceConfigurationDeviceStateSummary();
                case "#microsoft.graph.deviceConfigurationDeviceStatus": return new DeviceConfigurationDeviceStatus();
                case "#microsoft.graph.deviceConfigurationGroupAssignment": return new DeviceConfigurationGroupAssignment();
                case "#microsoft.graph.deviceConfigurationState": return new DeviceConfigurationState();
                case "#microsoft.graph.deviceConfigurationUserOverview": return new DeviceConfigurationUserOverview();
                case "#microsoft.graph.deviceConfigurationUserStateSummary": return new DeviceConfigurationUserStateSummary();
                case "#microsoft.graph.deviceConfigurationUserStatus": return new DeviceConfigurationUserStatus();
                case "#microsoft.graph.deviceCustomAttributeShellScript": return new DeviceCustomAttributeShellScript();
                case "#microsoft.graph.deviceEnrollmentConfiguration": return new DeviceEnrollmentConfiguration();
                case "#microsoft.graph.deviceHealthScript": return new DeviceHealthScript();
                case "#microsoft.graph.deviceHealthScriptAssignment": return new DeviceHealthScriptAssignment();
                case "#microsoft.graph.deviceHealthScriptDeviceState": return new DeviceHealthScriptDeviceState();
                case "#microsoft.graph.deviceHealthScriptRunSummary": return new DeviceHealthScriptRunSummary();
                case "#microsoft.graph.deviceInstallState": return new DeviceInstallState();
                case "#microsoft.graph.deviceLogCollectionResponse": return new DeviceLogCollectionResponse();
                case "#microsoft.graph.deviceManagement": return new DeviceManagement();
                case "#microsoft.graph.deviceManagementAutopilotEvent": return new DeviceManagementAutopilotEvent();
                case "#microsoft.graph.deviceManagementAutopilotPolicyStatusDetail": return new DeviceManagementAutopilotPolicyStatusDetail();
                case "#microsoft.graph.deviceManagementCachedReportConfiguration": return new DeviceManagementCachedReportConfiguration();
                case "#microsoft.graph.deviceManagementComplianceActionItem": return new DeviceManagementComplianceActionItem();
                case "#microsoft.graph.deviceManagementCompliancePolicy": return new DeviceManagementCompliancePolicy();
                case "#microsoft.graph.deviceManagementComplianceScheduledActionForRule": return new DeviceManagementComplianceScheduledActionForRule();
                case "#microsoft.graph.deviceManagementConfigurationCategory": return new DeviceManagementConfigurationCategory();
                case "#microsoft.graph.deviceManagementConfigurationPolicy": return new DeviceManagementConfigurationPolicy();
                case "#microsoft.graph.deviceManagementConfigurationPolicyAssignment": return new DeviceManagementConfigurationPolicyAssignment();
                case "#microsoft.graph.deviceManagementConfigurationPolicyTemplate": return new DeviceManagementConfigurationPolicyTemplate();
                case "#microsoft.graph.deviceManagementConfigurationSetting": return new DeviceManagementConfigurationSetting();
                case "#microsoft.graph.deviceManagementConfigurationSettingDefinition": return new DeviceManagementConfigurationSettingDefinition();
                case "#microsoft.graph.deviceManagementConfigurationSettingTemplate": return new DeviceManagementConfigurationSettingTemplate();
                case "#microsoft.graph.deviceManagementDerivedCredentialSettings": return new DeviceManagementDerivedCredentialSettings();
                case "#microsoft.graph.deviceManagementDomainJoinConnector": return new DeviceManagementDomainJoinConnector();
                case "#microsoft.graph.deviceManagementExchangeConnector": return new DeviceManagementExchangeConnector();
                case "#microsoft.graph.deviceManagementExchangeOnPremisesPolicy": return new DeviceManagementExchangeOnPremisesPolicy();
                case "#microsoft.graph.deviceManagementExportJob": return new DeviceManagementExportJob();
                case "#microsoft.graph.deviceManagementIntent": return new DeviceManagementIntent();
                case "#microsoft.graph.deviceManagementIntentAssignment": return new DeviceManagementIntentAssignment();
                case "#microsoft.graph.deviceManagementIntentDeviceSettingStateSummary": return new DeviceManagementIntentDeviceSettingStateSummary();
                case "#microsoft.graph.deviceManagementIntentDeviceState": return new DeviceManagementIntentDeviceState();
                case "#microsoft.graph.deviceManagementIntentDeviceStateSummary": return new DeviceManagementIntentDeviceStateSummary();
                case "#microsoft.graph.deviceManagementIntentUserState": return new DeviceManagementIntentUserState();
                case "#microsoft.graph.deviceManagementIntentUserStateSummary": return new DeviceManagementIntentUserStateSummary();
                case "#microsoft.graph.deviceManagementPartner": return new DeviceManagementPartner();
                case "#microsoft.graph.deviceManagementReports": return new DeviceManagementReports();
                case "#microsoft.graph.deviceManagementResourceAccessProfileAssignment": return new DeviceManagementResourceAccessProfileAssignment();
                case "#microsoft.graph.deviceManagementResourceAccessProfileBase": return new DeviceManagementResourceAccessProfileBase();
                case "#microsoft.graph.deviceManagementReusablePolicySetting": return new DeviceManagementReusablePolicySetting();
                case "#microsoft.graph.deviceManagementScript": return new DeviceManagementScript();
                case "#microsoft.graph.deviceManagementScriptAssignment": return new DeviceManagementScriptAssignment();
                case "#microsoft.graph.deviceManagementScriptDeviceState": return new DeviceManagementScriptDeviceState();
                case "#microsoft.graph.deviceManagementScriptGroupAssignment": return new DeviceManagementScriptGroupAssignment();
                case "#microsoft.graph.deviceManagementScriptRunSummary": return new DeviceManagementScriptRunSummary();
                case "#microsoft.graph.deviceManagementScriptUserState": return new DeviceManagementScriptUserState();
                case "#microsoft.graph.deviceManagementSettingCategory": return new DeviceManagementSettingCategory();
                case "#microsoft.graph.deviceManagementSettingDefinition": return new DeviceManagementSettingDefinition();
                case "#microsoft.graph.deviceManagementSettingInstance": return new DeviceManagementSettingInstance();
                case "#microsoft.graph.deviceManagementTemplate": return new DeviceManagementTemplate();
                case "#microsoft.graph.deviceManagementTroubleshootingEvent": return new DeviceManagementTroubleshootingEvent();
                case "#microsoft.graph.deviceRegistrationPolicy": return new DeviceRegistrationPolicy();
                case "#microsoft.graph.deviceSetupConfiguration": return new DeviceSetupConfiguration();
                case "#microsoft.graph.deviceShellScript": return new DeviceShellScript();
                case "#microsoft.graph.dimension": return new Dimension();
                case "#microsoft.graph.dimensionValue": return new DimensionValue();
                case "#microsoft.graph.directory": return new Directory();
                case "#microsoft.graph.directoryAudit": return new DirectoryAudit();
                case "#microsoft.graph.directoryDefinition": return new DirectoryDefinition();
                case "#microsoft.graph.directoryObject": return new DirectoryObject();
                case "#microsoft.graph.directoryRoleAccessReviewPolicy": return new DirectoryRoleAccessReviewPolicy();
                case "#microsoft.graph.directorySetting": return new DirectorySetting();
                case "#microsoft.graph.document": return new Document();
                case "#microsoft.graph.documentComment": return new DocumentComment();
                case "#microsoft.graph.documentCommentReply": return new DocumentCommentReply();
                case "#microsoft.graph.domain": return new Domain();
                case "#microsoft.graph.domainDnsRecord": return new DomainDnsRecord();
                case "#microsoft.graph.domainSecurityProfile": return new DomainSecurityProfile();
                case "#microsoft.graph.eBookInstallSummary": return new EBookInstallSummary();
                case "#microsoft.graph.ediscovery.case": return new Case_escaped();
                case "#microsoft.graph.ediscovery.caseOperation": return new CaseOperation();
                case "#microsoft.graph.ediscovery.caseSettings": return new CaseSettings();
                case "#microsoft.graph.ediscovery.dataSource": return new DataSource();
                case "#microsoft.graph.ediscovery.dataSourceContainer": return new DataSourceContainer();
                case "#microsoft.graph.ediscovery.ediscoveryroot": return new Ediscoveryroot();
                case "#microsoft.graph.ediscovery.legalHold": return new LegalHold();
                case "#microsoft.graph.ediscovery.reviewSet": return new ReviewSet();
                case "#microsoft.graph.ediscovery.reviewSetQuery": return new ReviewSetQuery();
                case "#microsoft.graph.ediscovery.sourceCollection": return new SourceCollection();
                case "#microsoft.graph.ediscovery.tag": return new Tag();
                case "#microsoft.graph.educationAssignment": return new EducationAssignment();
                case "#microsoft.graph.educationAssignmentDefaults": return new EducationAssignmentDefaults();
                case "#microsoft.graph.educationAssignmentResource": return new EducationAssignmentResource();
                case "#microsoft.graph.educationAssignmentSettings": return new EducationAssignmentSettings();
                case "#microsoft.graph.educationCategory": return new EducationCategory();
                case "#microsoft.graph.educationClass": return new EducationClass();
                case "#microsoft.graph.educationOrganization": return new EducationOrganization();
                case "#microsoft.graph.educationOutcome": return new EducationOutcome();
                case "#microsoft.graph.educationRubric": return new EducationRubric();
                case "#microsoft.graph.educationSubmission": return new EducationSubmission();
                case "#microsoft.graph.educationSubmissionResource": return new EducationSubmissionResource();
                case "#microsoft.graph.educationSynchronizationError": return new EducationSynchronizationError();
                case "#microsoft.graph.educationSynchronizationProfile": return new EducationSynchronizationProfile();
                case "#microsoft.graph.educationSynchronizationProfileStatus": return new EducationSynchronizationProfileStatus();
                case "#microsoft.graph.educationUser": return new EducationUser();
                case "#microsoft.graph.embeddedSIMActivationCodePool": return new EmbeddedSIMActivationCodePool();
                case "#microsoft.graph.embeddedSIMActivationCodePoolAssignment": return new EmbeddedSIMActivationCodePoolAssignment();
                case "#microsoft.graph.embeddedSIMDeviceState": return new EmbeddedSIMDeviceState();
                case "#microsoft.graph.employee": return new Employee();
                case "#microsoft.graph.enrollmentConfigurationAssignment": return new EnrollmentConfigurationAssignment();
                case "#microsoft.graph.enrollmentProfile": return new EnrollmentProfile();
                case "#microsoft.graph.enterpriseCodeSigningCertificate": return new EnterpriseCodeSigningCertificate();
                case "#microsoft.graph.entitlementManagement": return new EntitlementManagement();
                case "#microsoft.graph.entitlementManagementSettings": return new EntitlementManagementSettings();
                case "#microsoft.graph.exactMatchDataStoreBase": return new ExactMatchDataStoreBase();
                case "#microsoft.graph.exactMatchJobBase": return new ExactMatchJobBase();
                case "#microsoft.graph.exactMatchUploadAgent": return new ExactMatchUploadAgent();
                case "#microsoft.graph.extension": return new Extension();
                case "#microsoft.graph.external": return new External();
                case "#microsoft.graph.externalConnection": return new ExternalConnection();
                case "#microsoft.graph.externalConnectors.connectionOperation": return new ConnectionOperation();
                case "#microsoft.graph.externalConnectors.connectionQuota": return new ConnectionQuota();
                case "#microsoft.graph.externalConnectors.externalConnection": return new ExternalConnection();
                case "#microsoft.graph.externalConnectors.externalGroup": return new ExternalGroup();
                case "#microsoft.graph.externalConnectors.externalItem": return new ExternalItem();
                case "#microsoft.graph.externalConnectors.identity": return new Identity();
                case "#microsoft.graph.externalConnectors.schema": return new Schema();
                case "#microsoft.graph.externalDomainName": return new ExternalDomainName();
                case "#microsoft.graph.externalGroup": return new ExternalGroup();
                case "#microsoft.graph.externalItem": return new ExternalItem();
                case "#microsoft.graph.featureRolloutPolicy": return new FeatureRolloutPolicy();
                case "#microsoft.graph.federatedIdentityCredential": return new FederatedIdentityCredential();
                case "#microsoft.graph.fieldValueSet": return new FieldValueSet();
                case "#microsoft.graph.fileClassificationRequest": return new FileClassificationRequest();
                case "#microsoft.graph.fileSecurityProfile": return new FileSecurityProfile();
                case "#microsoft.graph.filterOperatorSchema": return new FilterOperatorSchema();
                case "#microsoft.graph.generalLedgerEntry": return new GeneralLedgerEntry();
                case "#microsoft.graph.governanceInsight": return new GovernanceInsight();
                case "#microsoft.graph.governancePolicyTemplate": return new GovernancePolicyTemplate();
                case "#microsoft.graph.governanceResource": return new GovernanceResource();
                case "#microsoft.graph.governanceRoleAssignment": return new GovernanceRoleAssignment();
                case "#microsoft.graph.governanceRoleAssignmentRequest": return new GovernanceRoleAssignmentRequest();
                case "#microsoft.graph.governanceRoleDefinition": return new GovernanceRoleDefinition();
                case "#microsoft.graph.governanceRoleSetting": return new GovernanceRoleSetting();
                case "#microsoft.graph.governanceSubject": return new GovernanceSubject();
                case "#microsoft.graph.groupLifecyclePolicy": return new GroupLifecyclePolicy();
                case "#microsoft.graph.groupPolicyCategory": return new GroupPolicyCategory();
                case "#microsoft.graph.groupPolicyConfiguration": return new GroupPolicyConfiguration();
                case "#microsoft.graph.groupPolicyConfigurationAssignment": return new GroupPolicyConfigurationAssignment();
                case "#microsoft.graph.groupPolicyDefinition": return new GroupPolicyDefinition();
                case "#microsoft.graph.groupPolicyDefinitionFile": return new GroupPolicyDefinitionFile();
                case "#microsoft.graph.groupPolicyDefinitionValue": return new GroupPolicyDefinitionValue();
                case "#microsoft.graph.groupPolicyMigrationReport": return new GroupPolicyMigrationReport();
                case "#microsoft.graph.groupPolicyObjectFile": return new GroupPolicyObjectFile();
                case "#microsoft.graph.groupPolicyOperation": return new GroupPolicyOperation();
                case "#microsoft.graph.groupPolicyPresentation": return new GroupPolicyPresentation();
                case "#microsoft.graph.groupPolicyPresentationValue": return new GroupPolicyPresentationValue();
                case "#microsoft.graph.groupPolicySettingMapping": return new GroupPolicySettingMapping();
                case "#microsoft.graph.hostSecurityProfile": return new HostSecurityProfile();
                case "#microsoft.graph.identityApiConnector": return new IdentityApiConnector();
                case "#microsoft.graph.identityProvider": return new IdentityProvider();
                case "#microsoft.graph.identityProviderBase": return new IdentityProviderBase();
                case "#microsoft.graph.identityUserFlow": return new IdentityUserFlow();
                case "#microsoft.graph.identityUserFlowAttribute": return new IdentityUserFlowAttribute();
                case "#microsoft.graph.identityUserFlowAttributeAssignment": return new IdentityUserFlowAttributeAssignment();
                case "#microsoft.graph.importedAppleDeviceIdentity": return new ImportedAppleDeviceIdentity();
                case "#microsoft.graph.importedDeviceIdentity": return new ImportedDeviceIdentity();
                case "#microsoft.graph.importedWindowsAutopilotDeviceIdentity": return new ImportedWindowsAutopilotDeviceIdentity();
                case "#microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": return new ImportedWindowsAutopilotDeviceIdentityUpload();
                case "#microsoft.graph.inferenceClassification": return new InferenceClassification();
                case "#microsoft.graph.inferenceClassificationOverride": return new InferenceClassificationOverride();
                case "#microsoft.graph.informationProtection": return new InformationProtection();
                case "#microsoft.graph.informationProtectionLabel": return new InformationProtectionLabel();
                case "#microsoft.graph.informationProtectionPolicy": return new InformationProtectionPolicy();
                case "#microsoft.graph.insightsSettings": return new InsightsSettings();
                case "#microsoft.graph.intuneBrandingProfile": return new IntuneBrandingProfile();
                case "#microsoft.graph.intuneBrandingProfileAssignment": return new IntuneBrandingProfileAssignment();
                case "#microsoft.graph.invitation": return new Invitation();
                case "#microsoft.graph.iosLobAppProvisioningConfiguration": return new IosLobAppProvisioningConfiguration();
                case "#microsoft.graph.iosLobAppProvisioningConfigurationAssignment": return new IosLobAppProvisioningConfigurationAssignment();
                case "#microsoft.graph.iosUpdateDeviceStatus": return new IosUpdateDeviceStatus();
                case "#microsoft.graph.iosVppAppAssignedLicense": return new IosVppAppAssignedLicense();
                case "#microsoft.graph.ipSecurityProfile": return new IpSecurityProfile();
                case "#microsoft.graph.item": return new Item();
                case "#microsoft.graph.itemActivity": return new ItemActivity();
                case "#microsoft.graph.itemActivityOLD": return new ItemActivityOLD();
                case "#microsoft.graph.itemActivityStat": return new ItemActivityStat();
                case "#microsoft.graph.itemAnalytics": return new ItemAnalytics();
                case "#microsoft.graph.itemCategory": return new ItemCategory();
                case "#microsoft.graph.itemFacet": return new ItemFacet();
                case "#microsoft.graph.jobResponseBase": return new JobResponseBase();
                case "#microsoft.graph.journal": return new Journal();
                case "#microsoft.graph.journalLine": return new JournalLine();
                case "#microsoft.graph.licenseDetails": return new LicenseDetails();
                case "#microsoft.graph.linkedResource": return new LinkedResource();
                case "#microsoft.graph.linkedResource_v2": return new LinkedResource_v2();
                case "#microsoft.graph.localizedNotificationMessage": return new LocalizedNotificationMessage();
                case "#microsoft.graph.longRunningOperation": return new LongRunningOperation();
                case "#microsoft.graph.lookupResultRow": return new LookupResultRow();
                case "#microsoft.graph.macOSSoftwareUpdateAccountSummary": return new MacOSSoftwareUpdateAccountSummary();
                case "#microsoft.graph.macOSSoftwareUpdateCategorySummary": return new MacOSSoftwareUpdateCategorySummary();
                case "#microsoft.graph.macOSSoftwareUpdateStateSummary": return new MacOSSoftwareUpdateStateSummary();
                case "#microsoft.graph.macOsVppAppAssignedLicense": return new MacOsVppAppAssignedLicense();
                case "#microsoft.graph.mailFolder": return new MailFolder();
                case "#microsoft.graph.malwareStateForWindowsDevice": return new MalwareStateForWindowsDevice();
                case "#microsoft.graph.managedAllDeviceCertificateState": return new ManagedAllDeviceCertificateState();
                case "#microsoft.graph.managedAppOperation": return new ManagedAppOperation();
                case "#microsoft.graph.managedAppPolicy": return new ManagedAppPolicy();
                case "#microsoft.graph.managedAppPolicyDeploymentSummary": return new ManagedAppPolicyDeploymentSummary();
                case "#microsoft.graph.managedAppRegistration": return new ManagedAppRegistration();
                case "#microsoft.graph.managedAppStatus": return new ManagedAppStatus();
                case "#microsoft.graph.managedDevice": return new ManagedDevice();
                case "#microsoft.graph.managedDeviceCertificateState": return new ManagedDeviceCertificateState();
                case "#microsoft.graph.managedDeviceEncryptionState": return new ManagedDeviceEncryptionState();
                case "#microsoft.graph.managedDeviceMobileAppConfiguration": return new ManagedDeviceMobileAppConfiguration();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationAssignment": return new ManagedDeviceMobileAppConfigurationAssignment();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": return new ManagedDeviceMobileAppConfigurationDeviceStatus();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": return new ManagedDeviceMobileAppConfigurationDeviceSummary();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationState": return new ManagedDeviceMobileAppConfigurationState();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": return new ManagedDeviceMobileAppConfigurationUserStatus();
                case "#microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": return new ManagedDeviceMobileAppConfigurationUserSummary();
                case "#microsoft.graph.managedDeviceOverview": return new ManagedDeviceOverview();
                case "#microsoft.graph.managedEBook": return new ManagedEBook();
                case "#microsoft.graph.managedEBookAssignment": return new ManagedEBookAssignment();
                case "#microsoft.graph.managedEBookCategory": return new ManagedEBookCategory();
                case "#microsoft.graph.managedMobileApp": return new ManagedMobileApp();
                case "#microsoft.graph.managedTenants.aggregatedPolicyCompliance": return new AggregatedPolicyCompliance();
                case "#microsoft.graph.managedTenants.auditEvent": return new AuditEvent();
                case "#microsoft.graph.managedTenants.cloudPcConnection": return new CloudPcConnection();
                case "#microsoft.graph.managedTenants.cloudPcDevice": return new CloudPcDevice();
                case "#microsoft.graph.managedTenants.cloudPcOverview": return new CloudPcOverview();
                case "#microsoft.graph.managedTenants.conditionalAccessPolicyCoverage": return new ConditionalAccessPolicyCoverage();
                case "#microsoft.graph.managedTenants.credentialUserRegistrationsSummary": return new CredentialUserRegistrationsSummary();
                case "#microsoft.graph.managedTenants.deviceCompliancePolicySettingStateSummary": return new DeviceCompliancePolicySettingStateSummary();
                case "#microsoft.graph.managedTenants.managedDeviceCompliance": return new ManagedDeviceCompliance();
                case "#microsoft.graph.managedTenants.managedDeviceComplianceTrend": return new ManagedDeviceComplianceTrend();
                case "#microsoft.graph.managedTenants.managedTenant": return new ManagedTenant();
                case "#microsoft.graph.managedTenants.managementAction": return new ManagementAction();
                case "#microsoft.graph.managedTenants.managementActionTenantDeploymentStatus": return new ManagementActionTenantDeploymentStatus();
                case "#microsoft.graph.managedTenants.managementIntent": return new ManagementIntent();
                case "#microsoft.graph.managedTenants.managementTemplate": return new ManagementTemplate();
                case "#microsoft.graph.managedTenants.managementTemplateCollection": return new ManagementTemplateCollection();
                case "#microsoft.graph.managedTenants.managementTemplateStep": return new ManagementTemplateStep();
                case "#microsoft.graph.managedTenants.managementTemplateStepDeployment": return new ManagementTemplateStepDeployment();
                case "#microsoft.graph.managedTenants.managementTemplateStepVersion": return new ManagementTemplateStepVersion();
                case "#microsoft.graph.managedTenants.tenant": return new Tenant();
                case "#microsoft.graph.managedTenants.tenantCustomizedInformation": return new TenantCustomizedInformation();
                case "#microsoft.graph.managedTenants.tenantDetailedInformation": return new TenantDetailedInformation();
                case "#microsoft.graph.managedTenants.tenantGroup": return new TenantGroup();
                case "#microsoft.graph.managedTenants.tenantTag": return new TenantTag();
                case "#microsoft.graph.managedTenants.windowsDeviceMalwareState": return new WindowsDeviceMalwareState();
                case "#microsoft.graph.managedTenants.windowsProtectionState": return new WindowsProtectionState();
                case "#microsoft.graph.meetingAttendanceReport": return new MeetingAttendanceReport();
                case "#microsoft.graph.meetingRegistrantBase": return new MeetingRegistrantBase();
                case "#microsoft.graph.meetingRegistrationBase": return new MeetingRegistrationBase();
                case "#microsoft.graph.meetingRegistrationQuestion": return new MeetingRegistrationQuestion();
                case "#microsoft.graph.mention": return new Mention();
                case "#microsoft.graph.messageEvent": return new MessageEvent();
                case "#microsoft.graph.messageRecipient": return new MessageRecipient();
                case "#microsoft.graph.messageRule": return new MessageRule();
                case "#microsoft.graph.messageTrace": return new MessageTrace();
                case "#microsoft.graph.microsoftApplicationDataAccessSettings": return new MicrosoftApplicationDataAccessSettings();
                case "#microsoft.graph.microsoftTunnelConfiguration": return new MicrosoftTunnelConfiguration();
                case "#microsoft.graph.microsoftTunnelHealthThreshold": return new MicrosoftTunnelHealthThreshold();
                case "#microsoft.graph.microsoftTunnelServer": return new MicrosoftTunnelServer();
                case "#microsoft.graph.microsoftTunnelServerLogCollectionResponse": return new MicrosoftTunnelServerLogCollectionResponse();
                case "#microsoft.graph.microsoftTunnelSite": return new MicrosoftTunnelSite();
                case "#microsoft.graph.mobileApp": return new MobileApp();
                case "#microsoft.graph.mobileAppAssignment": return new MobileAppAssignment();
                case "#microsoft.graph.mobileAppCategory": return new MobileAppCategory();
                case "#microsoft.graph.mobileAppContent": return new MobileAppContent();
                case "#microsoft.graph.mobileAppContentFile": return new MobileAppContentFile();
                case "#microsoft.graph.mobileAppInstallStatus": return new MobileAppInstallStatus();
                case "#microsoft.graph.mobileAppInstallSummary": return new MobileAppInstallSummary();
                case "#microsoft.graph.mobileAppIntentAndState": return new MobileAppIntentAndState();
                case "#microsoft.graph.mobileAppProvisioningConfigGroupAssignment": return new MobileAppProvisioningConfigGroupAssignment();
                case "#microsoft.graph.mobileAppRelationship": return new MobileAppRelationship();
                case "#microsoft.graph.mobileContainedApp": return new MobileContainedApp();
                case "#microsoft.graph.mobileThreatDefenseConnector": return new MobileThreatDefenseConnector();
                case "#microsoft.graph.mobilityManagementPolicy": return new MobilityManagementPolicy();
                case "#microsoft.graph.multiValueLegacyExtendedProperty": return new MultiValueLegacyExtendedProperty();
                case "#microsoft.graph.namedLocation": return new NamedLocation();
                case "#microsoft.graph.ndesConnector": return new NdesConnector();
                case "#microsoft.graph.notification": return new Notification();
                case "#microsoft.graph.notificationMessageTemplate": return new NotificationMessageTemplate();
                case "#microsoft.graph.oAuth2PermissionGrant": return new OAuth2PermissionGrant();
                case "#microsoft.graph.oemWarrantyInformationOnboarding": return new OemWarrantyInformationOnboarding();
                case "#microsoft.graph.office365ActiveUserCounts": return new Office365ActiveUserCounts();
                case "#microsoft.graph.office365ActiveUserDetail": return new Office365ActiveUserDetail();
                case "#microsoft.graph.office365GroupsActivityCounts": return new Office365GroupsActivityCounts();
                case "#microsoft.graph.office365GroupsActivityDetail": return new Office365GroupsActivityDetail();
                case "#microsoft.graph.office365GroupsActivityFileCounts": return new Office365GroupsActivityFileCounts();
                case "#microsoft.graph.office365GroupsActivityGroupCounts": return new Office365GroupsActivityGroupCounts();
                case "#microsoft.graph.office365GroupsActivityStorage": return new Office365GroupsActivityStorage();
                case "#microsoft.graph.office365ServicesUserCounts": return new Office365ServicesUserCounts();
                case "#microsoft.graph.officeClientConfiguration": return new OfficeClientConfiguration();
                case "#microsoft.graph.officeClientConfigurationAssignment": return new OfficeClientConfigurationAssignment();
                case "#microsoft.graph.officeGraphInsights": return new OfficeGraphInsights();
                case "#microsoft.graph.onenote": return new Onenote();
                case "#microsoft.graph.onenoteEntityBaseModel": return new OnenoteEntityBaseModel();
                case "#microsoft.graph.onlineMeeting": return new OnlineMeeting();
                case "#microsoft.graph.onPremisesAgent": return new OnPremisesAgent();
                case "#microsoft.graph.onPremisesAgentGroup": return new OnPremisesAgentGroup();
                case "#microsoft.graph.onPremisesConditionalAccessSettings": return new OnPremisesConditionalAccessSettings();
                case "#microsoft.graph.onPremisesPublishingProfile": return new OnPremisesPublishingProfile();
                case "#microsoft.graph.operation": return new Operation();
                case "#microsoft.graph.organizationalBrandingProperties": return new OrganizationalBrandingProperties();
                case "#microsoft.graph.organizationSettings": return new OrganizationSettings();
                case "#microsoft.graph.outlookCategory": return new OutlookCategory();
                case "#microsoft.graph.outlookItem": return new OutlookItem();
                case "#microsoft.graph.outlookTaskFolder": return new OutlookTaskFolder();
                case "#microsoft.graph.outlookTaskGroup": return new OutlookTaskGroup();
                case "#microsoft.graph.outlookUser": return new OutlookUser();
                case "#microsoft.graph.participant": return new Participant();
                case "#microsoft.graph.participantJoiningNotification": return new ParticipantJoiningNotification();
                case "#microsoft.graph.participantLeftNotification": return new ParticipantLeftNotification();
                case "#microsoft.graph.payloadResponse": return new PayloadResponse();
                case "#microsoft.graph.paymentMethod": return new PaymentMethod();
                case "#microsoft.graph.paymentTerm": return new PaymentTerm();
                case "#microsoft.graph.permission": return new Permission();
                case "#microsoft.graph.permissionGrantConditionSet": return new PermissionGrantConditionSet();
                case "#microsoft.graph.person": return new Person();
                case "#microsoft.graph.picture": return new Picture();
                case "#microsoft.graph.pinnedChatMessageInfo": return new PinnedChatMessageInfo();
                case "#microsoft.graph.place": return new Place();
                case "#microsoft.graph.planner": return new Planner();
                case "#microsoft.graph.plannerDelta": return new PlannerDelta();
                case "#microsoft.graph.plannerGroup": return new PlannerGroup();
                case "#microsoft.graph.plannerRoster": return new PlannerRoster();
                case "#microsoft.graph.plannerRosterMember": return new PlannerRosterMember();
                case "#microsoft.graph.policySet": return new PolicySet();
                case "#microsoft.graph.policySetAssignment": return new PolicySetAssignment();
                case "#microsoft.graph.policySetItem": return new PolicySetItem();
                case "#microsoft.graph.presence": return new Presence();
                case "#microsoft.graph.presentation": return new Presentation();
                case "#microsoft.graph.printConnector": return new PrintConnector();
                case "#microsoft.graph.printDocument": return new PrintDocument();
                case "#microsoft.graph.printerBase": return new PrinterBase();
                case "#microsoft.graph.printJob": return new PrintJob();
                case "#microsoft.graph.printOperation": return new PrintOperation();
                case "#microsoft.graph.printService": return new PrintService();
                case "#microsoft.graph.printServiceEndpoint": return new PrintServiceEndpoint();
                case "#microsoft.graph.printTask": return new PrintTask();
                case "#microsoft.graph.printTaskDefinition": return new PrintTaskDefinition();
                case "#microsoft.graph.printTaskTrigger": return new PrintTaskTrigger();
                case "#microsoft.graph.printUsage": return new PrintUsage();
                case "#microsoft.graph.privilegedAccess": return new PrivilegedAccess();
                case "#microsoft.graph.privilegedApproval": return new PrivilegedApproval();
                case "#microsoft.graph.privilegedOperationEvent": return new PrivilegedOperationEvent();
                case "#microsoft.graph.privilegedRole": return new PrivilegedRole();
                case "#microsoft.graph.privilegedRoleAssignment": return new PrivilegedRoleAssignment();
                case "#microsoft.graph.privilegedRoleAssignmentRequest": return new PrivilegedRoleAssignmentRequest();
                case "#microsoft.graph.privilegedRoleSettings": return new PrivilegedRoleSettings();
                case "#microsoft.graph.privilegedRoleSummary": return new PrivilegedRoleSummary();
                case "#microsoft.graph.privilegedSignupStatus": return new PrivilegedSignupStatus();
                case "#microsoft.graph.profile": return new Profile();
                case "#microsoft.graph.profileCardProperty": return new ProfileCardProperty();
                case "#microsoft.graph.profilePhoto": return new ProfilePhoto();
                case "#microsoft.graph.program": return new Program();
                case "#microsoft.graph.programControl": return new ProgramControl();
                case "#microsoft.graph.programControlType": return new ProgramControlType();
                case "#microsoft.graph.providerTenantSetting": return new ProviderTenantSetting();
                case "#microsoft.graph.provisioningObjectSummary": return new ProvisioningObjectSummary();
                case "#microsoft.graph.publishedResource": return new PublishedResource();
                case "#microsoft.graph.purchaseInvoice": return new PurchaseInvoice();
                case "#microsoft.graph.purchaseInvoiceLine": return new PurchaseInvoiceLine();
                case "#microsoft.graph.rbacApplication": return new RbacApplication();
                case "#microsoft.graph.rbacApplicationMultiple": return new RbacApplicationMultiple();
                case "#microsoft.graph.recommendation": return new Recommendation();
                case "#microsoft.graph.recommendationResource": return new RecommendationResource();
                case "#microsoft.graph.regionalAndLanguageSettings": return new RegionalAndLanguageSettings();
                case "#microsoft.graph.relyingPartyDetailedSummary": return new RelyingPartyDetailedSummary();
                case "#microsoft.graph.remoteActionAudit": return new RemoteActionAudit();
                case "#microsoft.graph.remoteAssistancePartner": return new RemoteAssistancePartner();
                case "#microsoft.graph.remoteAssistanceSettings": return new RemoteAssistanceSettings();
                case "#microsoft.graph.reportRoot": return new ReportRoot();
                case "#microsoft.graph.request": return new Request();
                case "#microsoft.graph.resourceOperation": return new ResourceOperation();
                case "#microsoft.graph.restrictedAppsViolation": return new RestrictedAppsViolation();
                case "#microsoft.graph.riskDetection": return new RiskDetection();
                case "#microsoft.graph.riskyServicePrincipal": return new RiskyServicePrincipal();
                case "#microsoft.graph.riskyUser": return new RiskyUser();
                case "#microsoft.graph.roleAssignment": return new RoleAssignment();
                case "#microsoft.graph.roleDefinition": return new RoleDefinition();
                case "#microsoft.graph.roleScopeTag": return new RoleScopeTag();
                case "#microsoft.graph.roleScopeTagAutoAssignment": return new RoleScopeTagAutoAssignment();
                case "#microsoft.graph.salesCreditMemo": return new SalesCreditMemo();
                case "#microsoft.graph.salesCreditMemoLine": return new SalesCreditMemoLine();
                case "#microsoft.graph.salesInvoice": return new SalesInvoice();
                case "#microsoft.graph.salesInvoiceLine": return new SalesInvoiceLine();
                case "#microsoft.graph.salesOrder": return new SalesOrder();
                case "#microsoft.graph.salesOrderLine": return new SalesOrderLine();
                case "#microsoft.graph.salesQuote": return new SalesQuote();
                case "#microsoft.graph.salesQuoteLine": return new SalesQuoteLine();
                case "#microsoft.graph.schedule": return new Schedule();
                case "#microsoft.graph.schema": return new Schema();
                case "#microsoft.graph.schemaExtension": return new SchemaExtension();
                case "#microsoft.graph.scopedRoleMembership": return new ScopedRoleMembership();
                case "#microsoft.graph.search.searchAnswer": return new SearchAnswer();
                case "#microsoft.graph.searchEntity": return new SearchEntity();
                case "#microsoft.graph.secureScore": return new SecureScore();
                case "#microsoft.graph.secureScoreControlProfile": return new SecureScoreControlProfile();
                case "#microsoft.graph.security": return new Security();
                case "#microsoft.graph.security.alert": return new Alert();
                case "#microsoft.graph.security.case": return new Case_escaped();
                case "#microsoft.graph.security.caseOperation": return new CaseOperation();
                case "#microsoft.graph.security.casesRoot": return new CasesRoot();
                case "#microsoft.graph.security.dataSet": return new DataSet();
                case "#microsoft.graph.security.dataSource": return new DataSource();
                case "#microsoft.graph.security.dataSourceContainer": return new DataSourceContainer();
                case "#microsoft.graph.security.dispositionReviewStage": return new DispositionReviewStage();
                case "#microsoft.graph.security.ediscoveryCaseSettings": return new EdiscoveryCaseSettings();
                case "#microsoft.graph.security.emailThreatSubmissionPolicy": return new EmailThreatSubmissionPolicy();
                case "#microsoft.graph.security.file": return new File();
                case "#microsoft.graph.security.incident": return new Incident();
                case "#microsoft.graph.security.informationProtection": return new InformationProtection();
                case "#microsoft.graph.security.informationProtectionPolicySetting": return new InformationProtectionPolicySetting();
                case "#microsoft.graph.security.labelsRoot": return new LabelsRoot();
                case "#microsoft.graph.security.policyBase": return new PolicyBase();
                case "#microsoft.graph.security.retentionEvent": return new RetentionEvent();
                case "#microsoft.graph.security.retentionEventType": return new RetentionEventType();
                case "#microsoft.graph.security.retentionLabel": return new RetentionLabel();
                case "#microsoft.graph.security.search": return new Search();
                case "#microsoft.graph.security.security": return new Security();
                case "#microsoft.graph.security.sensitivityLabel": return new SensitivityLabel();
                case "#microsoft.graph.security.tag": return new Tag();
                case "#microsoft.graph.security.threatSubmission": return new ThreatSubmission();
                case "#microsoft.graph.security.threatSubmissionRoot": return new ThreatSubmissionRoot();
                case "#microsoft.graph.security.triggersRoot": return new TriggersRoot();
                case "#microsoft.graph.security.triggerTypesRoot": return new TriggerTypesRoot();
                case "#microsoft.graph.securityAction": return new SecurityAction();
                case "#microsoft.graph.securityBaselineDeviceState": return new SecurityBaselineDeviceState();
                case "#microsoft.graph.securityBaselineSettingState": return new SecurityBaselineSettingState();
                case "#microsoft.graph.securityBaselineState": return new SecurityBaselineState();
                case "#microsoft.graph.securityBaselineStateSummary": return new SecurityBaselineStateSummary();
                case "#microsoft.graph.securityReportsRoot": return new SecurityReportsRoot();
                case "#microsoft.graph.sensitiveType": return new SensitiveType();
                case "#microsoft.graph.sensitivityLabel": return new SensitivityLabel();
                case "#microsoft.graph.sensitivityPolicySettings": return new SensitivityPolicySettings();
                case "#microsoft.graph.serviceAnnouncement": return new ServiceAnnouncement();
                case "#microsoft.graph.serviceAnnouncementAttachment": return new ServiceAnnouncementAttachment();
                case "#microsoft.graph.serviceAnnouncementBase": return new ServiceAnnouncementBase();
                case "#microsoft.graph.serviceHealth": return new ServiceHealth();
                case "#microsoft.graph.servicePrincipalCreationConditionSet": return new ServicePrincipalCreationConditionSet();
                case "#microsoft.graph.servicePrincipalRiskDetection": return new ServicePrincipalRiskDetection();
                case "#microsoft.graph.settingStateDeviceSummary": return new SettingStateDeviceSummary();
                case "#microsoft.graph.sharedEmailDomain": return new SharedEmailDomain();
                case "#microsoft.graph.sharedEmailDomainInvitation": return new SharedEmailDomainInvitation();
                case "#microsoft.graph.sharedInsight": return new SharedInsight();
                case "#microsoft.graph.shipmentMethod": return new ShipmentMethod();
                case "#microsoft.graph.sideLoadingKey": return new SideLoadingKey();
                case "#microsoft.graph.signIn": return new SignIn();
                case "#microsoft.graph.simulation": return new Simulation();
                case "#microsoft.graph.simulationAutomation": return new SimulationAutomation();
                case "#microsoft.graph.simulationAutomationRun": return new SimulationAutomationRun();
                case "#microsoft.graph.singleValueLegacyExtendedProperty": return new SingleValueLegacyExtendedProperty();
                case "#microsoft.graph.softwareUpdateStatusSummary": return new SoftwareUpdateStatusSummary();
                case "#microsoft.graph.strongAuthenticationDetail": return new StrongAuthenticationDetail();
                case "#microsoft.graph.strongAuthenticationPhoneAppDetail": return new StrongAuthenticationPhoneAppDetail();
                case "#microsoft.graph.subjectRightsRequest": return new SubjectRightsRequest();
                case "#microsoft.graph.subscribedSku": return new SubscribedSku();
                case "#microsoft.graph.subscription": return new Subscription();
                case "#microsoft.graph.symantecCodeSigningCertificate": return new SymantecCodeSigningCertificate();
                case "#microsoft.graph.synchronization": return new Synchronization();
                case "#microsoft.graph.synchronizationJob": return new SynchronizationJob();
                case "#microsoft.graph.synchronizationSchema": return new SynchronizationSchema();
                case "#microsoft.graph.synchronizationTemplate": return new SynchronizationTemplate();
                case "#microsoft.graph.targetedManagedAppPolicyAssignment": return new TargetedManagedAppPolicyAssignment();
                case "#microsoft.graph.tasks": return new Tasks();
                case "#microsoft.graph.taxArea": return new TaxArea();
                case "#microsoft.graph.taxGroup": return new TaxGroup();
                case "#microsoft.graph.team": return new Team();
                case "#microsoft.graph.teamInfo": return new TeamInfo();
                case "#microsoft.graph.teamsApp": return new TeamsApp();
                case "#microsoft.graph.teamsAppDefinition": return new TeamsAppDefinition();
                case "#microsoft.graph.teamsAppIcon": return new TeamsAppIcon();
                case "#microsoft.graph.teamsAppInstallation": return new TeamsAppInstallation();
                case "#microsoft.graph.teamsAppSettings": return new TeamsAppSettings();
                case "#microsoft.graph.teamsAsyncOperation": return new TeamsAsyncOperation();
                case "#microsoft.graph.teamsTab": return new TeamsTab();
                case "#microsoft.graph.teamsTemplate": return new TeamsTemplate();
                case "#microsoft.graph.teamwork": return new Teamwork();
                case "#microsoft.graph.teamworkBot": return new TeamworkBot();
                case "#microsoft.graph.teamworkDevice": return new TeamworkDevice();
                case "#microsoft.graph.teamworkDeviceActivity": return new TeamworkDeviceActivity();
                case "#microsoft.graph.teamworkDeviceConfiguration": return new TeamworkDeviceConfiguration();
                case "#microsoft.graph.teamworkDeviceHealth": return new TeamworkDeviceHealth();
                case "#microsoft.graph.teamworkDeviceOperation": return new TeamworkDeviceOperation();
                case "#microsoft.graph.teamworkHostedContent": return new TeamworkHostedContent();
                case "#microsoft.graph.teamworkPeripheral": return new TeamworkPeripheral();
                case "#microsoft.graph.teamworkTag": return new TeamworkTag();
                case "#microsoft.graph.teamworkTagMember": return new TeamworkTagMember();
                case "#microsoft.graph.telecomExpenseManagementPartner": return new TelecomExpenseManagementPartner();
                case "#microsoft.graph.tenantAdmin.settings": return new Settings();
                case "#microsoft.graph.tenantAdmin.sharepoint": return new Sharepoint();
                case "#microsoft.graph.tenantAttachRBAC": return new TenantAttachRBAC();
                case "#microsoft.graph.tenantRelationship": return new TenantRelationship();
                case "#microsoft.graph.tenantSetupInfo": return new TenantSetupInfo();
                case "#microsoft.graph.termsAndConditions": return new TermsAndConditions();
                case "#microsoft.graph.termsAndConditionsAcceptanceStatus": return new TermsAndConditionsAcceptanceStatus();
                case "#microsoft.graph.termsAndConditionsAssignment": return new TermsAndConditionsAssignment();
                case "#microsoft.graph.termsAndConditionsGroupAssignment": return new TermsAndConditionsGroupAssignment();
                case "#microsoft.graph.termsOfUseContainer": return new TermsOfUseContainer();
                case "#microsoft.graph.termStore.group": return new Group();
                case "#microsoft.graph.termStore.relation": return new Relation();
                case "#microsoft.graph.termStore.set": return new Set();
                case "#microsoft.graph.termStore.store": return new Store();
                case "#microsoft.graph.termStore.term": return new Term();
                case "#microsoft.graph.textClassificationRequest": return new TextClassificationRequest();
                case "#microsoft.graph.threatAssessmentRequest": return new ThreatAssessmentRequest();
                case "#microsoft.graph.threatAssessmentResult": return new ThreatAssessmentResult();
                case "#microsoft.graph.thumbnailSet": return new ThumbnailSet();
                case "#microsoft.graph.tiIndicator": return new TiIndicator();
                case "#microsoft.graph.todo": return new Todo();
                case "#microsoft.graph.todoTask": return new TodoTask();
                case "#microsoft.graph.todoTaskList": return new TodoTaskList();
                case "#microsoft.graph.trending": return new Trending();
                case "#microsoft.graph.trustFrameworkKeySet": return new TrustFrameworkKeySet();
                case "#microsoft.graph.trustFrameworkPolicy": return new TrustFrameworkPolicy();
                case "#microsoft.graph.unifiedRbacResourceAction": return new UnifiedRbacResourceAction();
                case "#microsoft.graph.unifiedRbacResourceNamespace": return new UnifiedRbacResourceNamespace();
                case "#microsoft.graph.unifiedRbacResourceScope": return new UnifiedRbacResourceScope();
                case "#microsoft.graph.unifiedRoleAssignment": return new UnifiedRoleAssignment();
                case "#microsoft.graph.unifiedRoleAssignmentMultiple": return new UnifiedRoleAssignmentMultiple();
                case "#microsoft.graph.unifiedRoleDefinition": return new UnifiedRoleDefinition();
                case "#microsoft.graph.unifiedRoleManagementPolicy": return new UnifiedRoleManagementPolicy();
                case "#microsoft.graph.unifiedRoleManagementPolicyAssignment": return new UnifiedRoleManagementPolicyAssignment();
                case "#microsoft.graph.unifiedRoleManagementPolicyRule": return new UnifiedRoleManagementPolicyRule();
                case "#microsoft.graph.unifiedRoleScheduleBase": return new UnifiedRoleScheduleBase();
                case "#microsoft.graph.unifiedRoleScheduleInstanceBase": return new UnifiedRoleScheduleInstanceBase();
                case "#microsoft.graph.unitOfMeasure": return new UnitOfMeasure();
                case "#microsoft.graph.unsupportedGroupPolicyExtension": return new UnsupportedGroupPolicyExtension();
                case "#microsoft.graph.usageRight": return new UsageRight();
                case "#microsoft.graph.usedInsight": return new UsedInsight();
                case "#microsoft.graph.userActivity": return new UserActivity();
                case "#microsoft.graph.userAnalytics": return new UserAnalytics();
                case "#microsoft.graph.userAppInstallStatus": return new UserAppInstallStatus();
                case "#microsoft.graph.userConfiguration": return new UserConfiguration();
                case "#microsoft.graph.userCredentialUsageDetails": return new UserCredentialUsageDetails();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthApplicationPerformance": return new UserExperienceAnalyticsAppHealthApplicationPerformance();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersion": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByOSVersion": return new UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthDeviceModelPerformance": return new UserExperienceAnalyticsAppHealthDeviceModelPerformance();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthDevicePerformance": return new UserExperienceAnalyticsAppHealthDevicePerformance();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthDevicePerformanceDetails": return new UserExperienceAnalyticsAppHealthDevicePerformanceDetails();
                case "#microsoft.graph.userExperienceAnalyticsAppHealthOSVersionPerformance": return new UserExperienceAnalyticsAppHealthOSVersionPerformance();
                case "#microsoft.graph.userExperienceAnalyticsBaseline": return new UserExperienceAnalyticsBaseline();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthAppImpact": return new UserExperienceAnalyticsBatteryHealthAppImpact();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthCapacityDetails": return new UserExperienceAnalyticsBatteryHealthCapacityDetails();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDeviceAppImpact": return new UserExperienceAnalyticsBatteryHealthDeviceAppImpact();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDevicePerformance": return new UserExperienceAnalyticsBatteryHealthDevicePerformance();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory": return new UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthModelPerformance": return new UserExperienceAnalyticsBatteryHealthModelPerformance();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthOsPerformance": return new UserExperienceAnalyticsBatteryHealthOsPerformance();
                case "#microsoft.graph.userExperienceAnalyticsBatteryHealthRuntimeDetails": return new UserExperienceAnalyticsBatteryHealthRuntimeDetails();
                case "#microsoft.graph.userExperienceAnalyticsCategory": return new UserExperienceAnalyticsCategory();
                case "#microsoft.graph.userExperienceAnalyticsDevicePerformance": return new UserExperienceAnalyticsDevicePerformance();
                case "#microsoft.graph.userExperienceAnalyticsDeviceScope": return new UserExperienceAnalyticsDeviceScope();
                case "#microsoft.graph.userExperienceAnalyticsDeviceScores": return new UserExperienceAnalyticsDeviceScores();
                case "#microsoft.graph.userExperienceAnalyticsDeviceStartupHistory": return new UserExperienceAnalyticsDeviceStartupHistory();
                case "#microsoft.graph.userExperienceAnalyticsDeviceStartupProcess": return new UserExperienceAnalyticsDeviceStartupProcess();
                case "#microsoft.graph.userExperienceAnalyticsDeviceStartupProcessPerformance": return new UserExperienceAnalyticsDeviceStartupProcessPerformance();
                case "#microsoft.graph.userExperienceAnalyticsDeviceWithoutCloudIdentity": return new UserExperienceAnalyticsDeviceWithoutCloudIdentity();
                case "#microsoft.graph.userExperienceAnalyticsImpactingProcess": return new UserExperienceAnalyticsImpactingProcess();
                case "#microsoft.graph.userExperienceAnalyticsMetric": return new UserExperienceAnalyticsMetric();
                case "#microsoft.graph.userExperienceAnalyticsMetricHistory": return new UserExperienceAnalyticsMetricHistory();
                case "#microsoft.graph.userExperienceAnalyticsModelScores": return new UserExperienceAnalyticsModelScores();
                case "#microsoft.graph.userExperienceAnalyticsNotAutopilotReadyDevice": return new UserExperienceAnalyticsNotAutopilotReadyDevice();
                case "#microsoft.graph.userExperienceAnalyticsOverview": return new UserExperienceAnalyticsOverview();
                case "#microsoft.graph.userExperienceAnalyticsRegressionSummary": return new UserExperienceAnalyticsRegressionSummary();
                case "#microsoft.graph.userExperienceAnalyticsRemoteConnection": return new UserExperienceAnalyticsRemoteConnection();
                case "#microsoft.graph.userExperienceAnalyticsResourcePerformance": return new UserExperienceAnalyticsResourcePerformance();
                case "#microsoft.graph.userExperienceAnalyticsScoreHistory": return new UserExperienceAnalyticsScoreHistory();
                case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereDevice": return new UserExperienceAnalyticsWorkFromAnywhereDevice();
                case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric": return new UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric();
                case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric": return new UserExperienceAnalyticsWorkFromAnywhereMetric();
                case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereModelPerformance": return new UserExperienceAnalyticsWorkFromAnywhereModelPerformance();
                case "#microsoft.graph.userFlowLanguageConfiguration": return new UserFlowLanguageConfiguration();
                case "#microsoft.graph.userFlowLanguagePage": return new UserFlowLanguagePage();
                case "#microsoft.graph.userInsightsSettings": return new UserInsightsSettings();
                case "#microsoft.graph.userInstallStateSummary": return new UserInstallStateSummary();
                case "#microsoft.graph.userPFXCertificate": return new UserPFXCertificate();
                case "#microsoft.graph.userRegistrationDetails": return new UserRegistrationDetails();
                case "#microsoft.graph.userSecurityProfile": return new UserSecurityProfile();
                case "#microsoft.graph.userSettings": return new UserSettings();
                case "#microsoft.graph.userTeamwork": return new UserTeamwork();
                case "#microsoft.graph.vendor": return new Vendor();
                case "#microsoft.graph.virtualEndpoint": return new VirtualEndpoint();
                case "#microsoft.graph.vppToken": return new VppToken();
                case "#microsoft.graph.vulnerableManagedDevice": return new VulnerableManagedDevice();
                case "#microsoft.graph.windowsAssignedAccessProfile": return new WindowsAssignedAccessProfile();
                case "#microsoft.graph.windowsAutopilotDeploymentProfile": return new WindowsAutopilotDeploymentProfile();
                case "#microsoft.graph.windowsAutopilotDeploymentProfileAssignment": return new WindowsAutopilotDeploymentProfileAssignment();
                case "#microsoft.graph.windowsAutopilotDeviceIdentity": return new WindowsAutopilotDeviceIdentity();
                case "#microsoft.graph.windowsAutopilotSettings": return new WindowsAutopilotSettings();
                case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicy": return new WindowsDefenderApplicationControlSupplementalPolicy();
                case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyAssignment": return new WindowsDefenderApplicationControlSupplementalPolicyAssignment();
                case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus": return new WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus();
                case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyDeploymentSummary": return new WindowsDefenderApplicationControlSupplementalPolicyDeploymentSummary();
                case "#microsoft.graph.windowsDeviceMalwareState": return new WindowsDeviceMalwareState();
                case "#microsoft.graph.windowsDriverUpdateInventory": return new WindowsDriverUpdateInventory();
                case "#microsoft.graph.windowsDriverUpdateProfile": return new WindowsDriverUpdateProfile();
                case "#microsoft.graph.windowsDriverUpdateProfileAssignment": return new WindowsDriverUpdateProfileAssignment();
                case "#microsoft.graph.windowsFeatureUpdateProfile": return new WindowsFeatureUpdateProfile();
                case "#microsoft.graph.windowsFeatureUpdateProfileAssignment": return new WindowsFeatureUpdateProfileAssignment();
                case "#microsoft.graph.windowsInformationProtectionAppLearningSummary": return new WindowsInformationProtectionAppLearningSummary();
                case "#microsoft.graph.windowsInformationProtectionAppLockerFile": return new WindowsInformationProtectionAppLockerFile();
                case "#microsoft.graph.windowsInformationProtectionDeviceRegistration": return new WindowsInformationProtectionDeviceRegistration();
                case "#microsoft.graph.windowsInformationProtectionNetworkLearningSummary": return new WindowsInformationProtectionNetworkLearningSummary();
                case "#microsoft.graph.windowsInformationProtectionWipeAction": return new WindowsInformationProtectionWipeAction();
                case "#microsoft.graph.windowsMalwareInformation": return new WindowsMalwareInformation();
                case "#microsoft.graph.windowsManagementApp": return new WindowsManagementApp();
                case "#microsoft.graph.windowsManagementAppHealthState": return new WindowsManagementAppHealthState();
                case "#microsoft.graph.windowsManagementAppHealthSummary": return new WindowsManagementAppHealthSummary();
                case "#microsoft.graph.windowsPrivacyDataAccessControlItem": return new WindowsPrivacyDataAccessControlItem();
                case "#microsoft.graph.windowsProtectionState": return new WindowsProtectionState();
                case "#microsoft.graph.windowsQualityUpdateProfile": return new WindowsQualityUpdateProfile();
                case "#microsoft.graph.windowsQualityUpdateProfileAssignment": return new WindowsQualityUpdateProfileAssignment();
                case "#microsoft.graph.windowsUpdateCatalogItem": return new WindowsUpdateCatalogItem();
                case "#microsoft.graph.windowsUpdates.catalog": return new Catalog();
                case "#microsoft.graph.windowsUpdates.catalogEntry": return new CatalogEntry();
                case "#microsoft.graph.windowsUpdates.deployment": return new Deployment();
                case "#microsoft.graph.windowsUpdates.deploymentAudience": return new DeploymentAudience();
                case "#microsoft.graph.windowsUpdates.resourceConnection": return new ResourceConnection();
                case "#microsoft.graph.windowsUpdates.updatableAsset": return new UpdatableAsset();
                case "#microsoft.graph.windowsUpdates.updates": return new Updates();
                case "#microsoft.graph.windowsUpdates.windows": return new Windows();
                case "#microsoft.graph.windowsUpdateState": return new WindowsUpdateState();
                case "#microsoft.graph.workbook": return new Workbook();
                case "#microsoft.graph.workbookApplication": return new WorkbookApplication();
                case "#microsoft.graph.workbookChart": return new WorkbookChart();
                case "#microsoft.graph.workbookChartAreaFormat": return new WorkbookChartAreaFormat();
                case "#microsoft.graph.workbookChartAxes": return new WorkbookChartAxes();
                case "#microsoft.graph.workbookChartAxis": return new WorkbookChartAxis();
                case "#microsoft.graph.workbookChartAxisFormat": return new WorkbookChartAxisFormat();
                case "#microsoft.graph.workbookChartAxisTitle": return new WorkbookChartAxisTitle();
                case "#microsoft.graph.workbookChartAxisTitleFormat": return new WorkbookChartAxisTitleFormat();
                case "#microsoft.graph.workbookChartDataLabelFormat": return new WorkbookChartDataLabelFormat();
                case "#microsoft.graph.workbookChartDataLabels": return new WorkbookChartDataLabels();
                case "#microsoft.graph.workbookChartFill": return new WorkbookChartFill();
                case "#microsoft.graph.workbookChartFont": return new WorkbookChartFont();
                case "#microsoft.graph.workbookChartGridlines": return new WorkbookChartGridlines();
                case "#microsoft.graph.workbookChartGridlinesFormat": return new WorkbookChartGridlinesFormat();
                case "#microsoft.graph.workbookChartLegend": return new WorkbookChartLegend();
                case "#microsoft.graph.workbookChartLegendFormat": return new WorkbookChartLegendFormat();
                case "#microsoft.graph.workbookChartLineFormat": return new WorkbookChartLineFormat();
                case "#microsoft.graph.workbookChartPoint": return new WorkbookChartPoint();
                case "#microsoft.graph.workbookChartPointFormat": return new WorkbookChartPointFormat();
                case "#microsoft.graph.workbookChartSeries": return new WorkbookChartSeries();
                case "#microsoft.graph.workbookChartSeriesFormat": return new WorkbookChartSeriesFormat();
                case "#microsoft.graph.workbookChartTitle": return new WorkbookChartTitle();
                case "#microsoft.graph.workbookChartTitleFormat": return new WorkbookChartTitleFormat();
                case "#microsoft.graph.workbookComment": return new WorkbookComment();
                case "#microsoft.graph.workbookCommentReply": return new WorkbookCommentReply();
                case "#microsoft.graph.workbookFilter": return new WorkbookFilter();
                case "#microsoft.graph.workbookFormatProtection": return new WorkbookFormatProtection();
                case "#microsoft.graph.workbookFunctionResult": return new WorkbookFunctionResult();
                case "#microsoft.graph.workbookFunctions": return new WorkbookFunctions();
                case "#microsoft.graph.workbookNamedItem": return new WorkbookNamedItem();
                case "#microsoft.graph.workbookOperation": return new WorkbookOperation();
                case "#microsoft.graph.workbookPivotTable": return new WorkbookPivotTable();
                case "#microsoft.graph.workbookRange": return new WorkbookRange();
                case "#microsoft.graph.workbookRangeBorder": return new WorkbookRangeBorder();
                case "#microsoft.graph.workbookRangeFill": return new WorkbookRangeFill();
                case "#microsoft.graph.workbookRangeFont": return new WorkbookRangeFont();
                case "#microsoft.graph.workbookRangeFormat": return new WorkbookRangeFormat();
                case "#microsoft.graph.workbookRangeSort": return new WorkbookRangeSort();
                case "#microsoft.graph.workbookRangeView": return new WorkbookRangeView();
                case "#microsoft.graph.workbookTable": return new WorkbookTable();
                case "#microsoft.graph.workbookTableColumn": return new WorkbookTableColumn();
                case "#microsoft.graph.workbookTableRow": return new WorkbookTableRow();
                case "#microsoft.graph.workbookTableSort": return new WorkbookTableSort();
                case "#microsoft.graph.workbookWorksheet": return new WorkbookWorksheet();
                case "#microsoft.graph.workbookWorksheetProtection": return new WorkbookWorksheetProtection();
                case "#microsoft.graph.zebraFotaArtifact": return new ZebraFotaArtifact();
                case "#microsoft.graph.zebraFotaConnector": return new ZebraFotaConnector();
                case "#microsoft.graph.zebraFotaDeployment": return new ZebraFotaDeployment();
            }
        }
        return new Entity();
    }
    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return a Map<String, Object>
     */
    @javax.annotation.Nonnull
    public Map<String, Object> getAdditionalData() {
        return this._additionalData;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, Consumer<ParseNode>>
     */
    @javax.annotation.Nonnull
    public Map<String, Consumer<ParseNode>> getFieldDeserializers() {
        final Entity currentObject = this;
        return new HashMap<>(2) {{
            this.put("id", (n) -> { currentObject.setId(n.getStringValue()); });
            this.put("@odata.type", (n) -> { currentObject.setType(n.getStringValue()); });
        }};
    }
    /**
     * Gets the id property value. The id property
     * @return a string
     */
    @javax.annotation.Nullable
    public String getId() {
        return this._id;
    }
    /**
     * Gets the @odata.type property value. The type property
     * @return a string
     */
    @javax.annotation.Nullable
    public String getType() {
        return this._type;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     * @return a void
     */
    public void serialize(@javax.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        writer.writeStringValue("id", this.getId());
        writer.writeStringValue("@odata.type", this.getType());
        writer.writeAdditionalData(this.getAdditionalData());
    }
    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the AdditionalData property.
     * @return a void
     */
    public void setAdditionalData(@javax.annotation.Nullable final Map<String, Object> value) {
        this._additionalData = value;
    }
    /**
     * Sets the id property value. The id property
     * @param value Value to set for the id property.
     * @return a void
     */
    public void setId(@javax.annotation.Nullable final String value) {
        this._id = value;
    }
    /**
     * Sets the @odata.type property value. The type property
     * @param value Value to set for the type property.
     * @return a void
     */
    public void setType(@javax.annotation.Nullable final String value) {
        this._type = value;
    }
}
