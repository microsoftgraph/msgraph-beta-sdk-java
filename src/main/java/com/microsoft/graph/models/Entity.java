package com.microsoft.graph.models;

import com.microsoft.graph.models.callrecords.CallRecord;
import com.microsoft.graph.models.callrecords.Segment;
import com.microsoft.graph.models.callrecords.Session;
import com.microsoft.graph.models.devicemanagement.AlertRecord;
import com.microsoft.graph.models.devicemanagement.AlertRule;
import com.microsoft.graph.models.devicemanagement.Monitoring;
import com.microsoft.graph.models.ediscovery.AddToReviewSetOperation;
import com.microsoft.graph.models.ediscovery.CaseExportOperation;
import com.microsoft.graph.models.ediscovery.CaseHoldOperation;
import com.microsoft.graph.models.ediscovery.CaseIndexOperation;
import com.microsoft.graph.models.ediscovery.CaseSettings;
import com.microsoft.graph.models.ediscovery.Custodian;
import com.microsoft.graph.models.ediscovery.DataSourceContainer;
import com.microsoft.graph.models.ediscovery.Ediscoveryroot;
import com.microsoft.graph.models.ediscovery.EstimateStatisticsOperation;
import com.microsoft.graph.models.ediscovery.LegalHold;
import com.microsoft.graph.models.ediscovery.NoncustodialDataSource;
import com.microsoft.graph.models.ediscovery.PurgeDataOperation;
import com.microsoft.graph.models.ediscovery.ReviewSet;
import com.microsoft.graph.models.ediscovery.ReviewSetQuery;
import com.microsoft.graph.models.ediscovery.SiteSource;
import com.microsoft.graph.models.ediscovery.SourceCollection;
import com.microsoft.graph.models.ediscovery.TagOperation;
import com.microsoft.graph.models.externalconnectors.ConnectionOperation;
import com.microsoft.graph.models.externalconnectors.ConnectionQuota;
import com.microsoft.graph.models.externalconnectors.ExternalActivity;
import com.microsoft.graph.models.externalconnectors.ExternalActivityResult;
import com.microsoft.graph.models.externalconnectors.ExternalConnection;
import com.microsoft.graph.models.externalconnectors.ExternalGroup;
import com.microsoft.graph.models.externalconnectors.ExternalItem;
import com.microsoft.graph.models.externalconnectors.Identity;
import com.microsoft.graph.models.externalconnectors.Schema;
import com.microsoft.graph.models.identitygovernance.CustomTaskExtension;
import com.microsoft.graph.models.identitygovernance.LifecycleManagementSettings;
import com.microsoft.graph.models.identitygovernance.LifecycleWorkflowsContainer;
import com.microsoft.graph.models.identitygovernance.Run;
import com.microsoft.graph.models.identitygovernance.Task;
import com.microsoft.graph.models.identitygovernance.TaskDefinition;
import com.microsoft.graph.models.identitygovernance.TaskProcessingResult;
import com.microsoft.graph.models.identitygovernance.TaskReport;
import com.microsoft.graph.models.identitygovernance.UserProcessingResult;
import com.microsoft.graph.models.identitygovernance.WorkflowTemplate;
import com.microsoft.graph.models.industrydata.AzureDataLakeConnector;
import com.microsoft.graph.models.industrydata.FileDataConnector;
import com.microsoft.graph.models.industrydata.FileValidateOperation;
import com.microsoft.graph.models.industrydata.InboundFileFlow;
import com.microsoft.graph.models.industrydata.InboundFlow;
import com.microsoft.graph.models.industrydata.InboundFlowActivity;
import com.microsoft.graph.models.industrydata.IndustryDataActivity;
import com.microsoft.graph.models.industrydata.IndustryDataConnector;
import com.microsoft.graph.models.industrydata.IndustryDataRoot;
import com.microsoft.graph.models.industrydata.IndustryDataRun;
import com.microsoft.graph.models.industrydata.IndustryDataRunActivity;
import com.microsoft.graph.models.industrydata.OutboundFlowActivity;
import com.microsoft.graph.models.industrydata.ReferenceDefinition;
import com.microsoft.graph.models.industrydata.RoleGroup;
import com.microsoft.graph.models.industrydata.SourceSystemDefinition;
import com.microsoft.graph.models.industrydata.ValidateOperation;
import com.microsoft.graph.models.industrydata.YearTimePeriodDefinition;
import com.microsoft.graph.models.managedtenants.AggregatedPolicyCompliance;
import com.microsoft.graph.models.managedtenants.AppPerformance;
import com.microsoft.graph.models.managedtenants.AuditEvent;
import com.microsoft.graph.models.managedtenants.CloudPcConnection;
import com.microsoft.graph.models.managedtenants.CloudPcDevice;
import com.microsoft.graph.models.managedtenants.CloudPcOverview;
import com.microsoft.graph.models.managedtenants.ConditionalAccessPolicyCoverage;
import com.microsoft.graph.models.managedtenants.CredentialUserRegistrationsSummary;
import com.microsoft.graph.models.managedtenants.DeviceAppPerformance;
import com.microsoft.graph.models.managedtenants.DeviceCompliancePolicySettingStateSummary;
import com.microsoft.graph.models.managedtenants.DeviceHealthStatus;
import com.microsoft.graph.models.managedtenants.ManagedDeviceCompliance;
import com.microsoft.graph.models.managedtenants.ManagedDeviceComplianceTrend;
import com.microsoft.graph.models.managedtenants.ManagedTenant;
import com.microsoft.graph.models.managedtenants.ManagedTenantAlert;
import com.microsoft.graph.models.managedtenants.ManagedTenantAlertLog;
import com.microsoft.graph.models.managedtenants.ManagedTenantAlertRule;
import com.microsoft.graph.models.managedtenants.ManagedTenantAlertRuleDefinition;
import com.microsoft.graph.models.managedtenants.ManagedTenantApiNotification;
import com.microsoft.graph.models.managedtenants.ManagedTenantEmailNotification;
import com.microsoft.graph.models.managedtenants.ManagedTenantTicketingEndpoint;
import com.microsoft.graph.models.managedtenants.ManagementAction;
import com.microsoft.graph.models.managedtenants.ManagementActionTenantDeploymentStatus;
import com.microsoft.graph.models.managedtenants.ManagementIntent;
import com.microsoft.graph.models.managedtenants.ManagementTemplate;
import com.microsoft.graph.models.managedtenants.ManagementTemplateCollection;
import com.microsoft.graph.models.managedtenants.ManagementTemplateCollectionTenantSummary;
import com.microsoft.graph.models.managedtenants.ManagementTemplateStep;
import com.microsoft.graph.models.managedtenants.ManagementTemplateStepDeployment;
import com.microsoft.graph.models.managedtenants.ManagementTemplateStepTenantSummary;
import com.microsoft.graph.models.managedtenants.ManagementTemplateStepVersion;
import com.microsoft.graph.models.managedtenants.Tenant;
import com.microsoft.graph.models.managedtenants.TenantCustomizedInformation;
import com.microsoft.graph.models.managedtenants.TenantDetailedInformation;
import com.microsoft.graph.models.managedtenants.TenantGroup;
import com.microsoft.graph.models.managedtenants.TenantTag;
import com.microsoft.graph.models.managedtenants.WindowsDeviceMalwareState;
import com.microsoft.graph.models.managedtenants.WindowsProtectionState;
import com.microsoft.graph.models.networkaccess.BranchSite;
import com.microsoft.graph.models.networkaccess.ConditionalAccessPolicy;
import com.microsoft.graph.models.networkaccess.ConditionalAccessSettings;
import com.microsoft.graph.models.networkaccess.Connectivity;
import com.microsoft.graph.models.networkaccess.ConnectivityConfigurationLink;
import com.microsoft.graph.models.networkaccess.CrossTenantAccessSettings;
import com.microsoft.graph.models.networkaccess.DeviceLink;
import com.microsoft.graph.models.networkaccess.EnrichedAuditLogs;
import com.microsoft.graph.models.networkaccess.ForwardingOptions;
import com.microsoft.graph.models.networkaccess.ForwardingPolicy;
import com.microsoft.graph.models.networkaccess.ForwardingPolicyLink;
import com.microsoft.graph.models.networkaccess.ForwardingProfile;
import com.microsoft.graph.models.networkaccess.ForwardingRule;
import com.microsoft.graph.models.networkaccess.Logs;
import com.microsoft.graph.models.networkaccess.M365ForwardingRule;
import com.microsoft.graph.models.networkaccess.NetworkAccessRoot;
import com.microsoft.graph.models.networkaccess.Policy;
import com.microsoft.graph.models.networkaccess.PolicyLink;
import com.microsoft.graph.models.networkaccess.PolicyRule;
import com.microsoft.graph.models.networkaccess.PrivateAccessForwardingRule;
import com.microsoft.graph.models.networkaccess.Profile;
import com.microsoft.graph.models.networkaccess.Reports;
import com.microsoft.graph.models.networkaccess.Settings;
import com.microsoft.graph.models.networkaccess.TenantStatus;
import com.microsoft.graph.models.search.Acronym;
import com.microsoft.graph.models.search.Bookmark;
import com.microsoft.graph.models.search.Qna;
import com.microsoft.graph.models.search.SearchAnswer;
import com.microsoft.graph.models.security.Alert;
import com.microsoft.graph.models.security.Article;
import com.microsoft.graph.models.security.ArticleIndicator;
import com.microsoft.graph.models.security.Artifact;
import com.microsoft.graph.models.security.AuthorityTemplate;
import com.microsoft.graph.models.security.CaseEscaped;
import com.microsoft.graph.models.security.CaseOperation;
import com.microsoft.graph.models.security.CasesRoot;
import com.microsoft.graph.models.security.CategoryTemplate;
import com.microsoft.graph.models.security.CitationTemplate;
import com.microsoft.graph.models.security.DataSet;
import com.microsoft.graph.models.security.DataSource;
import com.microsoft.graph.models.security.DepartmentTemplate;
import com.microsoft.graph.models.security.DetectionRule;
import com.microsoft.graph.models.security.DispositionReviewStage;
import com.microsoft.graph.models.security.EdiscoveryAddToReviewSetOperation;
import com.microsoft.graph.models.security.EdiscoveryCase;
import com.microsoft.graph.models.security.EdiscoveryCaseSettings;
import com.microsoft.graph.models.security.EdiscoveryCustodian;
import com.microsoft.graph.models.security.EdiscoveryEstimateOperation;
import com.microsoft.graph.models.security.EdiscoveryExportOperation;
import com.microsoft.graph.models.security.EdiscoveryFile;
import com.microsoft.graph.models.security.EdiscoveryHoldOperation;
import com.microsoft.graph.models.security.EdiscoveryHoldPolicy;
import com.microsoft.graph.models.security.EdiscoveryIndexOperation;
import com.microsoft.graph.models.security.EdiscoveryNoncustodialDataSource;
import com.microsoft.graph.models.security.EdiscoveryPurgeDataOperation;
import com.microsoft.graph.models.security.EdiscoveryReviewSet;
import com.microsoft.graph.models.security.EdiscoveryReviewSetQuery;
import com.microsoft.graph.models.security.EdiscoveryReviewTag;
import com.microsoft.graph.models.security.EdiscoverySearch;
import com.microsoft.graph.models.security.EdiscoveryTagOperation;
import com.microsoft.graph.models.security.EmailContentThreatSubmission;
import com.microsoft.graph.models.security.EmailThreatSubmission;
import com.microsoft.graph.models.security.EmailThreatSubmissionPolicy;
import com.microsoft.graph.models.security.EmailUrlThreatSubmission;
import com.microsoft.graph.models.security.File;
import com.microsoft.graph.models.security.FileContentThreatSubmission;
import com.microsoft.graph.models.security.FilePlanDescriptor;
import com.microsoft.graph.models.security.FilePlanDescriptorTemplate;
import com.microsoft.graph.models.security.FilePlanReferenceTemplate;
import com.microsoft.graph.models.security.FileThreatSubmission;
import com.microsoft.graph.models.security.FileUrlThreatSubmission;
import com.microsoft.graph.models.security.Host;
import com.microsoft.graph.models.security.HostComponent;
import com.microsoft.graph.models.security.HostCookie;
import com.microsoft.graph.models.security.Hostname;
import com.microsoft.graph.models.security.HostPair;
import com.microsoft.graph.models.security.HostReputation;
import com.microsoft.graph.models.security.HostSslCertificate;
import com.microsoft.graph.models.security.HostTracker;
import com.microsoft.graph.models.security.Incident;
import com.microsoft.graph.models.security.Indicator;
import com.microsoft.graph.models.security.InformationProtection;
import com.microsoft.graph.models.security.InformationProtectionPolicySetting;
import com.microsoft.graph.models.security.IntelligenceProfile;
import com.microsoft.graph.models.security.IntelligenceProfileIndicator;
import com.microsoft.graph.models.security.IpAddress;
import com.microsoft.graph.models.security.LabelsRoot;
import com.microsoft.graph.models.security.PassiveDnsRecord;
import com.microsoft.graph.models.security.PolicyBase;
import com.microsoft.graph.models.security.ProtectionRule;
import com.microsoft.graph.models.security.RetentionEvent;
import com.microsoft.graph.models.security.RetentionEventType;
import com.microsoft.graph.models.security.RetentionLabel;
import com.microsoft.graph.models.security.Search;
import com.microsoft.graph.models.security.Security;
import com.microsoft.graph.models.security.SensitivityLabel;
import com.microsoft.graph.models.security.SslCertificate;
import com.microsoft.graph.models.security.SubCategoryTemplate;
import com.microsoft.graph.models.security.Subdomain;
import com.microsoft.graph.models.security.Tag;
import com.microsoft.graph.models.security.ThreatIntelligence;
import com.microsoft.graph.models.security.ThreatSubmission;
import com.microsoft.graph.models.security.ThreatSubmissionRoot;
import com.microsoft.graph.models.security.TriggersRoot;
import com.microsoft.graph.models.security.TriggerTypesRoot;
import com.microsoft.graph.models.security.UnclassifiedArtifact;
import com.microsoft.graph.models.security.UnifiedGroupSource;
import com.microsoft.graph.models.security.UrlThreatSubmission;
import com.microsoft.graph.models.security.UserSource;
import com.microsoft.graph.models.security.Vulnerability;
import com.microsoft.graph.models.security.VulnerabilityComponent;
import com.microsoft.graph.models.security.WhoisBaseRecord;
import com.microsoft.graph.models.security.WhoisHistoryRecord;
import com.microsoft.graph.models.security.WhoisRecord;
import com.microsoft.graph.models.termstore.Group;
import com.microsoft.graph.models.termstore.Relation;
import com.microsoft.graph.models.termstore.Set;
import com.microsoft.graph.models.termstore.Store;
import com.microsoft.graph.models.termstore.Term;
import com.microsoft.graph.models.windowsupdates.AzureADDevice;
import com.microsoft.graph.models.windowsupdates.Catalog;
import com.microsoft.graph.models.windowsupdates.CatalogEntry;
import com.microsoft.graph.models.windowsupdates.ComplianceChange;
import com.microsoft.graph.models.windowsupdates.ContentApproval;
import com.microsoft.graph.models.windowsupdates.Deployment;
import com.microsoft.graph.models.windowsupdates.DeploymentAudience;
import com.microsoft.graph.models.windowsupdates.DriverUpdateCatalogEntry;
import com.microsoft.graph.models.windowsupdates.FeatureUpdateCatalogEntry;
import com.microsoft.graph.models.windowsupdates.KnowledgeBaseArticle;
import com.microsoft.graph.models.windowsupdates.OperationalInsightsConnection;
import com.microsoft.graph.models.windowsupdates.ProductRevision;
import com.microsoft.graph.models.windowsupdates.QualityUpdateCatalogEntry;
import com.microsoft.graph.models.windowsupdates.ResourceConnection;
import com.microsoft.graph.models.windowsupdates.SoftwareUpdateCatalogEntry;
import com.microsoft.graph.models.windowsupdates.UpdatableAsset;
import com.microsoft.graph.models.windowsupdates.UpdatableAssetGroup;
import com.microsoft.graph.models.windowsupdates.UpdatePolicy;
import com.microsoft.kiota.serialization.AdditionalDataHolder;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
@jakarta.annotation.Generated("com.microsoft.kiota")
public class Entity implements AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    private Map<String, Object> additionalData;
    /**
     * The unique identifier for an entity. Read-only.
     */
    private String id;
    /**
     * The OdataType property
     */
    private String odataType;
    /**
     * Instantiates a new entity and sets the default values.
     */
    public Entity() {
        this.setAdditionalData(new HashMap<>());
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a entity
     */
    @jakarta.annotation.Nonnull
    public static Entity createFromDiscriminatorValue(@jakarta.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        final ParseNode mappingValueNode = parseNode.getChildNode("@odata.type");
        if (mappingValueNode != null) {
            final String mappingValue = mappingValueNode.getStringValue();
            final Entity CreateFromDiscriminatorValue_0_result = createFromDiscriminatorValue_0(mappingValue);
            if (CreateFromDiscriminatorValue_0_result != null) {
                return CreateFromDiscriminatorValue_0_result;
            }
            final Entity CreateFromDiscriminatorValue_1_result = createFromDiscriminatorValue_1(mappingValue);
            if (CreateFromDiscriminatorValue_1_result != null) {
                return CreateFromDiscriminatorValue_1_result;
            }
            final Entity CreateFromDiscriminatorValue_2_result = createFromDiscriminatorValue_2(mappingValue);
            if (CreateFromDiscriminatorValue_2_result != null) {
                return CreateFromDiscriminatorValue_2_result;
            }
            final Entity CreateFromDiscriminatorValue_3_result = createFromDiscriminatorValue_3(mappingValue);
            if (CreateFromDiscriminatorValue_3_result != null) {
                return CreateFromDiscriminatorValue_3_result;
            }
        }
        return new Entity();
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param discriminatorValue Discriminator value from the payload
     * @return a entity
     */
    @jakarta.annotation.Nonnull
    private static Entity createFromDiscriminatorValue_0(@jakarta.annotation.Nonnull final String discriminatorValue) {
        switch (discriminatorValue) {
            case "#microsoft.graph.aadUserConversationMember": return new AadUserConversationMember();
            case "#microsoft.graph.accessPackage": return new AccessPackage();
            case "#microsoft.graph.accessPackageAssignment": return new AccessPackageAssignment();
            case "#microsoft.graph.accessPackageAssignmentPolicy": return new AccessPackageAssignmentPolicy();
            case "#microsoft.graph.accessPackageAssignmentRequest": return new AccessPackageAssignmentRequest();
            case "#microsoft.graph.accessPackageAssignmentRequestWorkflowExtension": return new AccessPackageAssignmentRequestWorkflowExtension();
            case "#microsoft.graph.accessPackageAssignmentResourceRole": return new AccessPackageAssignmentResourceRole();
            case "#microsoft.graph.accessPackageAssignmentWorkflowExtension": return new AccessPackageAssignmentWorkflowExtension();
            case "#microsoft.graph.accessPackageCatalog": return new AccessPackageCatalog();
            case "#microsoft.graph.accessPackageResource": return new AccessPackageResource();
            case "#microsoft.graph.accessPackageResourceEnvironment": return new AccessPackageResourceEnvironment();
            case "#microsoft.graph.accessPackageResourceRequest": return new AccessPackageResourceRequest();
            case "#microsoft.graph.accessPackageResourceRole": return new AccessPackageResourceRole();
            case "#microsoft.graph.accessPackageResourceRoleScope": return new AccessPackageResourceRoleScope();
            case "#microsoft.graph.accessPackageResourceScope": return new AccessPackageResourceScope();
            case "#microsoft.graph.accessPackageSubject": return new AccessPackageSubject();
            case "#microsoft.graph.accessReview": return new AccessReview();
            case "#microsoft.graph.accessReviewDecision": return new AccessReviewDecision();
            case "#microsoft.graph.accessReviewHistoryDefinition": return new AccessReviewHistoryDefinition();
            case "#microsoft.graph.accessReviewHistoryInstance": return new AccessReviewHistoryInstance();
            case "#microsoft.graph.accessReviewInstance": return new AccessReviewInstance();
            case "#microsoft.graph.accessReviewInstanceDecisionItem": return new AccessReviewInstanceDecisionItem();
            case "#microsoft.graph.accessReviewPolicy": return new AccessReviewPolicy();
            case "#microsoft.graph.accessReviewReviewer": return new AccessReviewReviewer();
            case "#microsoft.graph.accessReviewScheduleDefinition": return new AccessReviewScheduleDefinition();
            case "#microsoft.graph.accessReviewSet": return new AccessReviewSet();
            case "#microsoft.graph.accessReviewStage": return new AccessReviewStage();
            case "#microsoft.graph.activeDirectoryWindowsAutopilotDeploymentProfile": return new ActiveDirectoryWindowsAutopilotDeploymentProfile();
            case "#microsoft.graph.activityBasedTimeoutPolicy": return new ActivityBasedTimeoutPolicy();
            case "#microsoft.graph.activityHistoryItem": return new ActivityHistoryItem();
            case "#microsoft.graph.activityStatistics": return new ActivityStatistics();
            case "#microsoft.graph.addLargeGalleryViewOperation": return new AddLargeGalleryViewOperation();
            case "#microsoft.graph.adminAppsAndServices": return new AdminAppsAndServices();
            case "#microsoft.graph.adminConsentRequestPolicy": return new AdminConsentRequestPolicy();
            case "#microsoft.graph.adminDynamics": return new AdminDynamics();
            case "#microsoft.graph.adminForms": return new AdminForms();
            case "#microsoft.graph.administrativeUnit": return new AdministrativeUnit();
            case "#microsoft.graph.adminReportSettings": return new AdminReportSettings();
            case "#microsoft.graph.adminTodo": return new AdminTodo();
            case "#microsoft.graph.adminWindows": return new AdminWindows();
            case "#microsoft.graph.adminWindowsUpdates": return new AdminWindowsUpdates();
            case "#microsoft.graph.advancedThreatProtectionOnboardingDeviceSettingState": return new AdvancedThreatProtectionOnboardingDeviceSettingState();
            case "#microsoft.graph.advancedThreatProtectionOnboardingStateSummary": return new AdvancedThreatProtectionOnboardingStateSummary();
            case "#microsoft.graph.agreement": return new Agreement();
            case "#microsoft.graph.agreementAcceptance": return new AgreementAcceptance();
            case "#microsoft.graph.agreementFile": return new AgreementFile();
            case "#microsoft.graph.agreementFileLocalization": return new AgreementFileLocalization();
            case "#microsoft.graph.agreementFileProperties": return new AgreementFileProperties();
            case "#microsoft.graph.agreementFileVersion": return new AgreementFileVersion();
            case "#microsoft.graph.alert": return new Alert();
            case "#microsoft.graph.allowedDataLocation": return new AllowedDataLocation();
            case "#microsoft.graph.allowedValue": return new AllowedValue();
            case "#microsoft.graph.androidCertificateProfileBase": return new AndroidCertificateProfileBase();
            case "#microsoft.graph.androidCompliancePolicy": return new AndroidCompliancePolicy();
            case "#microsoft.graph.androidCustomConfiguration": return new AndroidCustomConfiguration();
            case "#microsoft.graph.androidDeviceComplianceLocalActionBase": return new AndroidDeviceComplianceLocalActionBase();
            case "#microsoft.graph.androidDeviceComplianceLocalActionLockDevice": return new AndroidDeviceComplianceLocalActionLockDevice();
            case "#microsoft.graph.androidDeviceComplianceLocalActionLockDeviceWithPasscode": return new AndroidDeviceComplianceLocalActionLockDeviceWithPasscode();
            case "#microsoft.graph.androidDeviceOwnerCertificateProfileBase": return new AndroidDeviceOwnerCertificateProfileBase();
            case "#microsoft.graph.androidDeviceOwnerCompliancePolicy": return new AndroidDeviceOwnerCompliancePolicy();
            case "#microsoft.graph.androidDeviceOwnerDerivedCredentialAuthenticationConfiguration": return new AndroidDeviceOwnerDerivedCredentialAuthenticationConfiguration();
            case "#microsoft.graph.androidDeviceOwnerEnrollmentProfile": return new AndroidDeviceOwnerEnrollmentProfile();
            case "#microsoft.graph.androidDeviceOwnerEnterpriseWiFiConfiguration": return new AndroidDeviceOwnerEnterpriseWiFiConfiguration();
            case "#microsoft.graph.androidDeviceOwnerGeneralDeviceConfiguration": return new AndroidDeviceOwnerGeneralDeviceConfiguration();
            case "#microsoft.graph.androidDeviceOwnerImportedPFXCertificateProfile": return new AndroidDeviceOwnerImportedPFXCertificateProfile();
            case "#microsoft.graph.androidDeviceOwnerPkcsCertificateProfile": return new AndroidDeviceOwnerPkcsCertificateProfile();
            case "#microsoft.graph.androidDeviceOwnerScepCertificateProfile": return new AndroidDeviceOwnerScepCertificateProfile();
            case "#microsoft.graph.androidDeviceOwnerTrustedRootCertificate": return new AndroidDeviceOwnerTrustedRootCertificate();
            case "#microsoft.graph.androidDeviceOwnerVpnConfiguration": return new AndroidDeviceOwnerVpnConfiguration();
            case "#microsoft.graph.androidDeviceOwnerWiFiConfiguration": return new AndroidDeviceOwnerWiFiConfiguration();
            case "#microsoft.graph.androidEasEmailProfileConfiguration": return new AndroidEasEmailProfileConfiguration();
            case "#microsoft.graph.androidEnterpriseWiFiConfiguration": return new AndroidEnterpriseWiFiConfiguration();
            case "#microsoft.graph.androidForWorkApp": return new AndroidForWorkApp();
            case "#microsoft.graph.androidForWorkAppConfigurationSchema": return new AndroidForWorkAppConfigurationSchema();
            case "#microsoft.graph.androidForWorkCertificateProfileBase": return new AndroidForWorkCertificateProfileBase();
            case "#microsoft.graph.androidForWorkCompliancePolicy": return new AndroidForWorkCompliancePolicy();
            case "#microsoft.graph.androidForWorkCustomConfiguration": return new AndroidForWorkCustomConfiguration();
            case "#microsoft.graph.androidForWorkEasEmailProfileBase": return new AndroidForWorkEasEmailProfileBase();
            case "#microsoft.graph.androidForWorkEnrollmentProfile": return new AndroidForWorkEnrollmentProfile();
            case "#microsoft.graph.androidForWorkEnterpriseWiFiConfiguration": return new AndroidForWorkEnterpriseWiFiConfiguration();
            case "#microsoft.graph.androidForWorkGeneralDeviceConfiguration": return new AndroidForWorkGeneralDeviceConfiguration();
            case "#microsoft.graph.androidForWorkGmailEasConfiguration": return new AndroidForWorkGmailEasConfiguration();
            case "#microsoft.graph.androidForWorkImportedPFXCertificateProfile": return new AndroidForWorkImportedPFXCertificateProfile();
            case "#microsoft.graph.androidForWorkMobileAppConfiguration": return new AndroidForWorkMobileAppConfiguration();
            case "#microsoft.graph.androidForWorkNineWorkEasConfiguration": return new AndroidForWorkNineWorkEasConfiguration();
            case "#microsoft.graph.androidForWorkPkcsCertificateProfile": return new AndroidForWorkPkcsCertificateProfile();
            case "#microsoft.graph.androidForWorkScepCertificateProfile": return new AndroidForWorkScepCertificateProfile();
            case "#microsoft.graph.androidForWorkSettings": return new AndroidForWorkSettings();
            case "#microsoft.graph.androidForWorkTrustedRootCertificate": return new AndroidForWorkTrustedRootCertificate();
            case "#microsoft.graph.androidForWorkVpnConfiguration": return new AndroidForWorkVpnConfiguration();
            case "#microsoft.graph.androidForWorkWiFiConfiguration": return new AndroidForWorkWiFiConfiguration();
            case "#microsoft.graph.androidGeneralDeviceConfiguration": return new AndroidGeneralDeviceConfiguration();
            case "#microsoft.graph.androidImportedPFXCertificateProfile": return new AndroidImportedPFXCertificateProfile();
            case "#microsoft.graph.androidLobApp": return new AndroidLobApp();
            case "#microsoft.graph.androidManagedAppProtection": return new AndroidManagedAppProtection();
            case "#microsoft.graph.androidManagedAppRegistration": return new AndroidManagedAppRegistration();
            case "#microsoft.graph.androidManagedStoreAccountEnterpriseSettings": return new AndroidManagedStoreAccountEnterpriseSettings();
            case "#microsoft.graph.androidManagedStoreApp": return new AndroidManagedStoreApp();
            case "#microsoft.graph.androidManagedStoreAppConfiguration": return new AndroidManagedStoreAppConfiguration();
            case "#microsoft.graph.androidManagedStoreAppConfigurationSchema": return new AndroidManagedStoreAppConfigurationSchema();
            case "#microsoft.graph.androidManagedStoreWebApp": return new AndroidManagedStoreWebApp();
            case "#microsoft.graph.androidOmaCpConfiguration": return new AndroidOmaCpConfiguration();
            case "#microsoft.graph.androidPkcsCertificateProfile": return new AndroidPkcsCertificateProfile();
            case "#microsoft.graph.androidScepCertificateProfile": return new AndroidScepCertificateProfile();
            case "#microsoft.graph.androidStoreApp": return new AndroidStoreApp();
            case "#microsoft.graph.androidTrustedRootCertificate": return new AndroidTrustedRootCertificate();
            case "#microsoft.graph.androidVpnConfiguration": return new AndroidVpnConfiguration();
            case "#microsoft.graph.androidWiFiConfiguration": return new AndroidWiFiConfiguration();
            case "#microsoft.graph.androidWorkProfileCertificateProfileBase": return new AndroidWorkProfileCertificateProfileBase();
            case "#microsoft.graph.androidWorkProfileCompliancePolicy": return new AndroidWorkProfileCompliancePolicy();
            case "#microsoft.graph.androidWorkProfileCustomConfiguration": return new AndroidWorkProfileCustomConfiguration();
            case "#microsoft.graph.androidWorkProfileEasEmailProfileBase": return new AndroidWorkProfileEasEmailProfileBase();
            case "#microsoft.graph.androidWorkProfileEnterpriseWiFiConfiguration": return new AndroidWorkProfileEnterpriseWiFiConfiguration();
            case "#microsoft.graph.androidWorkProfileGeneralDeviceConfiguration": return new AndroidWorkProfileGeneralDeviceConfiguration();
            case "#microsoft.graph.androidWorkProfileGmailEasConfiguration": return new AndroidWorkProfileGmailEasConfiguration();
            case "#microsoft.graph.androidWorkProfileNineWorkEasConfiguration": return new AndroidWorkProfileNineWorkEasConfiguration();
            case "#microsoft.graph.androidWorkProfilePkcsCertificateProfile": return new AndroidWorkProfilePkcsCertificateProfile();
            case "#microsoft.graph.androidWorkProfileScepCertificateProfile": return new AndroidWorkProfileScepCertificateProfile();
            case "#microsoft.graph.androidWorkProfileTrustedRootCertificate": return new AndroidWorkProfileTrustedRootCertificate();
            case "#microsoft.graph.androidWorkProfileVpnConfiguration": return new AndroidWorkProfileVpnConfiguration();
            case "#microsoft.graph.androidWorkProfileWiFiConfiguration": return new AndroidWorkProfileWiFiConfiguration();
            case "#microsoft.graph.anonymousGuestConversationMember": return new AnonymousGuestConversationMember();
            case "#microsoft.graph.aospDeviceOwnerCertificateProfileBase": return new AospDeviceOwnerCertificateProfileBase();
            case "#microsoft.graph.aospDeviceOwnerCompliancePolicy": return new AospDeviceOwnerCompliancePolicy();
            case "#microsoft.graph.aospDeviceOwnerDeviceConfiguration": return new AospDeviceOwnerDeviceConfiguration();
            case "#microsoft.graph.aospDeviceOwnerEnterpriseWiFiConfiguration": return new AospDeviceOwnerEnterpriseWiFiConfiguration();
            case "#microsoft.graph.aospDeviceOwnerPkcsCertificateProfile": return new AospDeviceOwnerPkcsCertificateProfile();
            case "#microsoft.graph.aospDeviceOwnerScepCertificateProfile": return new AospDeviceOwnerScepCertificateProfile();
            case "#microsoft.graph.aospDeviceOwnerTrustedRootCertificate": return new AospDeviceOwnerTrustedRootCertificate();
            case "#microsoft.graph.aospDeviceOwnerWiFiConfiguration": return new AospDeviceOwnerWiFiConfiguration();
            case "#microsoft.graph.appConsentApprovalRoute": return new AppConsentApprovalRoute();
            case "#microsoft.graph.appConsentRequest": return new AppConsentRequest();
            case "#microsoft.graph.appCredentialSignInActivity": return new AppCredentialSignInActivity();
            case "#microsoft.graph.appleDeviceFeaturesConfigurationBase": return new AppleDeviceFeaturesConfigurationBase();
            case "#microsoft.graph.appleEnrollmentProfileAssignment": return new AppleEnrollmentProfileAssignment();
            case "#microsoft.graph.appleExpeditedCheckinConfigurationBase": return new AppleExpeditedCheckinConfigurationBase();
            case "#microsoft.graph.appleManagedIdentityProvider": return new AppleManagedIdentityProvider();
            case "#microsoft.graph.applePushNotificationCertificate": return new ApplePushNotificationCertificate();
            case "#microsoft.graph.appleUserInitiatedEnrollmentProfile": return new AppleUserInitiatedEnrollmentProfile();
            case "#microsoft.graph.appleVpnConfiguration": return new AppleVpnConfiguration();
            case "#microsoft.graph.appleVppTokenTroubleshootingEvent": return new AppleVppTokenTroubleshootingEvent();
            case "#microsoft.graph.application": return new Application();
            case "#microsoft.graph.applicationSegment": return new ApplicationSegment();
            case "#microsoft.graph.applicationSignInDetailedSummary": return new ApplicationSignInDetailedSummary();
            case "#microsoft.graph.applicationSignInSummary": return new ApplicationSignInSummary();
            case "#microsoft.graph.applicationTemplate": return new ApplicationTemplate();
            case "#microsoft.graph.appLogCollectionRequest": return new AppLogCollectionRequest();
            case "#microsoft.graph.appManagementPolicy": return new AppManagementPolicy();
            case "#microsoft.graph.appRoleAssignment": return new AppRoleAssignment();
            case "#microsoft.graph.approval": return new Approval();
            case "#microsoft.graph.approvalStep": return new ApprovalStep();
            case "#microsoft.graph.approvalWorkflowProvider": return new ApprovalWorkflowProvider();
            case "#microsoft.graph.appScope": return new AppScope();
            case "#microsoft.graph.appVulnerabilityManagedDevice": return new AppVulnerabilityManagedDevice();
            case "#microsoft.graph.appVulnerabilityMobileApp": return new AppVulnerabilityMobileApp();
            case "#microsoft.graph.appVulnerabilityTask": return new AppVulnerabilityTask();
            case "#microsoft.graph.assignmentFilterEvaluationStatusDetails": return new AssignmentFilterEvaluationStatusDetails();
            case "#microsoft.graph.associatedTeamInfo": return new AssociatedTeamInfo();
            case "#microsoft.graph.attachment": return new Attachment();
            case "#microsoft.graph.attachmentBase": return new AttachmentBase();
            case "#microsoft.graph.attachmentSession": return new AttachmentSession();
            case "#microsoft.graph.attackSimulationOperation": return new AttackSimulationOperation();
            case "#microsoft.graph.attackSimulationRoot": return new AttackSimulationRoot();
            case "#microsoft.graph.attendanceRecord": return new AttendanceRecord();
            case "#microsoft.graph.attributeMappingFunctionSchema": return new AttributeMappingFunctionSchema();
            case "#microsoft.graph.attributeSet": return new AttributeSet();
            case "#microsoft.graph.audioRoutingGroup": return new AudioRoutingGroup();
            case "#microsoft.graph.auditEvent": return new AuditEvent();
            case "#microsoft.graph.authentication": return new Authentication();
            case "#microsoft.graph.authenticationCombinationConfiguration": return new AuthenticationCombinationConfiguration();
            case "#microsoft.graph.authenticationContextClassReference": return new AuthenticationContextClassReference();
            case "#microsoft.graph.authenticationEventListener": return new AuthenticationEventListener();
            case "#microsoft.graph.authenticationEventsFlow": return new AuthenticationEventsFlow();
            case "#microsoft.graph.authenticationEventsPolicy": return new AuthenticationEventsPolicy();
            case "#microsoft.graph.authenticationFlowsPolicy": return new AuthenticationFlowsPolicy();
            case "#microsoft.graph.authenticationListener": return new AuthenticationListener();
            case "#microsoft.graph.authenticationMethod": return new AuthenticationMethod();
            case "#microsoft.graph.authenticationMethodConfiguration": return new AuthenticationMethodConfiguration();
            case "#microsoft.graph.authenticationMethodModeDetail": return new AuthenticationMethodModeDetail();
            case "#microsoft.graph.authenticationMethodsPolicy": return new AuthenticationMethodsPolicy();
            case "#microsoft.graph.authenticationMethodsRoot": return new AuthenticationMethodsRoot();
            case "#microsoft.graph.authenticationMethodTarget": return new AuthenticationMethodTarget();
            case "#microsoft.graph.authenticationStrengthPolicy": return new AuthenticationStrengthPolicy();
            case "#microsoft.graph.authenticationStrengthRoot": return new AuthenticationStrengthRoot();
            case "#microsoft.graph.authoredNote": return new AuthoredNote();
            case "#microsoft.graph.authorizationPolicy": return new AuthorizationPolicy();
            case "#microsoft.graph.azureADAuthentication": return new AzureADAuthentication();
            case "#microsoft.graph.azureADWindowsAutopilotDeploymentProfile": return new AzureADWindowsAutopilotDeploymentProfile();
            case "#microsoft.graph.azureCommunicationServicesUserConversationMember": return new AzureCommunicationServicesUserConversationMember();
            case "#microsoft.graph.b2cAuthenticationMethodsPolicy": return new B2cAuthenticationMethodsPolicy();
            case "#microsoft.graph.b2cIdentityUserFlow": return new B2cIdentityUserFlow();
            case "#microsoft.graph.b2xIdentityUserFlow": return new B2xIdentityUserFlow();
            case "#microsoft.graph.baseItem": return new BaseItem();
            case "#microsoft.graph.baseItemVersion": return new BaseItemVersion();
            case "#microsoft.graph.baseSitePage": return new BaseSitePage();
            case "#microsoft.graph.bitlocker": return new Bitlocker();
            case "#microsoft.graph.bitlockerRecoveryKey": return new BitlockerRecoveryKey();
            case "#microsoft.graph.bookingAppointment": return new BookingAppointment();
            case "#microsoft.graph.bookingBusiness": return new BookingBusiness();
            case "#microsoft.graph.bookingCurrency": return new BookingCurrency();
            case "#microsoft.graph.bookingCustomer": return new BookingCustomer();
            case "#microsoft.graph.bookingCustomQuestion": return new BookingCustomQuestion();
            case "#microsoft.graph.bookingNamedEntity": return new BookingNamedEntity();
            case "#microsoft.graph.bookingPerson": return new BookingPerson();
            case "#microsoft.graph.bookingService": return new BookingService();
            case "#microsoft.graph.bookingStaffMember": return new BookingStaffMember();
            case "#microsoft.graph.browserSharedCookie": return new BrowserSharedCookie();
            case "#microsoft.graph.browserSite": return new BrowserSite();
            case "#microsoft.graph.browserSiteList": return new BrowserSiteList();
            case "#microsoft.graph.builtInIdentityProvider": return new BuiltInIdentityProvider();
            case "#microsoft.graph.bulkUpload": return new BulkUpload();
            case "#microsoft.graph.businessFlow": return new BusinessFlow();
            case "#microsoft.graph.businessFlowTemplate": return new BusinessFlowTemplate();
            case "#microsoft.graph.businessScenario": return new BusinessScenario();
            case "#microsoft.graph.businessScenarioPlanner": return new BusinessScenarioPlanner();
            case "#microsoft.graph.businessScenarioPlanReference": return new BusinessScenarioPlanReference();
            case "#microsoft.graph.businessScenarioTask": return new BusinessScenarioTask();
            case "#microsoft.graph.calendar": return new Calendar();
            case "#microsoft.graph.calendarGroup": return new CalendarGroup();
            case "#microsoft.graph.calendarPermission": return new CalendarPermission();
            case "#microsoft.graph.calendarSharingMessage": return new CalendarSharingMessage();
            case "#microsoft.graph.call": return new Call();
            case "#microsoft.graph.callActivityStatistics": return new CallActivityStatistics();
            case "#microsoft.graph.callRecording": return new CallRecording();
            case "#microsoft.graph.callRecords.callRecord": return new CallRecord();
            case "#microsoft.graph.callRecords.segment": return new Segment();
            case "#microsoft.graph.callRecords.session": return new Session();
            case "#microsoft.graph.callTranscript": return new CallTranscript();
            case "#microsoft.graph.cancelMediaProcessingOperation": return new CancelMediaProcessingOperation();
            case "#microsoft.graph.canvasLayout": return new CanvasLayout();
            case "#microsoft.graph.cartToClassAssociation": return new CartToClassAssociation();
            case "#microsoft.graph.certificateAuthorityAsEntity": return new CertificateAuthorityAsEntity();
            case "#microsoft.graph.certificateAuthorityPath": return new CertificateAuthorityPath();
            case "#microsoft.graph.certificateBasedApplicationConfiguration": return new CertificateBasedApplicationConfiguration();
            case "#microsoft.graph.certificateBasedAuthConfiguration": return new CertificateBasedAuthConfiguration();
            case "#microsoft.graph.certificateConnectorDetails": return new CertificateConnectorDetails();
            case "#microsoft.graph.changeTrackedEntity": return new ChangeTrackedEntity();
            case "#microsoft.graph.channel": return new Channel();
            case "#microsoft.graph.chat": return new Chat();
            case "#microsoft.graph.chatActivityStatistics": return new ChatActivityStatistics();
            case "#microsoft.graph.chatMessage": return new ChatMessage();
            case "#microsoft.graph.chatMessageHostedContent": return new ChatMessageHostedContent();
            case "#microsoft.graph.chatMessageInfo": return new ChatMessageInfo();
            case "#microsoft.graph.checklistItem": return new ChecklistItem();
            case "#microsoft.graph.chromeOSOnboardingSettings": return new ChromeOSOnboardingSettings();
            case "#microsoft.graph.claimsMappingPolicy": return new ClaimsMappingPolicy();
            case "#microsoft.graph.classificationJobResponse": return new ClassificationJobResponse();
            case "#microsoft.graph.cloudAppSecurityProfile": return new CloudAppSecurityProfile();
            case "#microsoft.graph.cloudPC": return new CloudPC();
            case "#microsoft.graph.cloudPcAuditEvent": return new CloudPcAuditEvent();
            case "#microsoft.graph.cloudPcBulkAction": return new CloudPcBulkAction();
            case "#microsoft.graph.cloudPcBulkPowerOff": return new CloudPcBulkPowerOff();
            case "#microsoft.graph.cloudPcBulkPowerOn": return new CloudPcBulkPowerOn();
            case "#microsoft.graph.cloudPcBulkReprovision": return new CloudPcBulkReprovision();
            case "#microsoft.graph.cloudPcBulkResize": return new CloudPcBulkResize();
            case "#microsoft.graph.cloudPcBulkRestart": return new CloudPcBulkRestart();
            case "#microsoft.graph.cloudPcBulkRestore": return new CloudPcBulkRestore();
            case "#microsoft.graph.cloudPcBulkTroubleshoot": return new CloudPcBulkTroubleshoot();
            case "#microsoft.graph.cloudPCConnectivityIssue": return new CloudPCConnectivityIssue();
            case "#microsoft.graph.cloudPcCrossCloudGovernmentOrganizationMapping": return new CloudPcCrossCloudGovernmentOrganizationMapping();
            case "#microsoft.graph.cloudPcDeviceImage": return new CloudPcDeviceImage();
            case "#microsoft.graph.cloudPcExportJob": return new CloudPcExportJob();
            case "#microsoft.graph.cloudPcExternalPartnerSetting": return new CloudPcExternalPartnerSetting();
            case "#microsoft.graph.cloudPcFrontLineServicePlan": return new CloudPcFrontLineServicePlan();
            case "#microsoft.graph.cloudPcGalleryImage": return new CloudPcGalleryImage();
            case "#microsoft.graph.cloudPcOnPremisesConnection": return new CloudPcOnPremisesConnection();
            case "#microsoft.graph.cloudPcOrganizationSettings": return new CloudPcOrganizationSettings();
            case "#microsoft.graph.cloudPcProvisioningPolicy": return new CloudPcProvisioningPolicy();
            case "#microsoft.graph.cloudPcProvisioningPolicyAssignment": return new CloudPcProvisioningPolicyAssignment();
            case "#microsoft.graph.cloudPcReports": return new CloudPcReports();
            case "#microsoft.graph.cloudPcServicePlan": return new CloudPcServicePlan();
            case "#microsoft.graph.cloudPcSharedUseServicePlan": return new CloudPcSharedUseServicePlan();
            case "#microsoft.graph.cloudPcSnapshot": return new CloudPcSnapshot();
            case "#microsoft.graph.cloudPcSupportedRegion": return new CloudPcSupportedRegion();
            case "#microsoft.graph.cloudPcUserSetting": return new CloudPcUserSetting();
            case "#microsoft.graph.cloudPcUserSettingAssignment": return new CloudPcUserSettingAssignment();
            case "#microsoft.graph.columnDefinition": return new ColumnDefinition();
            case "#microsoft.graph.columnLink": return new ColumnLink();
            case "#microsoft.graph.comanagementEligibleDevice": return new ComanagementEligibleDevice();
            case "#microsoft.graph.command": return new Command();
            case "#microsoft.graph.commsOperation": return new CommsOperation();
            case "#microsoft.graph.companySubscription": return new CompanySubscription();
            case "#microsoft.graph.complianceManagementPartner": return new ComplianceManagementPartner();
            case "#microsoft.graph.conditionalAccessPolicy": return new ConditionalAccessPolicy();
            case "#microsoft.graph.conditionalAccessRoot": return new ConditionalAccessRoot();
            case "#microsoft.graph.conditionalAccessTemplate": return new ConditionalAccessTemplate();
            case "#microsoft.graph.configManagerCollection": return new ConfigManagerCollection();
            case "#microsoft.graph.connectedOrganization": return new ConnectedOrganization();
            case "#microsoft.graph.connectionOperation": return new ConnectionOperation();
            case "#microsoft.graph.connector": return new Connector();
            case "#microsoft.graph.connectorGroup": return new ConnectorGroup();
            case "#microsoft.graph.contact": return new Contact();
            case "#microsoft.graph.contactFolder": return new ContactFolder();
            case "#microsoft.graph.contactMergeSuggestions": return new ContactMergeSuggestions();
            case "#microsoft.graph.contentSharingSession": return new ContentSharingSession();
            case "#microsoft.graph.contentType": return new ContentType();
            case "#microsoft.graph.continuousAccessEvaluationPolicy": return new ContinuousAccessEvaluationPolicy();
            case "#microsoft.graph.contract": return new Contract();
            case "#microsoft.graph.conversation": return new Conversation();
            case "#microsoft.graph.conversationMember": return new ConversationMember();
            case "#microsoft.graph.conversationThread": return new ConversationThread();
            case "#microsoft.graph.corsConfiguration_v2": return new CorsConfigurationV2();
            case "#microsoft.graph.countryNamedLocation": return new CountryNamedLocation();
            case "#microsoft.graph.credentialUsageSummary": return new CredentialUsageSummary();
            case "#microsoft.graph.credentialUserRegistrationCount": return new CredentialUserRegistrationCount();
            case "#microsoft.graph.credentialUserRegistrationDetails": return new CredentialUserRegistrationDetails();
            case "#microsoft.graph.crossTenantAccessPolicy": return new CrossTenantAccessPolicy();
            case "#microsoft.graph.crossTenantAccessPolicyConfigurationDefault": return new CrossTenantAccessPolicyConfigurationDefault();
            case "#microsoft.graph.customAccessPackageWorkflowExtension": return new CustomAccessPackageWorkflowExtension();
            case "#microsoft.graph.customAppScope": return new CustomAppScope();
            case "#microsoft.graph.customAuthenticationExtension": return new CustomAuthenticationExtension();
            case "#microsoft.graph.customCalloutExtension": return new CustomCalloutExtension();
            case "#microsoft.graph.customExtensionHandler": return new CustomExtensionHandler();
            case "#microsoft.graph.customExtensionStageSetting": return new CustomExtensionStageSetting();
            case "#microsoft.graph.customSecurityAttributeAudit": return new CustomSecurityAttributeAudit();
            case "#microsoft.graph.customSecurityAttributeDefinition": return new CustomSecurityAttributeDefinition();
            case "#microsoft.graph.dataClassificationService": return new DataClassificationService();
            case "#microsoft.graph.dataLossPreventionPolicy": return new DataLossPreventionPolicy();
            case "#microsoft.graph.dataPolicyOperation": return new DataPolicyOperation();
            case "#microsoft.graph.dataSharingConsent": return new DataSharingConsent();
            case "#microsoft.graph.defaultDeviceCompliancePolicy": return new DefaultDeviceCompliancePolicy();
            case "#microsoft.graph.defaultManagedAppProtection": return new DefaultManagedAppProtection();
            case "#microsoft.graph.defaultUserRoleOverride": return new DefaultUserRoleOverride();
            case "#microsoft.graph.delegatedAdminAccessAssignment": return new DelegatedAdminAccessAssignment();
            case "#microsoft.graph.delegatedAdminCustomer": return new DelegatedAdminCustomer();
            case "#microsoft.graph.delegatedAdminRelationship": return new DelegatedAdminRelationship();
            case "#microsoft.graph.delegatedAdminRelationshipOperation": return new DelegatedAdminRelationshipOperation();
            case "#microsoft.graph.delegatedAdminRelationshipRequest": return new DelegatedAdminRelationshipRequest();
            case "#microsoft.graph.delegatedAdminServiceManagementDetail": return new DelegatedAdminServiceManagementDetail();
            case "#microsoft.graph.delegatedPermissionClassification": return new DelegatedPermissionClassification();
            case "#microsoft.graph.deletedChat": return new DeletedChat();
            case "#microsoft.graph.deletedItemContainer": return new DeletedItemContainer();
            case "#microsoft.graph.deletedTeam": return new DeletedTeam();
            case "#microsoft.graph.deltaParticipants": return new DeltaParticipants();
            case "#microsoft.graph.depEnrollmentBaseProfile": return new DepEnrollmentBaseProfile();
            case "#microsoft.graph.depEnrollmentProfile": return new DepEnrollmentProfile();
            case "#microsoft.graph.depIOSEnrollmentProfile": return new DepIOSEnrollmentProfile();
            case "#microsoft.graph.depMacOSEnrollmentProfile": return new DepMacOSEnrollmentProfile();
            case "#microsoft.graph.depOnboardingSetting": return new DepOnboardingSetting();
            case "#microsoft.graph.detectedApp": return new DetectedApp();
            case "#microsoft.graph.device": return new Device();
            case "#microsoft.graph.deviceAndAppManagementAssignmentFilter": return new DeviceAndAppManagementAssignmentFilter();
            case "#microsoft.graph.deviceAndAppManagementRoleAssignment": return new DeviceAndAppManagementRoleAssignment();
            case "#microsoft.graph.deviceAndAppManagementRoleDefinition": return new DeviceAndAppManagementRoleDefinition();
            case "#microsoft.graph.deviceAppManagement": return new DeviceAppManagement();
            case "#microsoft.graph.deviceAppManagementTask": return new DeviceAppManagementTask();
            case "#microsoft.graph.deviceCategory": return new DeviceCategory();
            case "#microsoft.graph.deviceComanagementAuthorityConfiguration": return new DeviceComanagementAuthorityConfiguration();
            case "#microsoft.graph.deviceComplianceActionItem": return new DeviceComplianceActionItem();
            case "#microsoft.graph.deviceComplianceDeviceOverview": return new DeviceComplianceDeviceOverview();
            case "#microsoft.graph.deviceComplianceDeviceStatus": return new DeviceComplianceDeviceStatus();
            case "#microsoft.graph.deviceCompliancePolicy": return new DeviceCompliancePolicy();
            case "#microsoft.graph.deviceCompliancePolicyAssignment": return new DeviceCompliancePolicyAssignment();
            case "#microsoft.graph.deviceCompliancePolicyDeviceStateSummary": return new DeviceCompliancePolicyDeviceStateSummary();
            case "#microsoft.graph.deviceCompliancePolicyGroupAssignment": return new DeviceCompliancePolicyGroupAssignment();
            case "#microsoft.graph.deviceCompliancePolicyPolicySetItem": return new DeviceCompliancePolicyPolicySetItem();
            case "#microsoft.graph.deviceCompliancePolicySettingStateSummary": return new DeviceCompliancePolicySettingStateSummary();
            case "#microsoft.graph.deviceCompliancePolicyState": return new DeviceCompliancePolicyState();
            case "#microsoft.graph.deviceComplianceScheduledActionForRule": return new DeviceComplianceScheduledActionForRule();
            case "#microsoft.graph.deviceComplianceScript": return new DeviceComplianceScript();
            case "#microsoft.graph.deviceComplianceScriptDeviceState": return new DeviceComplianceScriptDeviceState();
            case "#microsoft.graph.deviceComplianceScriptRunSummary": return new DeviceComplianceScriptRunSummary();
            case "#microsoft.graph.deviceComplianceSettingState": return new DeviceComplianceSettingState();
            case "#microsoft.graph.deviceComplianceUserOverview": return new DeviceComplianceUserOverview();
            case "#microsoft.graph.deviceComplianceUserStatus": return new DeviceComplianceUserStatus();
            case "#microsoft.graph.deviceConfiguration": return new DeviceConfiguration();
            case "#microsoft.graph.deviceConfigurationAssignment": return new DeviceConfigurationAssignment();
            case "#microsoft.graph.deviceConfigurationConflictSummary": return new DeviceConfigurationConflictSummary();
            case "#microsoft.graph.deviceConfigurationDeviceOverview": return new DeviceConfigurationDeviceOverview();
            case "#microsoft.graph.deviceConfigurationDeviceStateSummary": return new DeviceConfigurationDeviceStateSummary();
            case "#microsoft.graph.deviceConfigurationDeviceStatus": return new DeviceConfigurationDeviceStatus();
            case "#microsoft.graph.deviceConfigurationGroupAssignment": return new DeviceConfigurationGroupAssignment();
            case "#microsoft.graph.deviceConfigurationPolicySetItem": return new DeviceConfigurationPolicySetItem();
            case "#microsoft.graph.deviceConfigurationState": return new DeviceConfigurationState();
            case "#microsoft.graph.deviceConfigurationUserOverview": return new DeviceConfigurationUserOverview();
            case "#microsoft.graph.deviceConfigurationUserStateSummary": return new DeviceConfigurationUserStateSummary();
            case "#microsoft.graph.deviceConfigurationUserStatus": return new DeviceConfigurationUserStatus();
            case "#microsoft.graph.deviceCustomAttributeShellScript": return new DeviceCustomAttributeShellScript();
            case "#microsoft.graph.deviceEnrollmentConfiguration": return new DeviceEnrollmentConfiguration();
            case "#microsoft.graph.deviceEnrollmentLimitConfiguration": return new DeviceEnrollmentLimitConfiguration();
            case "#microsoft.graph.deviceEnrollmentNotificationConfiguration": return new DeviceEnrollmentNotificationConfiguration();
            case "#microsoft.graph.deviceEnrollmentPlatformRestrictionConfiguration": return new DeviceEnrollmentPlatformRestrictionConfiguration();
            case "#microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": return new DeviceEnrollmentPlatformRestrictionsConfiguration();
            case "#microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": return new DeviceEnrollmentWindowsHelloForBusinessConfiguration();
            case "#microsoft.graph.deviceHealthScript": return new DeviceHealthScript();
            case "#microsoft.graph.deviceHealthScriptAssignment": return new DeviceHealthScriptAssignment();
            case "#microsoft.graph.deviceHealthScriptDeviceState": return new DeviceHealthScriptDeviceState();
            case "#microsoft.graph.deviceHealthScriptRunSummary": return new DeviceHealthScriptRunSummary();
            case "#microsoft.graph.deviceInstallState": return new DeviceInstallState();
            case "#microsoft.graph.deviceLocalCredentialInfo": return new DeviceLocalCredentialInfo();
            case "#microsoft.graph.deviceLogCollectionResponse": return new DeviceLogCollectionResponse();
            case "#microsoft.graph.deviceManagement": return new DeviceManagement();
            case "#microsoft.graph.deviceManagement.alertRecord": return new AlertRecord();
            case "#microsoft.graph.deviceManagement.alertRule": return new AlertRule();
            case "#microsoft.graph.deviceManagement.monitoring": return new Monitoring();
            case "#microsoft.graph.deviceManagementAbstractComplexSettingDefinition": return new DeviceManagementAbstractComplexSettingDefinition();
            case "#microsoft.graph.deviceManagementAbstractComplexSettingInstance": return new DeviceManagementAbstractComplexSettingInstance();
            case "#microsoft.graph.deviceManagementAutopilotEvent": return new DeviceManagementAutopilotEvent();
            case "#microsoft.graph.deviceManagementAutopilotPolicyStatusDetail": return new DeviceManagementAutopilotPolicyStatusDetail();
            case "#microsoft.graph.deviceManagementBooleanSettingInstance": return new DeviceManagementBooleanSettingInstance();
            case "#microsoft.graph.deviceManagementCachedReportConfiguration": return new DeviceManagementCachedReportConfiguration();
            case "#microsoft.graph.deviceManagementCollectionSettingDefinition": return new DeviceManagementCollectionSettingDefinition();
            case "#microsoft.graph.deviceManagementCollectionSettingInstance": return new DeviceManagementCollectionSettingInstance();
            case "#microsoft.graph.deviceManagementComplexSettingDefinition": return new DeviceManagementComplexSettingDefinition();
            case "#microsoft.graph.deviceManagementComplexSettingInstance": return new DeviceManagementComplexSettingInstance();
            case "#microsoft.graph.deviceManagementComplianceActionItem": return new DeviceManagementComplianceActionItem();
            case "#microsoft.graph.deviceManagementCompliancePolicy": return new DeviceManagementCompliancePolicy();
            case "#microsoft.graph.deviceManagementComplianceScheduledActionForRule": return new DeviceManagementComplianceScheduledActionForRule();
            case "#microsoft.graph.deviceManagementConfigurationCategory": return new DeviceManagementConfigurationCategory();
            case "#microsoft.graph.deviceManagementConfigurationChoiceSettingCollectionDefinition": return new DeviceManagementConfigurationChoiceSettingCollectionDefinition();
            case "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition": return new DeviceManagementConfigurationChoiceSettingDefinition();
            case "#microsoft.graph.deviceManagementConfigurationPolicy": return new DeviceManagementConfigurationPolicy();
            case "#microsoft.graph.deviceManagementConfigurationPolicyAssignment": return new DeviceManagementConfigurationPolicyAssignment();
            case "#microsoft.graph.deviceManagementConfigurationPolicyPolicySetItem": return new DeviceManagementConfigurationPolicyPolicySetItem();
            case "#microsoft.graph.deviceManagementConfigurationPolicyTemplate": return new DeviceManagementConfigurationPolicyTemplate();
            case "#microsoft.graph.deviceManagementConfigurationRedirectSettingDefinition": return new DeviceManagementConfigurationRedirectSettingDefinition();
            case "#microsoft.graph.deviceManagementConfigurationSetting": return new DeviceManagementConfigurationSetting();
            case "#microsoft.graph.deviceManagementConfigurationSettingDefinition": return new DeviceManagementConfigurationSettingDefinition();
            case "#microsoft.graph.deviceManagementConfigurationSettingGroupCollectionDefinition": return new DeviceManagementConfigurationSettingGroupCollectionDefinition();
            case "#microsoft.graph.deviceManagementConfigurationSettingGroupDefinition": return new DeviceManagementConfigurationSettingGroupDefinition();
            case "#microsoft.graph.deviceManagementConfigurationSettingTemplate": return new DeviceManagementConfigurationSettingTemplate();
            case "#microsoft.graph.deviceManagementConfigurationSimpleSettingCollectionDefinition": return new DeviceManagementConfigurationSimpleSettingCollectionDefinition();
            case "#microsoft.graph.deviceManagementConfigurationSimpleSettingDefinition": return new DeviceManagementConfigurationSimpleSettingDefinition();
            case "#microsoft.graph.deviceManagementDerivedCredentialSettings": return new DeviceManagementDerivedCredentialSettings();
            case "#microsoft.graph.deviceManagementDomainJoinConnector": return new DeviceManagementDomainJoinConnector();
            case "#microsoft.graph.deviceManagementExchangeConnector": return new DeviceManagementExchangeConnector();
            case "#microsoft.graph.deviceManagementExchangeOnPremisesPolicy": return new DeviceManagementExchangeOnPremisesPolicy();
            case "#microsoft.graph.deviceManagementExportJob": return new DeviceManagementExportJob();
            case "#microsoft.graph.deviceManagementIntegerSettingInstance": return new DeviceManagementIntegerSettingInstance();
            case "#microsoft.graph.deviceManagementIntent": return new DeviceManagementIntent();
            case "#microsoft.graph.deviceManagementIntentAssignment": return new DeviceManagementIntentAssignment();
            case "#microsoft.graph.deviceManagementIntentDeviceSettingStateSummary": return new DeviceManagementIntentDeviceSettingStateSummary();
            case "#microsoft.graph.deviceManagementIntentDeviceState": return new DeviceManagementIntentDeviceState();
            case "#microsoft.graph.deviceManagementIntentDeviceStateSummary": return new DeviceManagementIntentDeviceStateSummary();
            case "#microsoft.graph.deviceManagementIntentSettingCategory": return new DeviceManagementIntentSettingCategory();
            case "#microsoft.graph.deviceManagementIntentUserState": return new DeviceManagementIntentUserState();
            case "#microsoft.graph.deviceManagementIntentUserStateSummary": return new DeviceManagementIntentUserStateSummary();
            case "#microsoft.graph.deviceManagementPartner": return new DeviceManagementPartner();
            case "#microsoft.graph.deviceManagementReports": return new DeviceManagementReports();
            case "#microsoft.graph.deviceManagementResourceAccessProfileAssignment": return new DeviceManagementResourceAccessProfileAssignment();
            case "#microsoft.graph.deviceManagementResourceAccessProfileBase": return new DeviceManagementResourceAccessProfileBase();
            case "#microsoft.graph.deviceManagementReusablePolicySetting": return new DeviceManagementReusablePolicySetting();
            case "#microsoft.graph.deviceManagementScript": return new DeviceManagementScript();
            case "#microsoft.graph.deviceManagementScriptAssignment": return new DeviceManagementScriptAssignment();
            case "#microsoft.graph.deviceManagementScriptDeviceState": return new DeviceManagementScriptDeviceState();
            case "#microsoft.graph.deviceManagementScriptGroupAssignment": return new DeviceManagementScriptGroupAssignment();
            case "#microsoft.graph.deviceManagementScriptPolicySetItem": return new DeviceManagementScriptPolicySetItem();
            case "#microsoft.graph.deviceManagementScriptRunSummary": return new DeviceManagementScriptRunSummary();
            case "#microsoft.graph.deviceManagementScriptUserState": return new DeviceManagementScriptUserState();
            case "#microsoft.graph.deviceManagementSettingCategory": return new DeviceManagementSettingCategory();
            case "#microsoft.graph.deviceManagementSettingDefinition": return new DeviceManagementSettingDefinition();
            case "#microsoft.graph.deviceManagementSettingInstance": return new DeviceManagementSettingInstance();
            case "#microsoft.graph.deviceManagementStringSettingInstance": return new DeviceManagementStringSettingInstance();
            case "#microsoft.graph.deviceManagementTemplate": return new DeviceManagementTemplate();
            case "#microsoft.graph.deviceManagementTemplateInsightsDefinition": return new DeviceManagementTemplateInsightsDefinition();
            case "#microsoft.graph.deviceManagementTemplateSettingCategory": return new DeviceManagementTemplateSettingCategory();
            case "#microsoft.graph.deviceManagementTroubleshootingEvent": return new DeviceManagementTroubleshootingEvent();
            case "#microsoft.graph.deviceRegistrationPolicy": return new DeviceRegistrationPolicy();
            case "#microsoft.graph.deviceSetupConfiguration": return new DeviceSetupConfiguration();
            case "#microsoft.graph.deviceShellScript": return new DeviceShellScript();
            case "#microsoft.graph.directory": return new Directory();
            case "#microsoft.graph.directoryAudit": return new DirectoryAudit();
            case "#microsoft.graph.directoryDefinition": return new DirectoryDefinition();
            case "#microsoft.graph.directoryObject": return new DirectoryObject();
            case "#microsoft.graph.directoryObjectPartnerReference": return new DirectoryObjectPartnerReference();
            case "#microsoft.graph.directoryRole": return new DirectoryRole();
            case "#microsoft.graph.directoryRoleAccessReviewPolicy": return new DirectoryRoleAccessReviewPolicy();
            case "#microsoft.graph.directoryRoleTemplate": return new DirectoryRoleTemplate();
            case "#microsoft.graph.directorySetting": return new DirectorySetting();
            case "#microsoft.graph.directorySettingTemplate": return new DirectorySettingTemplate();
            case "#microsoft.graph.dlpEvaluatePoliciesJobResponse": return new DlpEvaluatePoliciesJobResponse();
            case "#microsoft.graph.document": return new Document();
            case "#microsoft.graph.documentComment": return new DocumentComment();
            case "#microsoft.graph.documentCommentReply": return new DocumentCommentReply();
            case "#microsoft.graph.documentSetVersion": return new DocumentSetVersion();
            case "#microsoft.graph.domain": return new Domain();
            case "#microsoft.graph.domainDnsCnameRecord": return new DomainDnsCnameRecord();
            case "#microsoft.graph.domainDnsMxRecord": return new DomainDnsMxRecord();
            case "#microsoft.graph.domainDnsRecord": return new DomainDnsRecord();
            case "#microsoft.graph.domainDnsSrvRecord": return new DomainDnsSrvRecord();
            case "#microsoft.graph.domainDnsTxtRecord": return new DomainDnsTxtRecord();
            case "#microsoft.graph.domainDnsUnavailableRecord": return new DomainDnsUnavailableRecord();
            case "#microsoft.graph.domainSecurityProfile": return new DomainSecurityProfile();
            case "#microsoft.graph.drive": return new Drive();
            case "#microsoft.graph.driveItem": return new DriveItem();
            case "#microsoft.graph.driveItemVersion": return new DriveItemVersion();
            case "#microsoft.graph.easEmailProfileConfigurationBase": return new EasEmailProfileConfigurationBase();
            case "#microsoft.graph.eBookInstallSummary": return new EBookInstallSummary();
            case "#microsoft.graph.edge": return new Edge();
            case "#microsoft.graph.ediscovery.addToReviewSetOperation": return new AddToReviewSetOperation();
            case "#microsoft.graph.ediscovery.case": return new CaseEscaped();
            case "#microsoft.graph.ediscovery.caseExportOperation": return new CaseExportOperation();
            case "#microsoft.graph.ediscovery.caseHoldOperation": return new CaseHoldOperation();
            case "#microsoft.graph.ediscovery.caseIndexOperation": return new CaseIndexOperation();
            case "#microsoft.graph.ediscovery.caseOperation": return new CaseOperation();
            case "#microsoft.graph.ediscovery.caseSettings": return new CaseSettings();
            case "#microsoft.graph.ediscovery.custodian": return new Custodian();
            case "#microsoft.graph.ediscovery.dataSource": return new DataSource();
            case "#microsoft.graph.ediscovery.dataSourceContainer": return new DataSourceContainer();
            case "#microsoft.graph.ediscovery.ediscoveryroot": return new Ediscoveryroot();
        }
        return null;
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param discriminatorValue Discriminator value from the payload
     * @return a entity
     */
    @jakarta.annotation.Nonnull
    private static Entity createFromDiscriminatorValue_1(@jakarta.annotation.Nonnull final String discriminatorValue) {
        switch (discriminatorValue) {
            case "#microsoft.graph.ediscovery.estimateStatisticsOperation": return new EstimateStatisticsOperation();
            case "#microsoft.graph.ediscovery.legalHold": return new LegalHold();
            case "#microsoft.graph.ediscovery.noncustodialDataSource": return new NoncustodialDataSource();
            case "#microsoft.graph.ediscovery.purgeDataOperation": return new PurgeDataOperation();
            case "#microsoft.graph.ediscovery.reviewSet": return new ReviewSet();
            case "#microsoft.graph.ediscovery.reviewSetQuery": return new ReviewSetQuery();
            case "#microsoft.graph.ediscovery.siteSource": return new SiteSource();
            case "#microsoft.graph.ediscovery.sourceCollection": return new SourceCollection();
            case "#microsoft.graph.ediscovery.tag": return new Tag();
            case "#microsoft.graph.ediscovery.tagOperation": return new TagOperation();
            case "#microsoft.graph.ediscovery.unifiedGroupSource": return new UnifiedGroupSource();
            case "#microsoft.graph.ediscovery.userSource": return new UserSource();
            case "#microsoft.graph.editionUpgradeConfiguration": return new EditionUpgradeConfiguration();
            case "#microsoft.graph.educationalActivity": return new EducationalActivity();
            case "#microsoft.graph.educationAssignment": return new EducationAssignment();
            case "#microsoft.graph.educationAssignmentDefaults": return new EducationAssignmentDefaults();
            case "#microsoft.graph.educationAssignmentResource": return new EducationAssignmentResource();
            case "#microsoft.graph.educationAssignmentSettings": return new EducationAssignmentSettings();
            case "#microsoft.graph.educationCategory": return new EducationCategory();
            case "#microsoft.graph.educationClass": return new EducationClass();
            case "#microsoft.graph.educationFeedbackOutcome": return new EducationFeedbackOutcome();
            case "#microsoft.graph.educationFeedbackResourceOutcome": return new EducationFeedbackResourceOutcome();
            case "#microsoft.graph.educationGradingCategory": return new EducationGradingCategory();
            case "#microsoft.graph.educationModule": return new EducationModule();
            case "#microsoft.graph.educationModuleResource": return new EducationModuleResource();
            case "#microsoft.graph.educationOrganization": return new EducationOrganization();
            case "#microsoft.graph.educationOutcome": return new EducationOutcome();
            case "#microsoft.graph.educationPointsOutcome": return new EducationPointsOutcome();
            case "#microsoft.graph.educationRubric": return new EducationRubric();
            case "#microsoft.graph.educationRubricOutcome": return new EducationRubricOutcome();
            case "#microsoft.graph.educationSchool": return new EducationSchool();
            case "#microsoft.graph.educationSubmission": return new EducationSubmission();
            case "#microsoft.graph.educationSubmissionResource": return new EducationSubmissionResource();
            case "#microsoft.graph.educationSynchronizationError": return new EducationSynchronizationError();
            case "#microsoft.graph.educationSynchronizationProfile": return new EducationSynchronizationProfile();
            case "#microsoft.graph.educationSynchronizationProfileStatus": return new EducationSynchronizationProfileStatus();
            case "#microsoft.graph.educationUser": return new EducationUser();
            case "#microsoft.graph.emailActivityStatistics": return new EmailActivityStatistics();
            case "#microsoft.graph.emailAuthenticationMethod": return new EmailAuthenticationMethod();
            case "#microsoft.graph.emailAuthenticationMethodConfiguration": return new EmailAuthenticationMethodConfiguration();
            case "#microsoft.graph.emailFileAssessmentRequest": return new EmailFileAssessmentRequest();
            case "#microsoft.graph.embeddedSIMActivationCodePool": return new EmbeddedSIMActivationCodePool();
            case "#microsoft.graph.embeddedSIMActivationCodePoolAssignment": return new EmbeddedSIMActivationCodePoolAssignment();
            case "#microsoft.graph.embeddedSIMDeviceState": return new EmbeddedSIMDeviceState();
            case "#microsoft.graph.employeeExperienceUser": return new EmployeeExperienceUser();
            case "#microsoft.graph.endpoint": return new Endpoint();
            case "#microsoft.graph.endUserNotification": return new EndUserNotification();
            case "#microsoft.graph.endUserNotificationDetail": return new EndUserNotificationDetail();
            case "#microsoft.graph.enrollmentConfigurationAssignment": return new EnrollmentConfigurationAssignment();
            case "#microsoft.graph.enrollmentProfile": return new EnrollmentProfile();
            case "#microsoft.graph.enrollmentRestrictionsConfigurationPolicySetItem": return new EnrollmentRestrictionsConfigurationPolicySetItem();
            case "#microsoft.graph.enrollmentTroubleshootingEvent": return new EnrollmentTroubleshootingEvent();
            case "#microsoft.graph.enterpriseCodeSigningCertificate": return new EnterpriseCodeSigningCertificate();
            case "#microsoft.graph.entitlementManagement": return new EntitlementManagement();
            case "#microsoft.graph.entitlementManagementSettings": return new EntitlementManagementSettings();
            case "#microsoft.graph.evaluateLabelJobResponse": return new EvaluateLabelJobResponse();
            case "#microsoft.graph.event": return new Event();
            case "#microsoft.graph.eventMessage": return new EventMessage();
            case "#microsoft.graph.eventMessageRequest": return new EventMessageRequest();
            case "#microsoft.graph.eventMessageResponse": return new EventMessageResponse();
            case "#microsoft.graph.exactMatchDataStore": return new ExactMatchDataStore();
            case "#microsoft.graph.exactMatchDataStoreBase": return new ExactMatchDataStoreBase();
            case "#microsoft.graph.exactMatchJobBase": return new ExactMatchJobBase();
            case "#microsoft.graph.exactMatchLookupJob": return new ExactMatchLookupJob();
            case "#microsoft.graph.exactMatchSession": return new ExactMatchSession();
            case "#microsoft.graph.exactMatchSessionBase": return new ExactMatchSessionBase();
            case "#microsoft.graph.exactMatchUploadAgent": return new ExactMatchUploadAgent();
            case "#microsoft.graph.extension": return new Extension();
            case "#microsoft.graph.extensionProperty": return new ExtensionProperty();
            case "#microsoft.graph.external": return new External();
            case "#microsoft.graph.externalConnection": return new ExternalConnection();
            case "#microsoft.graph.externalConnectors.connectionOperation": return new ConnectionOperation();
            case "#microsoft.graph.externalConnectors.connectionQuota": return new ConnectionQuota();
            case "#microsoft.graph.externalConnectors.externalActivity": return new ExternalActivity();
            case "#microsoft.graph.externalConnectors.externalActivityResult": return new ExternalActivityResult();
            case "#microsoft.graph.externalConnectors.externalConnection": return new ExternalConnection();
            case "#microsoft.graph.externalConnectors.externalGroup": return new ExternalGroup();
            case "#microsoft.graph.externalConnectors.externalItem": return new ExternalItem();
            case "#microsoft.graph.externalConnectors.identity": return new Identity();
            case "#microsoft.graph.externalConnectors.schema": return new Schema();
            case "#microsoft.graph.externalDomainName": return new ExternalDomainName();
            case "#microsoft.graph.externalGroup": return new ExternalGroup();
            case "#microsoft.graph.externalIdentitiesPolicy": return new ExternalIdentitiesPolicy();
            case "#microsoft.graph.externalItem": return new ExternalItem();
            case "#microsoft.graph.externalMeetingRegistrant": return new ExternalMeetingRegistrant();
            case "#microsoft.graph.externalMeetingRegistration": return new ExternalMeetingRegistration();
            case "#microsoft.graph.externalUsersSelfServiceSignUpEventsFlow": return new ExternalUsersSelfServiceSignUpEventsFlow();
            case "#microsoft.graph.featureRolloutPolicy": return new FeatureRolloutPolicy();
            case "#microsoft.graph.federatedIdentityCredential": return new FederatedIdentityCredential();
            case "#microsoft.graph.federatedTokenValidationPolicy": return new FederatedTokenValidationPolicy();
            case "#microsoft.graph.fido2AuthenticationMethod": return new Fido2AuthenticationMethod();
            case "#microsoft.graph.fido2AuthenticationMethodConfiguration": return new Fido2AuthenticationMethodConfiguration();
            case "#microsoft.graph.fido2CombinationConfiguration": return new Fido2CombinationConfiguration();
            case "#microsoft.graph.fieldValueSet": return new FieldValueSet();
            case "#microsoft.graph.fileAssessmentRequest": return new FileAssessmentRequest();
            case "#microsoft.graph.fileAttachment": return new FileAttachment();
            case "#microsoft.graph.fileClassificationRequest": return new FileClassificationRequest();
            case "#microsoft.graph.fileSecurityProfile": return new FileSecurityProfile();
            case "#microsoft.graph.filterOperatorSchema": return new FilterOperatorSchema();
            case "#microsoft.graph.focusActivityStatistics": return new FocusActivityStatistics();
            case "#microsoft.graph.governanceInsight": return new GovernanceInsight();
            case "#microsoft.graph.governancePolicyTemplate": return new GovernancePolicyTemplate();
            case "#microsoft.graph.governanceResource": return new GovernanceResource();
            case "#microsoft.graph.governanceRoleAssignment": return new GovernanceRoleAssignment();
            case "#microsoft.graph.governanceRoleAssignmentRequest": return new GovernanceRoleAssignmentRequest();
            case "#microsoft.graph.governanceRoleDefinition": return new GovernanceRoleDefinition();
            case "#microsoft.graph.governanceRoleSetting": return new GovernanceRoleSetting();
            case "#microsoft.graph.governanceSubject": return new GovernanceSubject();
            case "#microsoft.graph.group": return new Group();
            case "#microsoft.graph.groupLifecyclePolicy": return new GroupLifecyclePolicy();
            case "#microsoft.graph.groupPolicyCategory": return new GroupPolicyCategory();
            case "#microsoft.graph.groupPolicyConfiguration": return new GroupPolicyConfiguration();
            case "#microsoft.graph.groupPolicyConfigurationAssignment": return new GroupPolicyConfigurationAssignment();
            case "#microsoft.graph.groupPolicyDefinition": return new GroupPolicyDefinition();
            case "#microsoft.graph.groupPolicyDefinitionFile": return new GroupPolicyDefinitionFile();
            case "#microsoft.graph.groupPolicyDefinitionValue": return new GroupPolicyDefinitionValue();
            case "#microsoft.graph.groupPolicyMigrationReport": return new GroupPolicyMigrationReport();
            case "#microsoft.graph.groupPolicyObjectFile": return new GroupPolicyObjectFile();
            case "#microsoft.graph.groupPolicyOperation": return new GroupPolicyOperation();
            case "#microsoft.graph.groupPolicyPresentation": return new GroupPolicyPresentation();
            case "#microsoft.graph.groupPolicyPresentationCheckBox": return new GroupPolicyPresentationCheckBox();
            case "#microsoft.graph.groupPolicyPresentationComboBox": return new GroupPolicyPresentationComboBox();
            case "#microsoft.graph.groupPolicyPresentationDecimalTextBox": return new GroupPolicyPresentationDecimalTextBox();
            case "#microsoft.graph.groupPolicyPresentationDropdownList": return new GroupPolicyPresentationDropdownList();
            case "#microsoft.graph.groupPolicyPresentationListBox": return new GroupPolicyPresentationListBox();
            case "#microsoft.graph.groupPolicyPresentationLongDecimalTextBox": return new GroupPolicyPresentationLongDecimalTextBox();
            case "#microsoft.graph.groupPolicyPresentationMultiTextBox": return new GroupPolicyPresentationMultiTextBox();
            case "#microsoft.graph.groupPolicyPresentationText": return new GroupPolicyPresentationText();
            case "#microsoft.graph.groupPolicyPresentationTextBox": return new GroupPolicyPresentationTextBox();
            case "#microsoft.graph.groupPolicyPresentationValue": return new GroupPolicyPresentationValue();
            case "#microsoft.graph.groupPolicyPresentationValueBoolean": return new GroupPolicyPresentationValueBoolean();
            case "#microsoft.graph.groupPolicyPresentationValueDecimal": return new GroupPolicyPresentationValueDecimal();
            case "#microsoft.graph.groupPolicyPresentationValueList": return new GroupPolicyPresentationValueList();
            case "#microsoft.graph.groupPolicyPresentationValueLongDecimal": return new GroupPolicyPresentationValueLongDecimal();
            case "#microsoft.graph.groupPolicyPresentationValueMultiText": return new GroupPolicyPresentationValueMultiText();
            case "#microsoft.graph.groupPolicyPresentationValueText": return new GroupPolicyPresentationValueText();
            case "#microsoft.graph.groupPolicySettingMapping": return new GroupPolicySettingMapping();
            case "#microsoft.graph.groupPolicyUploadedDefinitionFile": return new GroupPolicyUploadedDefinitionFile();
            case "#microsoft.graph.groupPolicyUploadedPresentation": return new GroupPolicyUploadedPresentation();
            case "#microsoft.graph.hardwareOathAuthenticationMethodConfiguration": return new HardwareOathAuthenticationMethodConfiguration();
            case "#microsoft.graph.homeRealmDiscoveryPolicy": return new HomeRealmDiscoveryPolicy();
            case "#microsoft.graph.horizontalSection": return new HorizontalSection();
            case "#microsoft.graph.horizontalSectionColumn": return new HorizontalSectionColumn();
            case "#microsoft.graph.hostSecurityProfile": return new HostSecurityProfile();
            case "#microsoft.graph.identityApiConnector": return new IdentityApiConnector();
            case "#microsoft.graph.identityBuiltInUserFlowAttribute": return new IdentityBuiltInUserFlowAttribute();
            case "#microsoft.graph.identityCustomUserFlowAttribute": return new IdentityCustomUserFlowAttribute();
            case "#microsoft.graph.identityGovernance.customTaskExtension": return new CustomTaskExtension();
            case "#microsoft.graph.identityGovernance.lifecycleManagementSettings": return new LifecycleManagementSettings();
            case "#microsoft.graph.identityGovernance.lifecycleWorkflowsContainer": return new LifecycleWorkflowsContainer();
            case "#microsoft.graph.identityGovernance.run": return new Run();
            case "#microsoft.graph.identityGovernance.task": return new Task();
            case "#microsoft.graph.identityGovernance.taskDefinition": return new TaskDefinition();
            case "#microsoft.graph.identityGovernance.taskProcessingResult": return new TaskProcessingResult();
            case "#microsoft.graph.identityGovernance.taskReport": return new TaskReport();
            case "#microsoft.graph.identityGovernance.userProcessingResult": return new UserProcessingResult();
            case "#microsoft.graph.identityGovernance.workflowTemplate": return new WorkflowTemplate();
            case "#microsoft.graph.identityProvider": return new IdentityProvider();
            case "#microsoft.graph.identityProviderBase": return new IdentityProviderBase();
            case "#microsoft.graph.identitySecurityDefaultsEnforcementPolicy": return new IdentitySecurityDefaultsEnforcementPolicy();
            case "#microsoft.graph.identityUserFlow": return new IdentityUserFlow();
            case "#microsoft.graph.identityUserFlowAttribute": return new IdentityUserFlowAttribute();
            case "#microsoft.graph.identityUserFlowAttributeAssignment": return new IdentityUserFlowAttributeAssignment();
            case "#microsoft.graph.impactedResource": return new ImpactedResource();
            case "#microsoft.graph.importedAppleDeviceIdentity": return new ImportedAppleDeviceIdentity();
            case "#microsoft.graph.importedAppleDeviceIdentityResult": return new ImportedAppleDeviceIdentityResult();
            case "#microsoft.graph.importedDeviceIdentity": return new ImportedDeviceIdentity();
            case "#microsoft.graph.importedDeviceIdentityResult": return new ImportedDeviceIdentityResult();
            case "#microsoft.graph.importedWindowsAutopilotDeviceIdentity": return new ImportedWindowsAutopilotDeviceIdentity();
            case "#microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": return new ImportedWindowsAutopilotDeviceIdentityUpload();
            case "#microsoft.graph.industryData.azureDataLakeConnector": return new AzureDataLakeConnector();
            case "#microsoft.graph.industryData.fileDataConnector": return new FileDataConnector();
            case "#microsoft.graph.industryData.fileValidateOperation": return new FileValidateOperation();
            case "#microsoft.graph.industryData.inboundFileFlow": return new InboundFileFlow();
            case "#microsoft.graph.industryData.inboundFlow": return new InboundFlow();
            case "#microsoft.graph.industryData.inboundFlowActivity": return new InboundFlowActivity();
            case "#microsoft.graph.industryData.industryDataActivity": return new IndustryDataActivity();
            case "#microsoft.graph.industryData.industryDataConnector": return new IndustryDataConnector();
            case "#microsoft.graph.industryData.industryDataRoot": return new IndustryDataRoot();
            case "#microsoft.graph.industryData.industryDataRun": return new IndustryDataRun();
            case "#microsoft.graph.industryData.industryDataRunActivity": return new IndustryDataRunActivity();
            case "#microsoft.graph.industryData.outboundFlowActivity": return new OutboundFlowActivity();
            case "#microsoft.graph.industryData.referenceDefinition": return new ReferenceDefinition();
            case "#microsoft.graph.industryData.roleGroup": return new RoleGroup();
            case "#microsoft.graph.industryData.sourceSystemDefinition": return new SourceSystemDefinition();
            case "#microsoft.graph.industryData.validateOperation": return new ValidateOperation();
            case "#microsoft.graph.industryData.yearTimePeriodDefinition": return new YearTimePeriodDefinition();
            case "#microsoft.graph.inferenceClassification": return new InferenceClassification();
            case "#microsoft.graph.inferenceClassificationOverride": return new InferenceClassificationOverride();
            case "#microsoft.graph.informationProtection": return new InformationProtection();
            case "#microsoft.graph.informationProtectionLabel": return new InformationProtectionLabel();
            case "#microsoft.graph.informationProtectionPolicy": return new InformationProtectionPolicy();
            case "#microsoft.graph.insightsSettings": return new InsightsSettings();
            case "#microsoft.graph.internalDomainFederation": return new InternalDomainFederation();
            case "#microsoft.graph.internetExplorerMode": return new InternetExplorerMode();
            case "#microsoft.graph.intuneBrandingProfile": return new IntuneBrandingProfile();
            case "#microsoft.graph.intuneBrandingProfileAssignment": return new IntuneBrandingProfileAssignment();
            case "#microsoft.graph.invalidLicenseAlertConfiguration": return new InvalidLicenseAlertConfiguration();
            case "#microsoft.graph.invalidLicenseAlertIncident": return new InvalidLicenseAlertIncident();
            case "#microsoft.graph.invitation": return new Invitation();
            case "#microsoft.graph.inviteParticipantsOperation": return new InviteParticipantsOperation();
            case "#microsoft.graph.invokeUserFlowListener": return new InvokeUserFlowListener();
            case "#microsoft.graph.iosCertificateProfile": return new IosCertificateProfile();
            case "#microsoft.graph.iosCertificateProfileBase": return new IosCertificateProfileBase();
            case "#microsoft.graph.iosCompliancePolicy": return new IosCompliancePolicy();
            case "#microsoft.graph.iosCustomConfiguration": return new IosCustomConfiguration();
            case "#microsoft.graph.iosDerivedCredentialAuthenticationConfiguration": return new IosDerivedCredentialAuthenticationConfiguration();
            case "#microsoft.graph.iosDeviceFeaturesConfiguration": return new IosDeviceFeaturesConfiguration();
            case "#microsoft.graph.iosEasEmailProfileConfiguration": return new IosEasEmailProfileConfiguration();
            case "#microsoft.graph.iosEducationDeviceConfiguration": return new IosEducationDeviceConfiguration();
            case "#microsoft.graph.iosEduDeviceConfiguration": return new IosEduDeviceConfiguration();
            case "#microsoft.graph.iosEnterpriseWiFiConfiguration": return new IosEnterpriseWiFiConfiguration();
            case "#microsoft.graph.iosExpeditedCheckinConfiguration": return new IosExpeditedCheckinConfiguration();
            case "#microsoft.graph.iosGeneralDeviceConfiguration": return new IosGeneralDeviceConfiguration();
            case "#microsoft.graph.iosikEv2VpnConfiguration": return new IosikEv2VpnConfiguration();
            case "#microsoft.graph.iosImportedPFXCertificateProfile": return new IosImportedPFXCertificateProfile();
            case "#microsoft.graph.iosiPadOSWebClip": return new IosiPadOSWebClip();
            case "#microsoft.graph.iosLobApp": return new IosLobApp();
            case "#microsoft.graph.iosLobAppProvisioningConfiguration": return new IosLobAppProvisioningConfiguration();
            case "#microsoft.graph.iosLobAppProvisioningConfigurationAssignment": return new IosLobAppProvisioningConfigurationAssignment();
            case "#microsoft.graph.iosLobAppProvisioningConfigurationPolicySetItem": return new IosLobAppProvisioningConfigurationPolicySetItem();
            case "#microsoft.graph.iosManagedAppProtection": return new IosManagedAppProtection();
            case "#microsoft.graph.iosManagedAppRegistration": return new IosManagedAppRegistration();
            case "#microsoft.graph.iosMobileAppConfiguration": return new IosMobileAppConfiguration();
            case "#microsoft.graph.iosPkcsCertificateProfile": return new IosPkcsCertificateProfile();
            case "#microsoft.graph.iosScepCertificateProfile": return new IosScepCertificateProfile();
            case "#microsoft.graph.iosStoreApp": return new IosStoreApp();
            case "#microsoft.graph.iosTrustedRootCertificate": return new IosTrustedRootCertificate();
            case "#microsoft.graph.iosUpdateConfiguration": return new IosUpdateConfiguration();
            case "#microsoft.graph.iosUpdateDeviceStatus": return new IosUpdateDeviceStatus();
            case "#microsoft.graph.iosVpnConfiguration": return new IosVpnConfiguration();
            case "#microsoft.graph.iosVppApp": return new IosVppApp();
            case "#microsoft.graph.iosVppAppAssignedDeviceLicense": return new IosVppAppAssignedDeviceLicense();
            case "#microsoft.graph.iosVppAppAssignedLicense": return new IosVppAppAssignedLicense();
            case "#microsoft.graph.iosVppAppAssignedUserLicense": return new IosVppAppAssignedUserLicense();
            case "#microsoft.graph.iosVppEBook": return new IosVppEBook();
            case "#microsoft.graph.iosVppEBookAssignment": return new IosVppEBookAssignment();
            case "#microsoft.graph.iosWiFiConfiguration": return new IosWiFiConfiguration();
            case "#microsoft.graph.ipApplicationSegment": return new IpApplicationSegment();
            case "#microsoft.graph.ipNamedLocation": return new IpNamedLocation();
            case "#microsoft.graph.ipSecurityProfile": return new IpSecurityProfile();
            case "#microsoft.graph.itemActivity": return new ItemActivity();
            case "#microsoft.graph.itemActivityOLD": return new ItemActivityOLD();
            case "#microsoft.graph.itemActivityStat": return new ItemActivityStat();
            case "#microsoft.graph.itemAddress": return new ItemAddress();
            case "#microsoft.graph.itemAnalytics": return new ItemAnalytics();
            case "#microsoft.graph.itemAttachment": return new ItemAttachment();
            case "#microsoft.graph.itemEmail": return new ItemEmail();
            case "#microsoft.graph.itemFacet": return new ItemFacet();
            case "#microsoft.graph.itemInsights": return new ItemInsights();
            case "#microsoft.graph.itemPatent": return new ItemPatent();
            case "#microsoft.graph.itemPhone": return new ItemPhone();
            case "#microsoft.graph.itemPublication": return new ItemPublication();
            case "#microsoft.graph.itemRetentionLabel": return new ItemRetentionLabel();
            case "#microsoft.graph.jobResponseBase": return new JobResponseBase();
            case "#microsoft.graph.landingPage": return new LandingPage();
            case "#microsoft.graph.landingPageDetail": return new LandingPageDetail();
            case "#microsoft.graph.languageProficiency": return new LanguageProficiency();
            case "#microsoft.graph.learningAssignment": return new LearningAssignment();
            case "#microsoft.graph.learningContent": return new LearningContent();
            case "#microsoft.graph.learningCourseActivity": return new LearningCourseActivity();
            case "#microsoft.graph.learningProvider": return new LearningProvider();
            case "#microsoft.graph.learningSelfInitiatedCourse": return new LearningSelfInitiatedCourse();
            case "#microsoft.graph.licenseDetails": return new LicenseDetails();
            case "#microsoft.graph.linkedResource": return new LinkedResource();
            case "#microsoft.graph.list": return new List();
            case "#microsoft.graph.listItem": return new ListItem();
            case "#microsoft.graph.listItemVersion": return new ListItemVersion();
            case "#microsoft.graph.localizedNotificationMessage": return new LocalizedNotificationMessage();
            case "#microsoft.graph.loginPage": return new LoginPage();
            case "#microsoft.graph.longRunningOperation": return new LongRunningOperation();
            case "#microsoft.graph.lookupResultRow": return new LookupResultRow();
            case "#microsoft.graph.macOSCertificateProfileBase": return new MacOSCertificateProfileBase();
            case "#microsoft.graph.macOSCompliancePolicy": return new MacOSCompliancePolicy();
            case "#microsoft.graph.macOSCustomAppConfiguration": return new MacOSCustomAppConfiguration();
            case "#microsoft.graph.macOSCustomConfiguration": return new MacOSCustomConfiguration();
            case "#microsoft.graph.macOSDeviceFeaturesConfiguration": return new MacOSDeviceFeaturesConfiguration();
            case "#microsoft.graph.macOSDmgApp": return new MacOSDmgApp();
            case "#microsoft.graph.macOSEndpointProtectionConfiguration": return new MacOSEndpointProtectionConfiguration();
            case "#microsoft.graph.macOSEnterpriseWiFiConfiguration": return new MacOSEnterpriseWiFiConfiguration();
            case "#microsoft.graph.macOSExtensionsConfiguration": return new MacOSExtensionsConfiguration();
            case "#microsoft.graph.macOSGeneralDeviceConfiguration": return new MacOSGeneralDeviceConfiguration();
            case "#microsoft.graph.macOSImportedPFXCertificateProfile": return new MacOSImportedPFXCertificateProfile();
            case "#microsoft.graph.macOSLobApp": return new MacOSLobApp();
            case "#microsoft.graph.macOSMicrosoftDefenderApp": return new MacOSMicrosoftDefenderApp();
            case "#microsoft.graph.macOSMicrosoftEdgeApp": return new MacOSMicrosoftEdgeApp();
            case "#microsoft.graph.macOSOfficeSuiteApp": return new MacOSOfficeSuiteApp();
            case "#microsoft.graph.macOSPkcsCertificateProfile": return new MacOSPkcsCertificateProfile();
            case "#microsoft.graph.macOSPkgApp": return new MacOSPkgApp();
            case "#microsoft.graph.macOSScepCertificateProfile": return new MacOSScepCertificateProfile();
            case "#microsoft.graph.macOSSoftwareUpdateAccountSummary": return new MacOSSoftwareUpdateAccountSummary();
            case "#microsoft.graph.macOSSoftwareUpdateCategorySummary": return new MacOSSoftwareUpdateCategorySummary();
            case "#microsoft.graph.macOSSoftwareUpdateConfiguration": return new MacOSSoftwareUpdateConfiguration();
            case "#microsoft.graph.macOSSoftwareUpdateStateSummary": return new MacOSSoftwareUpdateStateSummary();
            case "#microsoft.graph.macOSTrustedRootCertificate": return new MacOSTrustedRootCertificate();
            case "#microsoft.graph.macOSVpnConfiguration": return new MacOSVpnConfiguration();
            case "#microsoft.graph.macOsVppApp": return new MacOsVppApp();
            case "#microsoft.graph.macOsVppAppAssignedLicense": return new MacOsVppAppAssignedLicense();
            case "#microsoft.graph.macOSWebClip": return new MacOSWebClip();
            case "#microsoft.graph.macOSWiFiConfiguration": return new MacOSWiFiConfiguration();
            case "#microsoft.graph.macOSWiredNetworkConfiguration": return new MacOSWiredNetworkConfiguration();
            case "#microsoft.graph.mailAssessmentRequest": return new MailAssessmentRequest();
            case "#microsoft.graph.mailFolder": return new MailFolder();
            case "#microsoft.graph.mailSearchFolder": return new MailSearchFolder();
            case "#microsoft.graph.malwareStateForWindowsDevice": return new MalwareStateForWindowsDevice();
            case "#microsoft.graph.managedAllDeviceCertificateState": return new ManagedAllDeviceCertificateState();
            case "#microsoft.graph.managedAndroidLobApp": return new ManagedAndroidLobApp();
            case "#microsoft.graph.managedAndroidStoreApp": return new ManagedAndroidStoreApp();
            case "#microsoft.graph.managedApp": return new ManagedApp();
            case "#microsoft.graph.managedAppConfiguration": return new ManagedAppConfiguration();
            case "#microsoft.graph.managedAppOperation": return new ManagedAppOperation();
            case "#microsoft.graph.managedAppPolicy": return new ManagedAppPolicy();
            case "#microsoft.graph.managedAppPolicyDeploymentSummary": return new ManagedAppPolicyDeploymentSummary();
            case "#microsoft.graph.managedAppProtection": return new ManagedAppProtection();
            case "#microsoft.graph.managedAppProtectionPolicySetItem": return new ManagedAppProtectionPolicySetItem();
            case "#microsoft.graph.managedAppRegistration": return new ManagedAppRegistration();
            case "#microsoft.graph.managedAppStatus": return new ManagedAppStatus();
            case "#microsoft.graph.managedAppStatusRaw": return new ManagedAppStatusRaw();
            case "#microsoft.graph.managedDevice": return new ManagedDevice();
            case "#microsoft.graph.managedDeviceCertificateState": return new ManagedDeviceCertificateState();
            case "#microsoft.graph.managedDeviceEncryptionState": return new ManagedDeviceEncryptionState();
            case "#microsoft.graph.managedDeviceMobileAppConfiguration": return new ManagedDeviceMobileAppConfiguration();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationAssignment": return new ManagedDeviceMobileAppConfigurationAssignment();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": return new ManagedDeviceMobileAppConfigurationDeviceStatus();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": return new ManagedDeviceMobileAppConfigurationDeviceSummary();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationPolicySetItem": return new ManagedDeviceMobileAppConfigurationPolicySetItem();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationState": return new ManagedDeviceMobileAppConfigurationState();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": return new ManagedDeviceMobileAppConfigurationUserStatus();
            case "#microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": return new ManagedDeviceMobileAppConfigurationUserSummary();
            case "#microsoft.graph.managedDeviceOverview": return new ManagedDeviceOverview();
            case "#microsoft.graph.managedEBook": return new ManagedEBook();
            case "#microsoft.graph.managedEBookAssignment": return new ManagedEBookAssignment();
            case "#microsoft.graph.managedEBookCategory": return new ManagedEBookCategory();
            case "#microsoft.graph.managedIOSLobApp": return new ManagedIOSLobApp();
            case "#microsoft.graph.managedIOSStoreApp": return new ManagedIOSStoreApp();
            case "#microsoft.graph.managedMobileApp": return new ManagedMobileApp();
            case "#microsoft.graph.managedMobileLobApp": return new ManagedMobileLobApp();
            case "#microsoft.graph.managedTenants.aggregatedPolicyCompliance": return new AggregatedPolicyCompliance();
            case "#microsoft.graph.managedTenants.appPerformance": return new AppPerformance();
            case "#microsoft.graph.managedTenants.auditEvent": return new AuditEvent();
            case "#microsoft.graph.managedTenants.cloudPcConnection": return new CloudPcConnection();
            case "#microsoft.graph.managedTenants.cloudPcDevice": return new CloudPcDevice();
            case "#microsoft.graph.managedTenants.cloudPcOverview": return new CloudPcOverview();
            case "#microsoft.graph.managedTenants.conditionalAccessPolicyCoverage": return new ConditionalAccessPolicyCoverage();
            case "#microsoft.graph.managedTenants.credentialUserRegistrationsSummary": return new CredentialUserRegistrationsSummary();
            case "#microsoft.graph.managedTenants.deviceAppPerformance": return new DeviceAppPerformance();
            case "#microsoft.graph.managedTenants.deviceCompliancePolicySettingStateSummary": return new DeviceCompliancePolicySettingStateSummary();
            case "#microsoft.graph.managedTenants.deviceHealthStatus": return new DeviceHealthStatus();
            case "#microsoft.graph.managedTenants.managedDeviceCompliance": return new ManagedDeviceCompliance();
            case "#microsoft.graph.managedTenants.managedDeviceComplianceTrend": return new ManagedDeviceComplianceTrend();
            case "#microsoft.graph.managedTenants.managedTenant": return new ManagedTenant();
            case "#microsoft.graph.managedTenants.managedTenantAlert": return new ManagedTenantAlert();
            case "#microsoft.graph.managedTenants.managedTenantAlertLog": return new ManagedTenantAlertLog();
            case "#microsoft.graph.managedTenants.managedTenantAlertRule": return new ManagedTenantAlertRule();
            case "#microsoft.graph.managedTenants.managedTenantAlertRuleDefinition": return new ManagedTenantAlertRuleDefinition();
            case "#microsoft.graph.managedTenants.managedTenantApiNotification": return new ManagedTenantApiNotification();
            case "#microsoft.graph.managedTenants.managedTenantEmailNotification": return new ManagedTenantEmailNotification();
            case "#microsoft.graph.managedTenants.managedTenantTicketingEndpoint": return new ManagedTenantTicketingEndpoint();
            case "#microsoft.graph.managedTenants.managementAction": return new ManagementAction();
            case "#microsoft.graph.managedTenants.managementActionTenantDeploymentStatus": return new ManagementActionTenantDeploymentStatus();
            case "#microsoft.graph.managedTenants.managementIntent": return new ManagementIntent();
            case "#microsoft.graph.managedTenants.managementTemplate": return new ManagementTemplate();
            case "#microsoft.graph.managedTenants.managementTemplateCollection": return new ManagementTemplateCollection();
            case "#microsoft.graph.managedTenants.managementTemplateCollectionTenantSummary": return new ManagementTemplateCollectionTenantSummary();
            case "#microsoft.graph.managedTenants.managementTemplateStep": return new ManagementTemplateStep();
            case "#microsoft.graph.managedTenants.managementTemplateStepDeployment": return new ManagementTemplateStepDeployment();
            case "#microsoft.graph.managedTenants.managementTemplateStepTenantSummary": return new ManagementTemplateStepTenantSummary();
            case "#microsoft.graph.managedTenants.managementTemplateStepVersion": return new ManagementTemplateStepVersion();
            case "#microsoft.graph.managedTenants.tenant": return new Tenant();
            case "#microsoft.graph.managedTenants.tenantCustomizedInformation": return new TenantCustomizedInformation();
            case "#microsoft.graph.managedTenants.tenantDetailedInformation": return new TenantDetailedInformation();
            case "#microsoft.graph.managedTenants.tenantGroup": return new TenantGroup();
            case "#microsoft.graph.managedTenants.tenantTag": return new TenantTag();
            case "#microsoft.graph.managedTenants.windowsDeviceMalwareState": return new WindowsDeviceMalwareState();
            case "#microsoft.graph.managedTenants.windowsProtectionState": return new WindowsProtectionState();
            case "#microsoft.graph.mdmWindowsInformationProtectionPolicy": return new MdmWindowsInformationProtectionPolicy();
            case "#microsoft.graph.mdmWindowsInformationProtectionPolicyPolicySetItem": return new MdmWindowsInformationProtectionPolicyPolicySetItem();
            case "#microsoft.graph.meetingActivityStatistics": return new MeetingActivityStatistics();
            case "#microsoft.graph.meetingAttendanceReport": return new MeetingAttendanceReport();
            case "#microsoft.graph.meetingRegistrant": return new MeetingRegistrant();
            case "#microsoft.graph.meetingRegistrantBase": return new MeetingRegistrantBase();
            case "#microsoft.graph.meetingRegistration": return new MeetingRegistration();
            case "#microsoft.graph.meetingRegistrationBase": return new MeetingRegistrationBase();
            case "#microsoft.graph.meetingRegistrationQuestion": return new MeetingRegistrationQuestion();
            case "#microsoft.graph.membershipOutlierInsight": return new MembershipOutlierInsight();
            case "#microsoft.graph.mention": return new Mention();
            case "#microsoft.graph.message": return new Message();
            case "#microsoft.graph.messageEvent": return new MessageEvent();
            case "#microsoft.graph.messageRecipient": return new MessageRecipient();
            case "#microsoft.graph.messageRule": return new MessageRule();
            case "#microsoft.graph.messageTrace": return new MessageTrace();
            case "#microsoft.graph.microsoftAccountUserConversationMember": return new MicrosoftAccountUserConversationMember();
            case "#microsoft.graph.microsoftApplicationDataAccessSettings": return new MicrosoftApplicationDataAccessSettings();
            case "#microsoft.graph.microsoftAuthenticatorAuthenticationMethod": return new MicrosoftAuthenticatorAuthenticationMethod();
            case "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration": return new MicrosoftAuthenticatorAuthenticationMethodConfiguration();
            case "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodTarget": return new MicrosoftAuthenticatorAuthenticationMethodTarget();
            case "#microsoft.graph.microsoftStoreForBusinessApp": return new MicrosoftStoreForBusinessApp();
            case "#microsoft.graph.microsoftStoreForBusinessContainedApp": return new MicrosoftStoreForBusinessContainedApp();
            case "#microsoft.graph.microsoftTunnelConfiguration": return new MicrosoftTunnelConfiguration();
            case "#microsoft.graph.microsoftTunnelHealthThreshold": return new MicrosoftTunnelHealthThreshold();
            case "#microsoft.graph.microsoftTunnelServer": return new MicrosoftTunnelServer();
            case "#microsoft.graph.microsoftTunnelServerLogCollectionResponse": return new MicrosoftTunnelServerLogCollectionResponse();
            case "#microsoft.graph.microsoftTunnelSite": return new MicrosoftTunnelSite();
            case "#microsoft.graph.mobileApp": return new MobileApp();
            case "#microsoft.graph.mobileAppAssignment": return new MobileAppAssignment();
            case "#microsoft.graph.mobileAppCategory": return new MobileAppCategory();
            case "#microsoft.graph.mobileAppContent": return new MobileAppContent();
            case "#microsoft.graph.mobileAppContentFile": return new MobileAppContentFile();
            case "#microsoft.graph.mobileAppDependency": return new MobileAppDependency();
            case "#microsoft.graph.mobileAppInstallStatus": return new MobileAppInstallStatus();
            case "#microsoft.graph.mobileAppInstallSummary": return new MobileAppInstallSummary();
            case "#microsoft.graph.mobileAppIntentAndState": return new MobileAppIntentAndState();
            case "#microsoft.graph.mobileAppPolicySetItem": return new MobileAppPolicySetItem();
            case "#microsoft.graph.mobileAppProvisioningConfigGroupAssignment": return new MobileAppProvisioningConfigGroupAssignment();
            case "#microsoft.graph.mobileAppRelationship": return new MobileAppRelationship();
            case "#microsoft.graph.mobileAppSupersedence": return new MobileAppSupersedence();
            case "#microsoft.graph.mobileAppTroubleshootingEvent": return new MobileAppTroubleshootingEvent();
            case "#microsoft.graph.mobileContainedApp": return new MobileContainedApp();
            case "#microsoft.graph.mobileLobApp": return new MobileLobApp();
            case "#microsoft.graph.mobileThreatDefenseConnector": return new MobileThreatDefenseConnector();
            case "#microsoft.graph.mobilityManagementPolicy": return new MobilityManagementPolicy();
            case "#microsoft.graph.multiTenantOrganization": return new MultiTenantOrganization();
            case "#microsoft.graph.multiTenantOrganizationIdentitySyncPolicyTemplate": return new MultiTenantOrganizationIdentitySyncPolicyTemplate();
            case "#microsoft.graph.multiTenantOrganizationJoinRequestRecord": return new MultiTenantOrganizationJoinRequestRecord();
            case "#microsoft.graph.multiTenantOrganizationMember": return new MultiTenantOrganizationMember();
            case "#microsoft.graph.multiTenantOrganizationPartnerConfigurationTemplate": return new MultiTenantOrganizationPartnerConfigurationTemplate();
            case "#microsoft.graph.multiValueLegacyExtendedProperty": return new MultiValueLegacyExtendedProperty();
            case "#microsoft.graph.muteParticipantOperation": return new MuteParticipantOperation();
            case "#microsoft.graph.muteParticipantsOperation": return new MuteParticipantsOperation();
            case "#microsoft.graph.namedLocation": return new NamedLocation();
            case "#microsoft.graph.ndesConnector": return new NdesConnector();
            case "#microsoft.graph.networkaccess.branchSite": return new BranchSite();
            case "#microsoft.graph.networkaccess.conditionalAccessPolicy": return new ConditionalAccessPolicy();
            case "#microsoft.graph.networkaccess.conditionalAccessSettings": return new ConditionalAccessSettings();
            case "#microsoft.graph.networkaccess.connectivity": return new Connectivity();
            case "#microsoft.graph.networkaccess.connectivityConfigurationLink": return new ConnectivityConfigurationLink();
            case "#microsoft.graph.networkaccess.crossTenantAccessSettings": return new CrossTenantAccessSettings();
            case "#microsoft.graph.networkaccess.deviceLink": return new DeviceLink();
            case "#microsoft.graph.networkaccess.enrichedAuditLogs": return new EnrichedAuditLogs();
            case "#microsoft.graph.networkaccess.forwardingOptions": return new ForwardingOptions();
            case "#microsoft.graph.networkaccess.forwardingPolicy": return new ForwardingPolicy();
            case "#microsoft.graph.networkaccess.forwardingPolicyLink": return new ForwardingPolicyLink();
            case "#microsoft.graph.networkaccess.forwardingProfile": return new ForwardingProfile();
            case "#microsoft.graph.networkaccess.forwardingRule": return new ForwardingRule();
            case "#microsoft.graph.networkaccess.logs": return new Logs();
            case "#microsoft.graph.networkaccess.m365ForwardingRule": return new M365ForwardingRule();
            case "#microsoft.graph.networkaccess.networkAccessRoot": return new NetworkAccessRoot();
            case "#microsoft.graph.networkaccess.policy": return new Policy();
            case "#microsoft.graph.networkaccess.policyLink": return new PolicyLink();
            case "#microsoft.graph.networkaccess.policyRule": return new PolicyRule();
            case "#microsoft.graph.networkaccess.privateAccessForwardingRule": return new PrivateAccessForwardingRule();
            case "#microsoft.graph.networkaccess.profile": return new Profile();
            case "#microsoft.graph.networkaccess.reports": return new Reports();
            case "#microsoft.graph.networkaccess.settings": return new Settings();
            case "#microsoft.graph.networkaccess.tenantStatus": return new TenantStatus();
            case "#microsoft.graph.noMfaOnRoleActivationAlertConfiguration": return new NoMfaOnRoleActivationAlertConfiguration();
            case "#microsoft.graph.noMfaOnRoleActivationAlertIncident": return new NoMfaOnRoleActivationAlertIncident();
            case "#microsoft.graph.note": return new Note();
            case "#microsoft.graph.notebook": return new Notebook();
            case "#microsoft.graph.notification": return new Notification();
            case "#microsoft.graph.notificationMessageTemplate": return new NotificationMessageTemplate();
            case "#microsoft.graph.oAuth2PermissionGrant": return new OAuth2PermissionGrant();
            case "#microsoft.graph.offerShiftRequest": return new OfferShiftRequest();
            case "#microsoft.graph.office365ActiveUserCounts": return new Office365ActiveUserCounts();
            case "#microsoft.graph.office365ActiveUserDetail": return new Office365ActiveUserDetail();
            case "#microsoft.graph.office365GroupsActivityCounts": return new Office365GroupsActivityCounts();
            case "#microsoft.graph.office365GroupsActivityDetail": return new Office365GroupsActivityDetail();
            case "#microsoft.graph.office365GroupsActivityFileCounts": return new Office365GroupsActivityFileCounts();
            case "#microsoft.graph.office365GroupsActivityGroupCounts": return new Office365GroupsActivityGroupCounts();
            case "#microsoft.graph.office365GroupsActivityStorage": return new Office365GroupsActivityStorage();
            case "#microsoft.graph.office365ServicesUserCounts": return new Office365ServicesUserCounts();
            case "#microsoft.graph.officeGraphInsights": return new OfficeGraphInsights();
            case "#microsoft.graph.officeSuiteApp": return new OfficeSuiteApp();
            case "#microsoft.graph.onAttributeCollectionListener": return new OnAttributeCollectionListener();
            case "#microsoft.graph.onAuthenticationMethodLoadStartListener": return new OnAuthenticationMethodLoadStartListener();
            case "#microsoft.graph.onenote": return new Onenote();
            case "#microsoft.graph.onenoteEntityBaseModel": return new OnenoteEntityBaseModel();
            case "#microsoft.graph.onenoteEntityHierarchyModel": return new OnenoteEntityHierarchyModel();
            case "#microsoft.graph.onenoteEntitySchemaObjectModel": return new OnenoteEntitySchemaObjectModel();
            case "#microsoft.graph.onenoteOperation": return new OnenoteOperation();
            case "#microsoft.graph.onenotePage": return new OnenotePage();
            case "#microsoft.graph.onenoteResource": return new OnenoteResource();
            case "#microsoft.graph.onenoteSection": return new OnenoteSection();
            case "#microsoft.graph.onInteractiveAuthFlowStartListener": return new OnInteractiveAuthFlowStartListener();
            case "#microsoft.graph.onlineMeeting": return new OnlineMeeting();
            case "#microsoft.graph.onPremisesAgent": return new OnPremisesAgent();
            case "#microsoft.graph.onPremisesAgentGroup": return new OnPremisesAgentGroup();
            case "#microsoft.graph.onPremisesConditionalAccessSettings": return new OnPremisesConditionalAccessSettings();
            case "#microsoft.graph.onPremisesDirectorySynchronization": return new OnPremisesDirectorySynchronization();
            case "#microsoft.graph.onPremisesPublishingProfile": return new OnPremisesPublishingProfile();
            case "#microsoft.graph.onTokenIssuanceStartCustomExtension": return new OnTokenIssuanceStartCustomExtension();
            case "#microsoft.graph.onTokenIssuanceStartListener": return new OnTokenIssuanceStartListener();
            case "#microsoft.graph.onUserCreateStartListener": return new OnUserCreateStartListener();
            case "#microsoft.graph.openIdConnectIdentityProvider": return new OpenIdConnectIdentityProvider();
            case "#microsoft.graph.openIdConnectProvider": return new OpenIdConnectProvider();
            case "#microsoft.graph.openShift": return new OpenShift();
            case "#microsoft.graph.openShiftChangeRequest": return new OpenShiftChangeRequest();
            case "#microsoft.graph.openTypeExtension": return new OpenTypeExtension();
            case "#microsoft.graph.operation": return new Operation();
            case "#microsoft.graph.organization": return new Organization();
        }
        return null;
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param discriminatorValue Discriminator value from the payload
     * @return a entity
     */
    @jakarta.annotation.Nonnull
    private static Entity createFromDiscriminatorValue_2(@jakarta.annotation.Nonnull final String discriminatorValue) {
        switch (discriminatorValue) {
            case "#microsoft.graph.organizationalBranding": return new OrganizationalBranding();
            case "#microsoft.graph.organizationalBrandingLocalization": return new OrganizationalBrandingLocalization();
            case "#microsoft.graph.organizationalBrandingProperties": return new OrganizationalBrandingProperties();
            case "#microsoft.graph.organizationSettings": return new OrganizationSettings();
            case "#microsoft.graph.orgContact": return new OrgContact();
            case "#microsoft.graph.outlookCategory": return new OutlookCategory();
            case "#microsoft.graph.outlookItem": return new OutlookItem();
            case "#microsoft.graph.outlookTask": return new OutlookTask();
            case "#microsoft.graph.outlookTaskFolder": return new OutlookTaskFolder();
            case "#microsoft.graph.outlookTaskGroup": return new OutlookTaskGroup();
            case "#microsoft.graph.outlookUser": return new OutlookUser();
            case "#microsoft.graph.participant": return new Participant();
            case "#microsoft.graph.participantJoiningNotification": return new ParticipantJoiningNotification();
            case "#microsoft.graph.participantLeftNotification": return new ParticipantLeftNotification();
            case "#microsoft.graph.passwordAuthenticationMethod": return new PasswordAuthenticationMethod();
            case "#microsoft.graph.passwordlessMicrosoftAuthenticatorAuthenticationMethod": return new PasswordlessMicrosoftAuthenticatorAuthenticationMethod();
            case "#microsoft.graph.payload": return new Payload();
            case "#microsoft.graph.payloadCompatibleAssignmentFilter": return new PayloadCompatibleAssignmentFilter();
            case "#microsoft.graph.payloadResponse": return new PayloadResponse();
            case "#microsoft.graph.peopleAdminSettings": return new PeopleAdminSettings();
            case "#microsoft.graph.permission": return new Permission();
            case "#microsoft.graph.permissionGrantConditionSet": return new PermissionGrantConditionSet();
            case "#microsoft.graph.permissionGrantPolicy": return new PermissionGrantPolicy();
            case "#microsoft.graph.person": return new Person();
            case "#microsoft.graph.personAnnotation": return new PersonAnnotation();
            case "#microsoft.graph.personAnnualEvent": return new PersonAnnualEvent();
            case "#microsoft.graph.personAward": return new PersonAward();
            case "#microsoft.graph.personCertification": return new PersonCertification();
            case "#microsoft.graph.personExtension": return new PersonExtension();
            case "#microsoft.graph.personInterest": return new PersonInterest();
            case "#microsoft.graph.personName": return new PersonName();
            case "#microsoft.graph.personResponsibility": return new PersonResponsibility();
            case "#microsoft.graph.personWebsite": return new PersonWebsite();
            case "#microsoft.graph.phoneAuthenticationMethod": return new PhoneAuthenticationMethod();
            case "#microsoft.graph.pinnedChatMessageInfo": return new PinnedChatMessageInfo();
            case "#microsoft.graph.place": return new Place();
            case "#microsoft.graph.planner": return new Planner();
            case "#microsoft.graph.plannerAssignedToTaskBoardTaskFormat": return new PlannerAssignedToTaskBoardTaskFormat();
            case "#microsoft.graph.plannerBucket": return new PlannerBucket();
            case "#microsoft.graph.plannerBucketTaskBoardTaskFormat": return new PlannerBucketTaskBoardTaskFormat();
            case "#microsoft.graph.plannerDelta": return new PlannerDelta();
            case "#microsoft.graph.plannerGroup": return new PlannerGroup();
            case "#microsoft.graph.plannerPlan": return new PlannerPlan();
            case "#microsoft.graph.plannerPlanConfiguration": return new PlannerPlanConfiguration();
            case "#microsoft.graph.plannerPlanConfigurationLocalization": return new PlannerPlanConfigurationLocalization();
            case "#microsoft.graph.plannerPlanDetails": return new PlannerPlanDetails();
            case "#microsoft.graph.plannerProgressTaskBoardTaskFormat": return new PlannerProgressTaskBoardTaskFormat();
            case "#microsoft.graph.plannerRoster": return new PlannerRoster();
            case "#microsoft.graph.plannerRosterMember": return new PlannerRosterMember();
            case "#microsoft.graph.plannerTask": return new PlannerTask();
            case "#microsoft.graph.plannerTaskConfiguration": return new PlannerTaskConfiguration();
            case "#microsoft.graph.plannerTaskDetails": return new PlannerTaskDetails();
            case "#microsoft.graph.plannerUser": return new PlannerUser();
            case "#microsoft.graph.playPromptOperation": return new PlayPromptOperation();
            case "#microsoft.graph.policyBase": return new PolicyBase();
            case "#microsoft.graph.policySet": return new PolicySet();
            case "#microsoft.graph.policySetAssignment": return new PolicySetAssignment();
            case "#microsoft.graph.policySetItem": return new PolicySetItem();
            case "#microsoft.graph.policyTemplate": return new PolicyTemplate();
            case "#microsoft.graph.post": return new Post();
            case "#microsoft.graph.presence": return new Presence();
            case "#microsoft.graph.presentation": return new Presentation();
            case "#microsoft.graph.printConnector": return new PrintConnector();
            case "#microsoft.graph.printDocument": return new PrintDocument();
            case "#microsoft.graph.printer": return new Printer();
            case "#microsoft.graph.printerBase": return new PrinterBase();
            case "#microsoft.graph.printerCreateOperation": return new PrinterCreateOperation();
            case "#microsoft.graph.printerShare": return new PrinterShare();
            case "#microsoft.graph.printJob": return new PrintJob();
            case "#microsoft.graph.printOperation": return new PrintOperation();
            case "#microsoft.graph.printService": return new PrintService();
            case "#microsoft.graph.printServiceEndpoint": return new PrintServiceEndpoint();
            case "#microsoft.graph.printTask": return new PrintTask();
            case "#microsoft.graph.printTaskDefinition": return new PrintTaskDefinition();
            case "#microsoft.graph.printTaskTrigger": return new PrintTaskTrigger();
            case "#microsoft.graph.printUsage": return new PrintUsage();
            case "#microsoft.graph.printUsageByPrinter": return new PrintUsageByPrinter();
            case "#microsoft.graph.printUsageByUser": return new PrintUsageByUser();
            case "#microsoft.graph.privilegedAccess": return new PrivilegedAccess();
            case "#microsoft.graph.privilegedAccessGroup": return new PrivilegedAccessGroup();
            case "#microsoft.graph.privilegedAccessGroupAssignmentSchedule": return new PrivilegedAccessGroupAssignmentSchedule();
            case "#microsoft.graph.privilegedAccessGroupAssignmentScheduleInstance": return new PrivilegedAccessGroupAssignmentScheduleInstance();
            case "#microsoft.graph.privilegedAccessGroupAssignmentScheduleRequest": return new PrivilegedAccessGroupAssignmentScheduleRequest();
            case "#microsoft.graph.privilegedAccessGroupEligibilitySchedule": return new PrivilegedAccessGroupEligibilitySchedule();
            case "#microsoft.graph.privilegedAccessGroupEligibilityScheduleInstance": return new PrivilegedAccessGroupEligibilityScheduleInstance();
            case "#microsoft.graph.privilegedAccessGroupEligibilityScheduleRequest": return new PrivilegedAccessGroupEligibilityScheduleRequest();
            case "#microsoft.graph.privilegedAccessRoot": return new PrivilegedAccessRoot();
            case "#microsoft.graph.privilegedAccessSchedule": return new PrivilegedAccessSchedule();
            case "#microsoft.graph.privilegedAccessScheduleInstance": return new PrivilegedAccessScheduleInstance();
            case "#microsoft.graph.privilegedAccessScheduleRequest": return new PrivilegedAccessScheduleRequest();
            case "#microsoft.graph.privilegedApproval": return new PrivilegedApproval();
            case "#microsoft.graph.privilegedOperationEvent": return new PrivilegedOperationEvent();
            case "#microsoft.graph.privilegedRole": return new PrivilegedRole();
            case "#microsoft.graph.privilegedRoleAssignment": return new PrivilegedRoleAssignment();
            case "#microsoft.graph.privilegedRoleAssignmentRequest": return new PrivilegedRoleAssignmentRequest();
            case "#microsoft.graph.privilegedRoleSettings": return new PrivilegedRoleSettings();
            case "#microsoft.graph.privilegedRoleSummary": return new PrivilegedRoleSummary();
            case "#microsoft.graph.privilegedSignupStatus": return new PrivilegedSignupStatus();
            case "#microsoft.graph.privilegeManagementElevation": return new PrivilegeManagementElevation();
            case "#microsoft.graph.profile": return new Profile();
            case "#microsoft.graph.profileCardProperty": return new ProfileCardProperty();
            case "#microsoft.graph.profilePhoto": return new ProfilePhoto();
            case "#microsoft.graph.program": return new Program();
            case "#microsoft.graph.programControl": return new ProgramControl();
            case "#microsoft.graph.programControlType": return new ProgramControlType();
            case "#microsoft.graph.projectParticipation": return new ProjectParticipation();
            case "#microsoft.graph.pronounsSettings": return new PronounsSettings();
            case "#microsoft.graph.providerTenantSetting": return new ProviderTenantSetting();
            case "#microsoft.graph.provisioningObjectSummary": return new ProvisioningObjectSummary();
            case "#microsoft.graph.publishedResource": return new PublishedResource();
            case "#microsoft.graph.purchaseInvoiceLine": return new PurchaseInvoiceLine();
            case "#microsoft.graph.rbacApplication": return new RbacApplication();
            case "#microsoft.graph.rbacApplicationMultiple": return new RbacApplicationMultiple();
            case "#microsoft.graph.recommendation": return new Recommendation();
            case "#microsoft.graph.recommendationBase": return new RecommendationBase();
            case "#microsoft.graph.recordOperation": return new RecordOperation();
            case "#microsoft.graph.redundantAssignmentAlertConfiguration": return new RedundantAssignmentAlertConfiguration();
            case "#microsoft.graph.redundantAssignmentAlertIncident": return new RedundantAssignmentAlertIncident();
            case "#microsoft.graph.referenceAttachment": return new ReferenceAttachment();
            case "#microsoft.graph.regionalAndLanguageSettings": return new RegionalAndLanguageSettings();
            case "#microsoft.graph.relyingPartyDetailedSummary": return new RelyingPartyDetailedSummary();
            case "#microsoft.graph.remoteActionAudit": return new RemoteActionAudit();
            case "#microsoft.graph.remoteAssistancePartner": return new RemoteAssistancePartner();
            case "#microsoft.graph.remoteAssistanceSettings": return new RemoteAssistanceSettings();
            case "#microsoft.graph.reportRoot": return new ReportRoot();
            case "#microsoft.graph.request": return new Request();
            case "#microsoft.graph.resellerDelegatedAdminRelationship": return new ResellerDelegatedAdminRelationship();
            case "#microsoft.graph.resourceOperation": return new ResourceOperation();
            case "#microsoft.graph.resourceSpecificPermissionGrant": return new ResourceSpecificPermissionGrant();
            case "#microsoft.graph.restrictedAppsViolation": return new RestrictedAppsViolation();
            case "#microsoft.graph.richLongRunningOperation": return new RichLongRunningOperation();
            case "#microsoft.graph.riskDetection": return new RiskDetection();
            case "#microsoft.graph.riskyServicePrincipal": return new RiskyServicePrincipal();
            case "#microsoft.graph.riskyServicePrincipalHistoryItem": return new RiskyServicePrincipalHistoryItem();
            case "#microsoft.graph.riskyUser": return new RiskyUser();
            case "#microsoft.graph.riskyUserHistoryItem": return new RiskyUserHistoryItem();
            case "#microsoft.graph.roleAssignment": return new RoleAssignment();
            case "#microsoft.graph.roleDefinition": return new RoleDefinition();
            case "#microsoft.graph.roleManagementAlert": return new RoleManagementAlert();
            case "#microsoft.graph.rolesAssignedOutsidePrivilegedIdentityManagementAlertConfiguration": return new RolesAssignedOutsidePrivilegedIdentityManagementAlertConfiguration();
            case "#microsoft.graph.rolesAssignedOutsidePrivilegedIdentityManagementAlertIncident": return new RolesAssignedOutsidePrivilegedIdentityManagementAlertIncident();
            case "#microsoft.graph.roleScopeTag": return new RoleScopeTag();
            case "#microsoft.graph.roleScopeTagAutoAssignment": return new RoleScopeTagAutoAssignment();
            case "#microsoft.graph.room": return new Room();
            case "#microsoft.graph.roomList": return new RoomList();
            case "#microsoft.graph.salesCreditMemoLine": return new SalesCreditMemoLine();
            case "#microsoft.graph.salesInvoiceLine": return new SalesInvoiceLine();
            case "#microsoft.graph.salesOrderLine": return new SalesOrderLine();
            case "#microsoft.graph.salesQuoteLine": return new SalesQuoteLine();
            case "#microsoft.graph.samlOrWsFedExternalDomainFederation": return new SamlOrWsFedExternalDomainFederation();
            case "#microsoft.graph.samlOrWsFedProvider": return new SamlOrWsFedProvider();
            case "#microsoft.graph.schedule": return new Schedule();
            case "#microsoft.graph.scheduleChangeRequest": return new ScheduleChangeRequest();
            case "#microsoft.graph.schedulingGroup": return new SchedulingGroup();
            case "#microsoft.graph.schema": return new Schema();
            case "#microsoft.graph.schemaExtension": return new SchemaExtension();
            case "#microsoft.graph.scopedRoleMembership": return new ScopedRoleMembership();
            case "#microsoft.graph.search.acronym": return new Acronym();
            case "#microsoft.graph.search.bookmark": return new Bookmark();
            case "#microsoft.graph.search.qna": return new Qna();
            case "#microsoft.graph.search.searchAnswer": return new SearchAnswer();
            case "#microsoft.graph.searchEntity": return new SearchEntity();
            case "#microsoft.graph.sectionGroup": return new SectionGroup();
            case "#microsoft.graph.secureScore": return new SecureScore();
            case "#microsoft.graph.secureScoreControlProfile": return new SecureScoreControlProfile();
            case "#microsoft.graph.security": return new Security();
            case "#microsoft.graph.security.alert": return new Alert();
            case "#microsoft.graph.security.article": return new Article();
            case "#microsoft.graph.security.articleIndicator": return new ArticleIndicator();
            case "#microsoft.graph.security.artifact": return new Artifact();
            case "#microsoft.graph.security.authorityTemplate": return new AuthorityTemplate();
            case "#microsoft.graph.security.case": return new CaseEscaped();
            case "#microsoft.graph.security.caseOperation": return new CaseOperation();
            case "#microsoft.graph.security.casesRoot": return new CasesRoot();
            case "#microsoft.graph.security.categoryTemplate": return new CategoryTemplate();
            case "#microsoft.graph.security.citationTemplate": return new CitationTemplate();
            case "#microsoft.graph.security.dataSet": return new DataSet();
            case "#microsoft.graph.security.dataSource": return new DataSource();
            case "#microsoft.graph.security.dataSourceContainer": return new DataSourceContainer();
            case "#microsoft.graph.security.departmentTemplate": return new DepartmentTemplate();
            case "#microsoft.graph.security.detectionRule": return new DetectionRule();
            case "#microsoft.graph.security.dispositionReviewStage": return new DispositionReviewStage();
            case "#microsoft.graph.security.ediscoveryAddToReviewSetOperation": return new EdiscoveryAddToReviewSetOperation();
            case "#microsoft.graph.security.ediscoveryCase": return new EdiscoveryCase();
            case "#microsoft.graph.security.ediscoveryCaseSettings": return new EdiscoveryCaseSettings();
            case "#microsoft.graph.security.ediscoveryCustodian": return new EdiscoveryCustodian();
            case "#microsoft.graph.security.ediscoveryEstimateOperation": return new EdiscoveryEstimateOperation();
            case "#microsoft.graph.security.ediscoveryExportOperation": return new EdiscoveryExportOperation();
            case "#microsoft.graph.security.ediscoveryFile": return new EdiscoveryFile();
            case "#microsoft.graph.security.ediscoveryHoldOperation": return new EdiscoveryHoldOperation();
            case "#microsoft.graph.security.ediscoveryHoldPolicy": return new EdiscoveryHoldPolicy();
            case "#microsoft.graph.security.ediscoveryIndexOperation": return new EdiscoveryIndexOperation();
            case "#microsoft.graph.security.ediscoveryNoncustodialDataSource": return new EdiscoveryNoncustodialDataSource();
            case "#microsoft.graph.security.ediscoveryPurgeDataOperation": return new EdiscoveryPurgeDataOperation();
            case "#microsoft.graph.security.ediscoveryReviewSet": return new EdiscoveryReviewSet();
            case "#microsoft.graph.security.ediscoveryReviewSetQuery": return new EdiscoveryReviewSetQuery();
            case "#microsoft.graph.security.ediscoveryReviewTag": return new EdiscoveryReviewTag();
            case "#microsoft.graph.security.ediscoverySearch": return new EdiscoverySearch();
            case "#microsoft.graph.security.ediscoveryTagOperation": return new EdiscoveryTagOperation();
            case "#microsoft.graph.security.emailContentThreatSubmission": return new EmailContentThreatSubmission();
            case "#microsoft.graph.security.emailThreatSubmission": return new EmailThreatSubmission();
            case "#microsoft.graph.security.emailThreatSubmissionPolicy": return new EmailThreatSubmissionPolicy();
            case "#microsoft.graph.security.emailUrlThreatSubmission": return new EmailUrlThreatSubmission();
            case "#microsoft.graph.security.file": return new File();
            case "#microsoft.graph.security.fileContentThreatSubmission": return new FileContentThreatSubmission();
            case "#microsoft.graph.security.filePlanDescriptor": return new FilePlanDescriptor();
            case "#microsoft.graph.security.filePlanDescriptorTemplate": return new FilePlanDescriptorTemplate();
            case "#microsoft.graph.security.filePlanReferenceTemplate": return new FilePlanReferenceTemplate();
            case "#microsoft.graph.security.fileThreatSubmission": return new FileThreatSubmission();
            case "#microsoft.graph.security.fileUrlThreatSubmission": return new FileUrlThreatSubmission();
            case "#microsoft.graph.security.host": return new Host();
            case "#microsoft.graph.security.hostComponent": return new HostComponent();
            case "#microsoft.graph.security.hostCookie": return new HostCookie();
            case "#microsoft.graph.security.hostname": return new Hostname();
            case "#microsoft.graph.security.hostPair": return new HostPair();
            case "#microsoft.graph.security.hostReputation": return new HostReputation();
            case "#microsoft.graph.security.hostSslCertificate": return new HostSslCertificate();
            case "#microsoft.graph.security.hostTracker": return new HostTracker();
            case "#microsoft.graph.security.incident": return new Incident();
            case "#microsoft.graph.security.indicator": return new Indicator();
            case "#microsoft.graph.security.informationProtection": return new InformationProtection();
            case "#microsoft.graph.security.informationProtectionPolicySetting": return new InformationProtectionPolicySetting();
            case "#microsoft.graph.security.intelligenceProfile": return new IntelligenceProfile();
            case "#microsoft.graph.security.intelligenceProfileIndicator": return new IntelligenceProfileIndicator();
            case "#microsoft.graph.security.ipAddress": return new IpAddress();
            case "#microsoft.graph.security.labelsRoot": return new LabelsRoot();
            case "#microsoft.graph.security.passiveDnsRecord": return new PassiveDnsRecord();
            case "#microsoft.graph.security.policyBase": return new PolicyBase();
            case "#microsoft.graph.security.protectionRule": return new ProtectionRule();
            case "#microsoft.graph.security.retentionEvent": return new RetentionEvent();
            case "#microsoft.graph.security.retentionEventType": return new RetentionEventType();
            case "#microsoft.graph.security.retentionLabel": return new RetentionLabel();
            case "#microsoft.graph.security.search": return new Search();
            case "#microsoft.graph.security.security": return new Security();
            case "#microsoft.graph.security.sensitivityLabel": return new SensitivityLabel();
            case "#microsoft.graph.security.siteSource": return new SiteSource();
            case "#microsoft.graph.security.sslCertificate": return new SslCertificate();
            case "#microsoft.graph.security.subCategoryTemplate": return new SubCategoryTemplate();
            case "#microsoft.graph.security.subdomain": return new Subdomain();
            case "#microsoft.graph.security.tag": return new Tag();
            case "#microsoft.graph.security.threatIntelligence": return new ThreatIntelligence();
            case "#microsoft.graph.security.threatSubmission": return new ThreatSubmission();
            case "#microsoft.graph.security.threatSubmissionRoot": return new ThreatSubmissionRoot();
            case "#microsoft.graph.security.triggersRoot": return new TriggersRoot();
            case "#microsoft.graph.security.triggerTypesRoot": return new TriggerTypesRoot();
            case "#microsoft.graph.security.unclassifiedArtifact": return new UnclassifiedArtifact();
            case "#microsoft.graph.security.unifiedGroupSource": return new UnifiedGroupSource();
            case "#microsoft.graph.security.urlThreatSubmission": return new UrlThreatSubmission();
            case "#microsoft.graph.security.userSource": return new UserSource();
            case "#microsoft.graph.security.vulnerability": return new Vulnerability();
            case "#microsoft.graph.security.vulnerabilityComponent": return new VulnerabilityComponent();
            case "#microsoft.graph.security.whoisBaseRecord": return new WhoisBaseRecord();
            case "#microsoft.graph.security.whoisHistoryRecord": return new WhoisHistoryRecord();
            case "#microsoft.graph.security.whoisRecord": return new WhoisRecord();
            case "#microsoft.graph.securityAction": return new SecurityAction();
            case "#microsoft.graph.securityBaselineCategoryStateSummary": return new SecurityBaselineCategoryStateSummary();
            case "#microsoft.graph.securityBaselineDeviceState": return new SecurityBaselineDeviceState();
            case "#microsoft.graph.securityBaselineSettingState": return new SecurityBaselineSettingState();
            case "#microsoft.graph.securityBaselineState": return new SecurityBaselineState();
            case "#microsoft.graph.securityBaselineStateSummary": return new SecurityBaselineStateSummary();
            case "#microsoft.graph.securityBaselineTemplate": return new SecurityBaselineTemplate();
            case "#microsoft.graph.securityConfigurationTask": return new SecurityConfigurationTask();
            case "#microsoft.graph.securityReportsRoot": return new SecurityReportsRoot();
            case "#microsoft.graph.sensitiveType": return new SensitiveType();
            case "#microsoft.graph.sensitivityLabel": return new SensitivityLabel();
            case "#microsoft.graph.sensitivityPolicySettings": return new SensitivityPolicySettings();
            case "#microsoft.graph.sequentialActivationRenewalsAlertConfiguration": return new SequentialActivationRenewalsAlertConfiguration();
            case "#microsoft.graph.sequentialActivationRenewalsAlertIncident": return new SequentialActivationRenewalsAlertIncident();
            case "#microsoft.graph.serviceAnnouncement": return new ServiceAnnouncement();
            case "#microsoft.graph.serviceAnnouncementAttachment": return new ServiceAnnouncementAttachment();
            case "#microsoft.graph.serviceAnnouncementBase": return new ServiceAnnouncementBase();
            case "#microsoft.graph.serviceHealth": return new ServiceHealth();
            case "#microsoft.graph.serviceHealthIssue": return new ServiceHealthIssue();
            case "#microsoft.graph.serviceLevelAgreementRoot": return new ServiceLevelAgreementRoot();
            case "#microsoft.graph.serviceNowConnection": return new ServiceNowConnection();
            case "#microsoft.graph.servicePrincipal": return new ServicePrincipal();
            case "#microsoft.graph.servicePrincipalCreationConditionSet": return new ServicePrincipalCreationConditionSet();
            case "#microsoft.graph.servicePrincipalCreationPolicy": return new ServicePrincipalCreationPolicy();
            case "#microsoft.graph.servicePrincipalRiskDetection": return new ServicePrincipalRiskDetection();
            case "#microsoft.graph.servicePrincipalSignInActivity": return new ServicePrincipalSignInActivity();
            case "#microsoft.graph.serviceUpdateMessage": return new ServiceUpdateMessage();
            case "#microsoft.graph.settingStateDeviceSummary": return new SettingStateDeviceSummary();
            case "#microsoft.graph.sharedDriveItem": return new SharedDriveItem();
            case "#microsoft.graph.sharedEmailDomain": return new SharedEmailDomain();
            case "#microsoft.graph.sharedEmailDomainInvitation": return new SharedEmailDomainInvitation();
            case "#microsoft.graph.sharedInsight": return new SharedInsight();
            case "#microsoft.graph.sharedPCConfiguration": return new SharedPCConfiguration();
            case "#microsoft.graph.sharedWithChannelTeamInfo": return new SharedWithChannelTeamInfo();
            case "#microsoft.graph.sharepoint": return new Sharepoint();
            case "#microsoft.graph.sharepointSettings": return new SharepointSettings();
            case "#microsoft.graph.shift": return new Shift();
            case "#microsoft.graph.shiftPreferences": return new ShiftPreferences();
            case "#microsoft.graph.signIn": return new SignIn();
            case "#microsoft.graph.simulation": return new Simulation();
            case "#microsoft.graph.simulationAutomation": return new SimulationAutomation();
            case "#microsoft.graph.simulationAutomationRun": return new SimulationAutomationRun();
            case "#microsoft.graph.singleValueLegacyExtendedProperty": return new SingleValueLegacyExtendedProperty();
            case "#microsoft.graph.site": return new Site();
            case "#microsoft.graph.sitePage": return new SitePage();
            case "#microsoft.graph.skillProficiency": return new SkillProficiency();
            case "#microsoft.graph.skypeForBusinessUserConversationMember": return new SkypeForBusinessUserConversationMember();
            case "#microsoft.graph.skypeUserConversationMember": return new SkypeUserConversationMember();
            case "#microsoft.graph.smsAuthenticationMethodConfiguration": return new SmsAuthenticationMethodConfiguration();
            case "#microsoft.graph.smsAuthenticationMethodTarget": return new SmsAuthenticationMethodTarget();
            case "#microsoft.graph.socialIdentityProvider": return new SocialIdentityProvider();
            case "#microsoft.graph.softwareOathAuthenticationMethod": return new SoftwareOathAuthenticationMethod();
            case "#microsoft.graph.softwareOathAuthenticationMethodConfiguration": return new SoftwareOathAuthenticationMethodConfiguration();
            case "#microsoft.graph.softwareUpdateStatusSummary": return new SoftwareUpdateStatusSummary();
            case "#microsoft.graph.staleSignInAlertConfiguration": return new StaleSignInAlertConfiguration();
            case "#microsoft.graph.staleSignInAlertIncident": return new StaleSignInAlertIncident();
            case "#microsoft.graph.standardWebPart": return new StandardWebPart();
            case "#microsoft.graph.startHoldMusicOperation": return new StartHoldMusicOperation();
            case "#microsoft.graph.stopHoldMusicOperation": return new StopHoldMusicOperation();
            case "#microsoft.graph.strongAuthenticationDetail": return new StrongAuthenticationDetail();
            case "#microsoft.graph.strongAuthenticationPhoneAppDetail": return new StrongAuthenticationPhoneAppDetail();
            case "#microsoft.graph.stsPolicy": return new StsPolicy();
            case "#microsoft.graph.subjectRightsRequest": return new SubjectRightsRequest();
            case "#microsoft.graph.subscribedSku": return new SubscribedSku();
            case "#microsoft.graph.subscribeToToneOperation": return new SubscribeToToneOperation();
            case "#microsoft.graph.subscription": return new Subscription();
            case "#microsoft.graph.swapShiftsChangeRequest": return new SwapShiftsChangeRequest();
            case "#microsoft.graph.symantecCodeSigningCertificate": return new SymantecCodeSigningCertificate();
            case "#microsoft.graph.synchronization": return new Synchronization();
            case "#microsoft.graph.synchronizationJob": return new SynchronizationJob();
            case "#microsoft.graph.synchronizationSchema": return new SynchronizationSchema();
            case "#microsoft.graph.synchronizationTemplate": return new SynchronizationTemplate();
            case "#microsoft.graph.targetedManagedAppConfiguration": return new TargetedManagedAppConfiguration();
            case "#microsoft.graph.targetedManagedAppConfigurationPolicySetItem": return new TargetedManagedAppConfigurationPolicySetItem();
            case "#microsoft.graph.targetedManagedAppPolicyAssignment": return new TargetedManagedAppPolicyAssignment();
            case "#microsoft.graph.targetedManagedAppProtection": return new TargetedManagedAppProtection();
            case "#microsoft.graph.taskFileAttachment": return new TaskFileAttachment();
            case "#microsoft.graph.taxGroup": return new TaxGroup();
            case "#microsoft.graph.team": return new Team();
            case "#microsoft.graph.teamInfo": return new TeamInfo();
            case "#microsoft.graph.teamsApp": return new TeamsApp();
            case "#microsoft.graph.teamsAppDefinition": return new TeamsAppDefinition();
            case "#microsoft.graph.teamsAppIcon": return new TeamsAppIcon();
            case "#microsoft.graph.teamsAppInstallation": return new TeamsAppInstallation();
            case "#microsoft.graph.teamsAppSettings": return new TeamsAppSettings();
            case "#microsoft.graph.teamsAsyncOperation": return new TeamsAsyncOperation();
            case "#microsoft.graph.teamsTab": return new TeamsTab();
            case "#microsoft.graph.teamsTemplate": return new TeamsTemplate();
            case "#microsoft.graph.teamTemplate": return new TeamTemplate();
            case "#microsoft.graph.teamTemplateDefinition": return new TeamTemplateDefinition();
            case "#microsoft.graph.teamwork": return new Teamwork();
            case "#microsoft.graph.teamworkBot": return new TeamworkBot();
            case "#microsoft.graph.teamworkDevice": return new TeamworkDevice();
            case "#microsoft.graph.teamworkDeviceActivity": return new TeamworkDeviceActivity();
            case "#microsoft.graph.teamworkDeviceConfiguration": return new TeamworkDeviceConfiguration();
            case "#microsoft.graph.teamworkDeviceHealth": return new TeamworkDeviceHealth();
            case "#microsoft.graph.teamworkDeviceOperation": return new TeamworkDeviceOperation();
            case "#microsoft.graph.teamworkHostedContent": return new TeamworkHostedContent();
            case "#microsoft.graph.teamworkPeripheral": return new TeamworkPeripheral();
            case "#microsoft.graph.teamworkTag": return new TeamworkTag();
            case "#microsoft.graph.teamworkTagMember": return new TeamworkTagMember();
            case "#microsoft.graph.telecomExpenseManagementPartner": return new TelecomExpenseManagementPartner();
            case "#microsoft.graph.temporaryAccessPassAuthenticationMethod": return new TemporaryAccessPassAuthenticationMethod();
            case "#microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration": return new TemporaryAccessPassAuthenticationMethodConfiguration();
            case "#microsoft.graph.tenantAppManagementPolicy": return new TenantAppManagementPolicy();
            case "#microsoft.graph.tenantAttachRBAC": return new TenantAttachRBAC();
            case "#microsoft.graph.tenantRelationshipAccessPolicyBase": return new TenantRelationshipAccessPolicyBase();
            case "#microsoft.graph.tenantSetupInfo": return new TenantSetupInfo();
            case "#microsoft.graph.termsAndConditions": return new TermsAndConditions();
            case "#microsoft.graph.termsAndConditionsAcceptanceStatus": return new TermsAndConditionsAcceptanceStatus();
            case "#microsoft.graph.termsAndConditionsAssignment": return new TermsAndConditionsAssignment();
            case "#microsoft.graph.termsAndConditionsGroupAssignment": return new TermsAndConditionsGroupAssignment();
            case "#microsoft.graph.termsOfUseContainer": return new TermsOfUseContainer();
            case "#microsoft.graph.termStore.group": return new Group();
            case "#microsoft.graph.termStore.relation": return new Relation();
            case "#microsoft.graph.termStore.set": return new Set();
            case "#microsoft.graph.termStore.store": return new Store();
            case "#microsoft.graph.termStore.term": return new Term();
            case "#microsoft.graph.textClassificationRequest": return new TextClassificationRequest();
            case "#microsoft.graph.textWebPart": return new TextWebPart();
            case "#microsoft.graph.threatAssessmentRequest": return new ThreatAssessmentRequest();
            case "#microsoft.graph.threatAssessmentResult": return new ThreatAssessmentResult();
            case "#microsoft.graph.thumbnailSet": return new ThumbnailSet();
            case "#microsoft.graph.tiIndicator": return new TiIndicator();
            case "#microsoft.graph.timeCard": return new TimeCard();
            case "#microsoft.graph.timeOff": return new TimeOff();
            case "#microsoft.graph.timeOffReason": return new TimeOffReason();
            case "#microsoft.graph.timeOffRequest": return new TimeOffRequest();
            case "#microsoft.graph.todo": return new Todo();
            case "#microsoft.graph.todoTask": return new TodoTask();
            case "#microsoft.graph.todoTaskList": return new TodoTaskList();
            case "#microsoft.graph.tokenIssuancePolicy": return new TokenIssuancePolicy();
            case "#microsoft.graph.tokenLifetimePolicy": return new TokenLifetimePolicy();
            case "#microsoft.graph.tooManyGlobalAdminsAssignedToTenantAlertConfiguration": return new TooManyGlobalAdminsAssignedToTenantAlertConfiguration();
            case "#microsoft.graph.tooManyGlobalAdminsAssignedToTenantAlertIncident": return new TooManyGlobalAdminsAssignedToTenantAlertIncident();
            case "#microsoft.graph.training": return new Training();
            case "#microsoft.graph.trainingLanguageDetail": return new TrainingLanguageDetail();
            case "#microsoft.graph.trending": return new Trending();
            case "#microsoft.graph.trustedCertificateAuthorityAsEntityBase": return new TrustedCertificateAuthorityAsEntityBase();
            case "#microsoft.graph.trustFrameworkKeySet": return new TrustFrameworkKeySet();
            case "#microsoft.graph.trustFrameworkPolicy": return new TrustFrameworkPolicy();
            case "#microsoft.graph.unifiedRbacApplication": return new UnifiedRbacApplication();
            case "#microsoft.graph.unifiedRbacResourceAction": return new UnifiedRbacResourceAction();
            case "#microsoft.graph.unifiedRbacResourceNamespace": return new UnifiedRbacResourceNamespace();
            case "#microsoft.graph.unifiedRbacResourceScope": return new UnifiedRbacResourceScope();
            case "#microsoft.graph.unifiedRoleAssignment": return new UnifiedRoleAssignment();
            case "#microsoft.graph.unifiedRoleAssignmentMultiple": return new UnifiedRoleAssignmentMultiple();
            case "#microsoft.graph.unifiedRoleAssignmentSchedule": return new UnifiedRoleAssignmentSchedule();
            case "#microsoft.graph.unifiedRoleAssignmentScheduleInstance": return new UnifiedRoleAssignmentScheduleInstance();
            case "#microsoft.graph.unifiedRoleAssignmentScheduleRequest": return new UnifiedRoleAssignmentScheduleRequest();
            case "#microsoft.graph.unifiedRoleDefinition": return new UnifiedRoleDefinition();
            case "#microsoft.graph.unifiedRoleEligibilitySchedule": return new UnifiedRoleEligibilitySchedule();
            case "#microsoft.graph.unifiedRoleEligibilityScheduleInstance": return new UnifiedRoleEligibilityScheduleInstance();
            case "#microsoft.graph.unifiedRoleEligibilityScheduleRequest": return new UnifiedRoleEligibilityScheduleRequest();
            case "#microsoft.graph.unifiedRoleManagementAlert": return new UnifiedRoleManagementAlert();
            case "#microsoft.graph.unifiedRoleManagementAlertConfiguration": return new UnifiedRoleManagementAlertConfiguration();
            case "#microsoft.graph.unifiedRoleManagementAlertDefinition": return new UnifiedRoleManagementAlertDefinition();
            case "#microsoft.graph.unifiedRoleManagementAlertIncident": return new UnifiedRoleManagementAlertIncident();
            case "#microsoft.graph.unifiedRoleManagementPolicy": return new UnifiedRoleManagementPolicy();
            case "#microsoft.graph.unifiedRoleManagementPolicyApprovalRule": return new UnifiedRoleManagementPolicyApprovalRule();
            case "#microsoft.graph.unifiedRoleManagementPolicyAssignment": return new UnifiedRoleManagementPolicyAssignment();
            case "#microsoft.graph.unifiedRoleManagementPolicyAuthenticationContextRule": return new UnifiedRoleManagementPolicyAuthenticationContextRule();
            case "#microsoft.graph.unifiedRoleManagementPolicyEnablementRule": return new UnifiedRoleManagementPolicyEnablementRule();
            case "#microsoft.graph.unifiedRoleManagementPolicyExpirationRule": return new UnifiedRoleManagementPolicyExpirationRule();
            case "#microsoft.graph.unifiedRoleManagementPolicyNotificationRule": return new UnifiedRoleManagementPolicyNotificationRule();
            case "#microsoft.graph.unifiedRoleManagementPolicyRule": return new UnifiedRoleManagementPolicyRule();
            case "#microsoft.graph.unifiedRoleScheduleBase": return new UnifiedRoleScheduleBase();
            case "#microsoft.graph.unifiedRoleScheduleInstanceBase": return new UnifiedRoleScheduleInstanceBase();
            case "#microsoft.graph.unmanagedDeviceDiscoveryTask": return new UnmanagedDeviceDiscoveryTask();
            case "#microsoft.graph.unmuteParticipantOperation": return new UnmuteParticipantOperation();
            case "#microsoft.graph.unsupportedDeviceConfiguration": return new UnsupportedDeviceConfiguration();
            case "#microsoft.graph.unsupportedGroupPolicyExtension": return new UnsupportedGroupPolicyExtension();
            case "#microsoft.graph.updateRecordingStatusOperation": return new UpdateRecordingStatusOperation();
            case "#microsoft.graph.urlAssessmentRequest": return new UrlAssessmentRequest();
            case "#microsoft.graph.usageRight": return new UsageRight();
            case "#microsoft.graph.usedInsight": return new UsedInsight();
            case "#microsoft.graph.user": return new User();
            case "#microsoft.graph.userAccountInformation": return new UserAccountInformation();
            case "#microsoft.graph.userActivity": return new UserActivity();
            case "#microsoft.graph.userAnalytics": return new UserAnalytics();
            case "#microsoft.graph.userAppInstallStatus": return new UserAppInstallStatus();
            case "#microsoft.graph.userConfiguration": return new UserConfiguration();
            case "#microsoft.graph.userConsentRequest": return new UserConsentRequest();
            case "#microsoft.graph.userCredentialUsageDetails": return new UserCredentialUsageDetails();
            case "#microsoft.graph.userExperienceAnalyticsAnomaly": return new UserExperienceAnalyticsAnomaly();
            case "#microsoft.graph.userExperienceAnalyticsAnomalyCorrelationGroupOverview": return new UserExperienceAnalyticsAnomalyCorrelationGroupOverview();
            case "#microsoft.graph.userExperienceAnalyticsAnomalyDevice": return new UserExperienceAnalyticsAnomalyDevice();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthApplicationPerformance": return new UserExperienceAnalyticsAppHealthApplicationPerformance();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersion": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId": return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthAppPerformanceByOSVersion": return new UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthDeviceModelPerformance": return new UserExperienceAnalyticsAppHealthDeviceModelPerformance();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthDevicePerformance": return new UserExperienceAnalyticsAppHealthDevicePerformance();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthDevicePerformanceDetails": return new UserExperienceAnalyticsAppHealthDevicePerformanceDetails();
            case "#microsoft.graph.userExperienceAnalyticsAppHealthOSVersionPerformance": return new UserExperienceAnalyticsAppHealthOSVersionPerformance();
            case "#microsoft.graph.userExperienceAnalyticsBaseline": return new UserExperienceAnalyticsBaseline();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthAppImpact": return new UserExperienceAnalyticsBatteryHealthAppImpact();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthCapacityDetails": return new UserExperienceAnalyticsBatteryHealthCapacityDetails();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDeviceAppImpact": return new UserExperienceAnalyticsBatteryHealthDeviceAppImpact();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDevicePerformance": return new UserExperienceAnalyticsBatteryHealthDevicePerformance();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory": return new UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthModelPerformance": return new UserExperienceAnalyticsBatteryHealthModelPerformance();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthOsPerformance": return new UserExperienceAnalyticsBatteryHealthOsPerformance();
            case "#microsoft.graph.userExperienceAnalyticsBatteryHealthRuntimeDetails": return new UserExperienceAnalyticsBatteryHealthRuntimeDetails();
            case "#microsoft.graph.userExperienceAnalyticsCategory": return new UserExperienceAnalyticsCategory();
            case "#microsoft.graph.userExperienceAnalyticsDevicePerformance": return new UserExperienceAnalyticsDevicePerformance();
            case "#microsoft.graph.userExperienceAnalyticsDeviceScope": return new UserExperienceAnalyticsDeviceScope();
            case "#microsoft.graph.userExperienceAnalyticsDeviceScores": return new UserExperienceAnalyticsDeviceScores();
            case "#microsoft.graph.userExperienceAnalyticsDeviceStartupHistory": return new UserExperienceAnalyticsDeviceStartupHistory();
            case "#microsoft.graph.userExperienceAnalyticsDeviceStartupProcess": return new UserExperienceAnalyticsDeviceStartupProcess();
            case "#microsoft.graph.userExperienceAnalyticsDeviceStartupProcessPerformance": return new UserExperienceAnalyticsDeviceStartupProcessPerformance();
            case "#microsoft.graph.userExperienceAnalyticsDeviceTimelineEvent": return new UserExperienceAnalyticsDeviceTimelineEvent();
            case "#microsoft.graph.userExperienceAnalyticsDeviceWithoutCloudIdentity": return new UserExperienceAnalyticsDeviceWithoutCloudIdentity();
            case "#microsoft.graph.userExperienceAnalyticsImpactingProcess": return new UserExperienceAnalyticsImpactingProcess();
            case "#microsoft.graph.userExperienceAnalyticsMetric": return new UserExperienceAnalyticsMetric();
            case "#microsoft.graph.userExperienceAnalyticsMetricHistory": return new UserExperienceAnalyticsMetricHistory();
            case "#microsoft.graph.userExperienceAnalyticsModelScores": return new UserExperienceAnalyticsModelScores();
            case "#microsoft.graph.userExperienceAnalyticsNotAutopilotReadyDevice": return new UserExperienceAnalyticsNotAutopilotReadyDevice();
            case "#microsoft.graph.userExperienceAnalyticsOverview": return new UserExperienceAnalyticsOverview();
            case "#microsoft.graph.userExperienceAnalyticsRemoteConnection": return new UserExperienceAnalyticsRemoteConnection();
            case "#microsoft.graph.userExperienceAnalyticsResourcePerformance": return new UserExperienceAnalyticsResourcePerformance();
            case "#microsoft.graph.userExperienceAnalyticsScoreHistory": return new UserExperienceAnalyticsScoreHistory();
            case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereDevice": return new UserExperienceAnalyticsWorkFromAnywhereDevice();
            case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric": return new UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric();
            case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric": return new UserExperienceAnalyticsWorkFromAnywhereMetric();
            case "#microsoft.graph.userExperienceAnalyticsWorkFromAnywhereModelPerformance": return new UserExperienceAnalyticsWorkFromAnywhereModelPerformance();
            case "#microsoft.graph.userFlowLanguageConfiguration": return new UserFlowLanguageConfiguration();
            case "#microsoft.graph.userFlowLanguagePage": return new UserFlowLanguagePage();
            case "#microsoft.graph.userInsightsSettings": return new UserInsightsSettings();
            case "#microsoft.graph.userInstallStateSummary": return new UserInstallStateSummary();
            case "#microsoft.graph.userPFXCertificate": return new UserPFXCertificate();
            case "#microsoft.graph.userRegistrationDetails": return new UserRegistrationDetails();
            case "#microsoft.graph.userScopeTeamsAppInstallation": return new UserScopeTeamsAppInstallation();
            case "#microsoft.graph.userSecurityProfile": return new UserSecurityProfile();
            case "#microsoft.graph.userSettings": return new UserSettings();
            case "#microsoft.graph.userSignInInsight": return new UserSignInInsight();
            case "#microsoft.graph.userTeamwork": return new UserTeamwork();
            case "#microsoft.graph.userVirtualEventsRoot": return new UserVirtualEventsRoot();
            case "#microsoft.graph.verticalSection": return new VerticalSection();
            case "#microsoft.graph.virtualEndpoint": return new VirtualEndpoint();
            case "#microsoft.graph.virtualEvent": return new VirtualEvent();
            case "#microsoft.graph.virtualEventPresenter": return new VirtualEventPresenter();
            case "#microsoft.graph.virtualEventRegistration": return new VirtualEventRegistration();
            case "#microsoft.graph.virtualEventRegistrationConfiguration": return new VirtualEventRegistrationConfiguration();
            case "#microsoft.graph.virtualEventRegistrationQuestion": return new VirtualEventRegistrationQuestion();
        }
        return null;
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param discriminatorValue Discriminator value from the payload
     * @return a entity
     */
    @jakarta.annotation.Nonnull
    private static Entity createFromDiscriminatorValue_3(@jakarta.annotation.Nonnull final String discriminatorValue) {
        switch (discriminatorValue) {
            case "#microsoft.graph.virtualEventSession": return new VirtualEventSession();
            case "#microsoft.graph.virtualEventsRoot": return new VirtualEventsRoot();
            case "#microsoft.graph.virtualEventWebinar": return new VirtualEventWebinar();
            case "#microsoft.graph.virtualEventWebinarRegistrationConfiguration": return new VirtualEventWebinarRegistrationConfiguration();
            case "#microsoft.graph.voiceAuthenticationMethodConfiguration": return new VoiceAuthenticationMethodConfiguration();
            case "#microsoft.graph.voiceAuthenticationMethodTarget": return new VoiceAuthenticationMethodTarget();
            case "#microsoft.graph.vpnConfiguration": return new VpnConfiguration();
            case "#microsoft.graph.vppToken": return new VppToken();
            case "#microsoft.graph.vulnerableManagedDevice": return new VulnerableManagedDevice();
            case "#microsoft.graph.webAccount": return new WebAccount();
            case "#microsoft.graph.webApp": return new WebApp();
            case "#microsoft.graph.webApplicationSegment": return new WebApplicationSegment();
            case "#microsoft.graph.webPart": return new WebPart();
            case "#microsoft.graph.win32LobApp": return new Win32LobApp();
            case "#microsoft.graph.windows10CertificateProfileBase": return new Windows10CertificateProfileBase();
            case "#microsoft.graph.windows10CompliancePolicy": return new Windows10CompliancePolicy();
            case "#microsoft.graph.windows10CustomConfiguration": return new Windows10CustomConfiguration();
            case "#microsoft.graph.windows10DeviceFirmwareConfigurationInterface": return new Windows10DeviceFirmwareConfigurationInterface();
            case "#microsoft.graph.windows10EasEmailProfileConfiguration": return new Windows10EasEmailProfileConfiguration();
            case "#microsoft.graph.windows10EndpointProtectionConfiguration": return new Windows10EndpointProtectionConfiguration();
            case "#microsoft.graph.windows10EnrollmentCompletionPageConfiguration": return new Windows10EnrollmentCompletionPageConfiguration();
            case "#microsoft.graph.windows10EnrollmentCompletionPageConfigurationPolicySetItem": return new Windows10EnrollmentCompletionPageConfigurationPolicySetItem();
            case "#microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": return new Windows10EnterpriseModernAppManagementConfiguration();
            case "#microsoft.graph.windows10GeneralConfiguration": return new Windows10GeneralConfiguration();
            case "#microsoft.graph.windows10ImportedPFXCertificateProfile": return new Windows10ImportedPFXCertificateProfile();
            case "#microsoft.graph.windows10MobileCompliancePolicy": return new Windows10MobileCompliancePolicy();
            case "#microsoft.graph.windows10NetworkBoundaryConfiguration": return new Windows10NetworkBoundaryConfiguration();
            case "#microsoft.graph.windows10PFXImportCertificateProfile": return new Windows10PFXImportCertificateProfile();
            case "#microsoft.graph.windows10PkcsCertificateProfile": return new Windows10PkcsCertificateProfile();
            case "#microsoft.graph.windows10SecureAssessmentConfiguration": return new Windows10SecureAssessmentConfiguration();
            case "#microsoft.graph.windows10TeamGeneralConfiguration": return new Windows10TeamGeneralConfiguration();
            case "#microsoft.graph.windows10VpnConfiguration": return new Windows10VpnConfiguration();
            case "#microsoft.graph.windows10XCertificateProfile": return new Windows10XCertificateProfile();
            case "#microsoft.graph.windows10XSCEPCertificateProfile": return new Windows10XSCEPCertificateProfile();
            case "#microsoft.graph.windows10XTrustedRootCertificate": return new Windows10XTrustedRootCertificate();
            case "#microsoft.graph.windows10XVpnConfiguration": return new Windows10XVpnConfiguration();
            case "#microsoft.graph.windows10XWifiConfiguration": return new Windows10XWifiConfiguration();
            case "#microsoft.graph.windows81CertificateProfileBase": return new Windows81CertificateProfileBase();
            case "#microsoft.graph.windows81CompliancePolicy": return new Windows81CompliancePolicy();
            case "#microsoft.graph.windows81GeneralConfiguration": return new Windows81GeneralConfiguration();
            case "#microsoft.graph.windows81SCEPCertificateProfile": return new Windows81SCEPCertificateProfile();
            case "#microsoft.graph.windows81TrustedRootCertificate": return new Windows81TrustedRootCertificate();
            case "#microsoft.graph.windows81VpnConfiguration": return new Windows81VpnConfiguration();
            case "#microsoft.graph.windows81WifiImportConfiguration": return new Windows81WifiImportConfiguration();
            case "#microsoft.graph.windowsAppX": return new WindowsAppX();
            case "#microsoft.graph.windowsAssignedAccessProfile": return new WindowsAssignedAccessProfile();
            case "#microsoft.graph.windowsAutopilotDeploymentProfile": return new WindowsAutopilotDeploymentProfile();
            case "#microsoft.graph.windowsAutopilotDeploymentProfileAssignment": return new WindowsAutopilotDeploymentProfileAssignment();
            case "#microsoft.graph.windowsAutopilotDeploymentProfilePolicySetItem": return new WindowsAutopilotDeploymentProfilePolicySetItem();
            case "#microsoft.graph.windowsAutopilotDeviceIdentity": return new WindowsAutopilotDeviceIdentity();
            case "#microsoft.graph.windowsAutopilotSettings": return new WindowsAutopilotSettings();
            case "#microsoft.graph.windowsCertificateProfileBase": return new WindowsCertificateProfileBase();
            case "#microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": return new WindowsDefenderAdvancedThreatProtectionConfiguration();
            case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicy": return new WindowsDefenderApplicationControlSupplementalPolicy();
            case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyAssignment": return new WindowsDefenderApplicationControlSupplementalPolicyAssignment();
            case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus": return new WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus();
            case "#microsoft.graph.windowsDefenderApplicationControlSupplementalPolicyDeploymentSummary": return new WindowsDefenderApplicationControlSupplementalPolicyDeploymentSummary();
            case "#microsoft.graph.windowsDeliveryOptimizationConfiguration": return new WindowsDeliveryOptimizationConfiguration();
            case "#microsoft.graph.windowsDeviceMalwareState": return new WindowsDeviceMalwareState();
            case "#microsoft.graph.windowsDomainJoinConfiguration": return new WindowsDomainJoinConfiguration();
            case "#microsoft.graph.windowsDriverUpdateInventory": return new WindowsDriverUpdateInventory();
            case "#microsoft.graph.windowsDriverUpdateProfile": return new WindowsDriverUpdateProfile();
            case "#microsoft.graph.windowsDriverUpdateProfileAssignment": return new WindowsDriverUpdateProfileAssignment();
            case "#microsoft.graph.windowsFeatureUpdateCatalogItem": return new WindowsFeatureUpdateCatalogItem();
            case "#microsoft.graph.windowsFeatureUpdateProfile": return new WindowsFeatureUpdateProfile();
            case "#microsoft.graph.windowsFeatureUpdateProfileAssignment": return new WindowsFeatureUpdateProfileAssignment();
            case "#microsoft.graph.windowsHealthMonitoringConfiguration": return new WindowsHealthMonitoringConfiguration();
            case "#microsoft.graph.windowsHelloForBusinessAuthenticationMethod": return new WindowsHelloForBusinessAuthenticationMethod();
            case "#microsoft.graph.windowsIdentityProtectionConfiguration": return new WindowsIdentityProtectionConfiguration();
            case "#microsoft.graph.windowsInformationProtection": return new WindowsInformationProtection();
            case "#microsoft.graph.windowsInformationProtectionAppLearningSummary": return new WindowsInformationProtectionAppLearningSummary();
            case "#microsoft.graph.windowsInformationProtectionAppLockerFile": return new WindowsInformationProtectionAppLockerFile();
            case "#microsoft.graph.windowsInformationProtectionDeviceRegistration": return new WindowsInformationProtectionDeviceRegistration();
            case "#microsoft.graph.windowsInformationProtectionNetworkLearningSummary": return new WindowsInformationProtectionNetworkLearningSummary();
            case "#microsoft.graph.windowsInformationProtectionPolicy": return new WindowsInformationProtectionPolicy();
            case "#microsoft.graph.windowsInformationProtectionWipeAction": return new WindowsInformationProtectionWipeAction();
            case "#microsoft.graph.windowsKioskConfiguration": return new WindowsKioskConfiguration();
            case "#microsoft.graph.windowsMalwareInformation": return new WindowsMalwareInformation();
            case "#microsoft.graph.windowsManagedAppProtection": return new WindowsManagedAppProtection();
            case "#microsoft.graph.windowsManagedAppRegistration": return new WindowsManagedAppRegistration();
            case "#microsoft.graph.windowsManagedDevice": return new WindowsManagedDevice();
            case "#microsoft.graph.windowsManagementApp": return new WindowsManagementApp();
            case "#microsoft.graph.windowsManagementAppHealthState": return new WindowsManagementAppHealthState();
            case "#microsoft.graph.windowsManagementAppHealthSummary": return new WindowsManagementAppHealthSummary();
            case "#microsoft.graph.windowsMicrosoftEdgeApp": return new WindowsMicrosoftEdgeApp();
            case "#microsoft.graph.windowsMobileMSI": return new WindowsMobileMSI();
            case "#microsoft.graph.windowsPhone81AppX": return new WindowsPhone81AppX();
            case "#microsoft.graph.windowsPhone81AppXBundle": return new WindowsPhone81AppXBundle();
            case "#microsoft.graph.windowsPhone81CertificateProfileBase": return new WindowsPhone81CertificateProfileBase();
            case "#microsoft.graph.windowsPhone81CompliancePolicy": return new WindowsPhone81CompliancePolicy();
            case "#microsoft.graph.windowsPhone81CustomConfiguration": return new WindowsPhone81CustomConfiguration();
            case "#microsoft.graph.windowsPhone81GeneralConfiguration": return new WindowsPhone81GeneralConfiguration();
            case "#microsoft.graph.windowsPhone81ImportedPFXCertificateProfile": return new WindowsPhone81ImportedPFXCertificateProfile();
            case "#microsoft.graph.windowsPhone81SCEPCertificateProfile": return new WindowsPhone81SCEPCertificateProfile();
            case "#microsoft.graph.windowsPhone81StoreApp": return new WindowsPhone81StoreApp();
            case "#microsoft.graph.windowsPhone81TrustedRootCertificate": return new WindowsPhone81TrustedRootCertificate();
            case "#microsoft.graph.windowsPhone81VpnConfiguration": return new WindowsPhone81VpnConfiguration();
            case "#microsoft.graph.windowsPhoneEASEmailProfileConfiguration": return new WindowsPhoneEASEmailProfileConfiguration();
            case "#microsoft.graph.windowsPhoneXAP": return new WindowsPhoneXAP();
            case "#microsoft.graph.windowsPrivacyDataAccessControlItem": return new WindowsPrivacyDataAccessControlItem();
            case "#microsoft.graph.windowsProtectionState": return new WindowsProtectionState();
            case "#microsoft.graph.windowsQualityUpdateCatalogItem": return new WindowsQualityUpdateCatalogItem();
            case "#microsoft.graph.windowsQualityUpdateProfile": return new WindowsQualityUpdateProfile();
            case "#microsoft.graph.windowsQualityUpdateProfileAssignment": return new WindowsQualityUpdateProfileAssignment();
            case "#microsoft.graph.windowsStoreApp": return new WindowsStoreApp();
            case "#microsoft.graph.windowsUniversalAppX": return new WindowsUniversalAppX();
            case "#microsoft.graph.windowsUniversalAppXContainedApp": return new WindowsUniversalAppXContainedApp();
            case "#microsoft.graph.windowsUpdateCatalogItem": return new WindowsUpdateCatalogItem();
            case "#microsoft.graph.windowsUpdateForBusinessConfiguration": return new WindowsUpdateForBusinessConfiguration();
            case "#microsoft.graph.windowsUpdates.azureADDevice": return new AzureADDevice();
            case "#microsoft.graph.windowsUpdates.catalog": return new Catalog();
            case "#microsoft.graph.windowsUpdates.catalogEntry": return new CatalogEntry();
            case "#microsoft.graph.windowsUpdates.complianceChange": return new ComplianceChange();
            case "#microsoft.graph.windowsUpdates.contentApproval": return new ContentApproval();
            case "#microsoft.graph.windowsUpdates.deployment": return new Deployment();
            case "#microsoft.graph.windowsUpdates.deploymentAudience": return new DeploymentAudience();
            case "#microsoft.graph.windowsUpdates.driverUpdateCatalogEntry": return new DriverUpdateCatalogEntry();
            case "#microsoft.graph.windowsUpdates.featureUpdateCatalogEntry": return new FeatureUpdateCatalogEntry();
            case "#microsoft.graph.windowsUpdates.knowledgeBaseArticle": return new KnowledgeBaseArticle();
            case "#microsoft.graph.windowsUpdates.operationalInsightsConnection": return new OperationalInsightsConnection();
            case "#microsoft.graph.windowsUpdates.productRevision": return new ProductRevision();
            case "#microsoft.graph.windowsUpdates.qualityUpdateCatalogEntry": return new QualityUpdateCatalogEntry();
            case "#microsoft.graph.windowsUpdates.resourceConnection": return new ResourceConnection();
            case "#microsoft.graph.windowsUpdates.softwareUpdateCatalogEntry": return new SoftwareUpdateCatalogEntry();
            case "#microsoft.graph.windowsUpdates.updatableAsset": return new UpdatableAsset();
            case "#microsoft.graph.windowsUpdates.updatableAssetGroup": return new UpdatableAssetGroup();
            case "#microsoft.graph.windowsUpdates.updatePolicy": return new UpdatePolicy();
            case "#microsoft.graph.windowsUpdateState": return new WindowsUpdateState();
            case "#microsoft.graph.windowsVpnConfiguration": return new WindowsVpnConfiguration();
            case "#microsoft.graph.windowsWebApp": return new WindowsWebApp();
            case "#microsoft.graph.windowsWifiConfiguration": return new WindowsWifiConfiguration();
            case "#microsoft.graph.windowsWifiEnterpriseEAPConfiguration": return new WindowsWifiEnterpriseEAPConfiguration();
            case "#microsoft.graph.windowsWiredNetworkConfiguration": return new WindowsWiredNetworkConfiguration();
            case "#microsoft.graph.winGetApp": return new WinGetApp();
            case "#microsoft.graph.workbook": return new Workbook();
            case "#microsoft.graph.workbookApplication": return new WorkbookApplication();
            case "#microsoft.graph.workbookChart": return new WorkbookChart();
            case "#microsoft.graph.workbookChartAreaFormat": return new WorkbookChartAreaFormat();
            case "#microsoft.graph.workbookChartAxes": return new WorkbookChartAxes();
            case "#microsoft.graph.workbookChartAxis": return new WorkbookChartAxis();
            case "#microsoft.graph.workbookChartAxisFormat": return new WorkbookChartAxisFormat();
            case "#microsoft.graph.workbookChartAxisTitle": return new WorkbookChartAxisTitle();
            case "#microsoft.graph.workbookChartAxisTitleFormat": return new WorkbookChartAxisTitleFormat();
            case "#microsoft.graph.workbookChartDataLabelFormat": return new WorkbookChartDataLabelFormat();
            case "#microsoft.graph.workbookChartDataLabels": return new WorkbookChartDataLabels();
            case "#microsoft.graph.workbookChartFill": return new WorkbookChartFill();
            case "#microsoft.graph.workbookChartFont": return new WorkbookChartFont();
            case "#microsoft.graph.workbookChartGridlines": return new WorkbookChartGridlines();
            case "#microsoft.graph.workbookChartGridlinesFormat": return new WorkbookChartGridlinesFormat();
            case "#microsoft.graph.workbookChartLegend": return new WorkbookChartLegend();
            case "#microsoft.graph.workbookChartLegendFormat": return new WorkbookChartLegendFormat();
            case "#microsoft.graph.workbookChartLineFormat": return new WorkbookChartLineFormat();
            case "#microsoft.graph.workbookChartPoint": return new WorkbookChartPoint();
            case "#microsoft.graph.workbookChartPointFormat": return new WorkbookChartPointFormat();
            case "#microsoft.graph.workbookChartSeries": return new WorkbookChartSeries();
            case "#microsoft.graph.workbookChartSeriesFormat": return new WorkbookChartSeriesFormat();
            case "#microsoft.graph.workbookChartTitle": return new WorkbookChartTitle();
            case "#microsoft.graph.workbookChartTitleFormat": return new WorkbookChartTitleFormat();
            case "#microsoft.graph.workbookComment": return new WorkbookComment();
            case "#microsoft.graph.workbookCommentReply": return new WorkbookCommentReply();
            case "#microsoft.graph.workbookDocumentTask": return new WorkbookDocumentTask();
            case "#microsoft.graph.workbookDocumentTaskChange": return new WorkbookDocumentTaskChange();
            case "#microsoft.graph.workbookFilter": return new WorkbookFilter();
            case "#microsoft.graph.workbookFormatProtection": return new WorkbookFormatProtection();
            case "#microsoft.graph.workbookFunctionResult": return new WorkbookFunctionResult();
            case "#microsoft.graph.workbookFunctions": return new WorkbookFunctions();
            case "#microsoft.graph.workbookNamedItem": return new WorkbookNamedItem();
            case "#microsoft.graph.workbookOperation": return new WorkbookOperation();
            case "#microsoft.graph.workbookPivotTable": return new WorkbookPivotTable();
            case "#microsoft.graph.workbookRange": return new WorkbookRange();
            case "#microsoft.graph.workbookRangeBorder": return new WorkbookRangeBorder();
            case "#microsoft.graph.workbookRangeFill": return new WorkbookRangeFill();
            case "#microsoft.graph.workbookRangeFont": return new WorkbookRangeFont();
            case "#microsoft.graph.workbookRangeFormat": return new WorkbookRangeFormat();
            case "#microsoft.graph.workbookRangeSort": return new WorkbookRangeSort();
            case "#microsoft.graph.workbookRangeView": return new WorkbookRangeView();
            case "#microsoft.graph.workbookTable": return new WorkbookTable();
            case "#microsoft.graph.workbookTableColumn": return new WorkbookTableColumn();
            case "#microsoft.graph.workbookTableRow": return new WorkbookTableRow();
            case "#microsoft.graph.workbookTableSort": return new WorkbookTableSort();
            case "#microsoft.graph.workbookWorksheet": return new WorkbookWorksheet();
            case "#microsoft.graph.workbookWorksheetProtection": return new WorkbookWorksheetProtection();
            case "#microsoft.graph.workforceIntegration": return new WorkforceIntegration();
            case "#microsoft.graph.workPosition": return new WorkPosition();
            case "#microsoft.graph.workspace": return new Workspace();
            case "#microsoft.graph.x509CertificateAuthenticationMethodConfiguration": return new X509CertificateAuthenticationMethodConfiguration();
            case "#microsoft.graph.zebraFotaArtifact": return new ZebraFotaArtifact();
            case "#microsoft.graph.zebraFotaConnector": return new ZebraFotaConnector();
            case "#microsoft.graph.zebraFotaDeployment": return new ZebraFotaDeployment();
        }
        return null;
    }
    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return a Map<String, Object>
     */
    @jakarta.annotation.Nonnull
    public Map<String, Object> getAdditionalData() {
        return this.additionalData;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, java.util.function.Consumer<ParseNode>>
     */
    @jakarta.annotation.Nonnull
    public Map<String, java.util.function.Consumer<ParseNode>> getFieldDeserializers() {
        final HashMap<String, java.util.function.Consumer<ParseNode>> deserializerMap = new HashMap<String, java.util.function.Consumer<ParseNode>>(2);
        deserializerMap.put("id", (n) -> { this.setId(n.getStringValue()); });
        deserializerMap.put("@odata.type", (n) -> { this.setOdataType(n.getStringValue()); });
        return deserializerMap;
    }
    /**
     * Gets the id property value. The unique identifier for an entity. Read-only.
     * @return a string
     */
    @jakarta.annotation.Nullable
    public String getId() {
        return this.id;
    }
    /**
     * Gets the @odata.type property value. The OdataType property
     * @return a string
     */
    @jakarta.annotation.Nullable
    public String getOdataType() {
        return this.odataType;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     */
    public void serialize(@jakarta.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        writer.writeStringValue("id", this.getId());
        writer.writeStringValue("@odata.type", this.getOdataType());
        writer.writeAdditionalData(this.getAdditionalData());
    }
    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the additionalData property.
     */
    public void setAdditionalData(@jakarta.annotation.Nullable final Map<String, Object> value) {
        this.additionalData = value;
    }
    /**
     * Sets the id property value. The unique identifier for an entity. Read-only.
     * @param value Value to set for the id property.
     */
    public void setId(@jakarta.annotation.Nullable final String value) {
        this.id = value;
    }
    /**
     * Sets the @odata.type property value. The OdataType property
     * @param value Value to set for the @odata.type property.
     */
    public void setOdataType(@jakarta.annotation.Nullable final String value) {
        this.odataType = value;
    }
}
