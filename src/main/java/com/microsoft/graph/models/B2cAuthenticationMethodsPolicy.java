// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the B2c Authentication Methods Policy.
 */
public class B2cAuthenticationMethodsPolicy extends Entity implements IJsonBackedObject {


    /**
     * The Is Email Password Authentication Enabled.
     * The tenant admin can configure local accounts using email if the email and password authentication method is enabled.
     */
    @SerializedName(value = "isEmailPasswordAuthenticationEnabled", alternate = {"IsEmailPasswordAuthenticationEnabled"})
    @Expose
	@Nullable
    public Boolean isEmailPasswordAuthenticationEnabled;

    /**
     * The Is Phone One Time Password Authentication Enabled.
     * The tenant admin can configure local accounts using phone number if the phone number and one-time password authentication method is enabled.
     */
    @SerializedName(value = "isPhoneOneTimePasswordAuthenticationEnabled", alternate = {"IsPhoneOneTimePasswordAuthenticationEnabled"})
    @Expose
	@Nullable
    public Boolean isPhoneOneTimePasswordAuthenticationEnabled;

    /**
     * The Is User Name Authentication Enabled.
     * The tenant admin can configure local accounts using username if the username and password authentication method is enabled.
     */
    @SerializedName(value = "isUserNameAuthenticationEnabled", alternate = {"IsUserNameAuthenticationEnabled"})
    @Expose
	@Nullable
    public Boolean isUserNameAuthenticationEnabled;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
