// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.BitLockerRecoveryInformationType;
import com.microsoft.graph.models.ConfigurationUsage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Bit Locker Recovery Options.
 */
public class BitLockerRecoveryOptions implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Block Data Recovery Agent.
     * Indicates whether to block certificate-based data recovery agent.
     */
    @SerializedName(value = "blockDataRecoveryAgent", alternate = {"BlockDataRecoveryAgent"})
    @Expose
	@Nullable
    public Boolean blockDataRecoveryAgent;

    /**
     * The Enable Bit Locker After Recovery Information To Store.
     * Indicates whether or not to enable BitLocker until recovery information is stored in AD DS.
     */
    @SerializedName(value = "enableBitLockerAfterRecoveryInformationToStore", alternate = {"EnableBitLockerAfterRecoveryInformationToStore"})
    @Expose
	@Nullable
    public Boolean enableBitLockerAfterRecoveryInformationToStore;

    /**
     * The Enable Recovery Information Save To Store.
     * Indicates whether or not to allow BitLocker recovery information to store in AD DS.
     */
    @SerializedName(value = "enableRecoveryInformationSaveToStore", alternate = {"EnableRecoveryInformationSaveToStore"})
    @Expose
	@Nullable
    public Boolean enableRecoveryInformationSaveToStore;

    /**
     * The Hide Recovery Options.
     * Indicates whether or not to allow showing recovery options in BitLocker Setup Wizard for fixed or system disk.
     */
    @SerializedName(value = "hideRecoveryOptions", alternate = {"HideRecoveryOptions"})
    @Expose
	@Nullable
    public Boolean hideRecoveryOptions;

    /**
     * The Recovery Information To Store.
     * Configure what pieces of BitLocker recovery information are stored to AD DS. Possible values are: passwordAndKey, passwordOnly.
     */
    @SerializedName(value = "recoveryInformationToStore", alternate = {"RecoveryInformationToStore"})
    @Expose
	@Nullable
    public BitLockerRecoveryInformationType recoveryInformationToStore;

    /**
     * The Recovery Key Usage.
     * Indicates whether users are allowed or required to generate a 256-bit recovery key for fixed or system disk. Possible values are: blocked, required, allowed, notConfigured.
     */
    @SerializedName(value = "recoveryKeyUsage", alternate = {"RecoveryKeyUsage"})
    @Expose
	@Nullable
    public ConfigurationUsage recoveryKeyUsage;

    /**
     * The Recovery Password Usage.
     * Indicates whether users are allowed or required to generate a 48-digit recovery password for fixed or system disk. Possible values are: blocked, required, allowed, notConfigured.
     */
    @SerializedName(value = "recoveryPasswordUsage", alternate = {"RecoveryPasswordUsage"})
    @Expose
	@Nullable
    public ConfigurationUsage recoveryPasswordUsage;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
