// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.PolicyPlatformType;
import com.microsoft.graph.models.generated.DeviceManagementTemplateSubtype;
import com.microsoft.graph.models.generated.DeviceManagementTemplateType;
import com.microsoft.graph.models.extensions.DeviceManagementTemplateSettingCategory;
import com.microsoft.graph.models.extensions.DeviceManagementTemplate;
import com.microsoft.graph.models.extensions.DeviceManagementSettingInstance;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.DeviceManagementTemplateSettingCategoryCollectionPage;
import com.microsoft.graph.requests.extensions.DeviceManagementTemplateCollectionPage;
import com.microsoft.graph.requests.extensions.DeviceManagementSettingInstanceCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Template.
 */
public class DeviceManagementTemplate extends Entity implements IJsonBackedObject {


    /**
     * The Description.
     * The template's description
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Display Name.
     * The template's display name
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Intent Count.
     * Number of Intents created from this template.
     */
    @SerializedName(value = "intentCount", alternate = {"IntentCount"})
    @Expose
    public Integer intentCount;

    /**
     * The Is Deprecated.
     * The template is deprecated or not. Intents cannot be created from a deprecated template.
     */
    @SerializedName(value = "isDeprecated", alternate = {"IsDeprecated"})
    @Expose
    public Boolean isDeprecated;

    /**
     * The Platform Type.
     * The template's platform.
     */
    @SerializedName(value = "platformType", alternate = {"PlatformType"})
    @Expose
    public PolicyPlatformType platformType;

    /**
     * The Published Date Time.
     * When the template was published
     */
    @SerializedName(value = "publishedDateTime", alternate = {"PublishedDateTime"})
    @Expose
    public java.util.Calendar publishedDateTime;

    /**
     * The Template Subtype.
     * The template's subtype.
     */
    @SerializedName(value = "templateSubtype", alternate = {"TemplateSubtype"})
    @Expose
    public DeviceManagementTemplateSubtype templateSubtype;

    /**
     * The Template Type.
     * The template's type.
     */
    @SerializedName(value = "templateType", alternate = {"TemplateType"})
    @Expose
    public DeviceManagementTemplateType templateType;

    /**
     * The Version Info.
     * The template's version information
     */
    @SerializedName(value = "versionInfo", alternate = {"VersionInfo"})
    @Expose
    public String versionInfo;

    /**
     * The Categories.
     * Collection of setting categories within the template
     */
    @SerializedName(value = "categories", alternate = {"Categories"})
    @Expose
    public DeviceManagementTemplateSettingCategoryCollectionPage categories;

    /**
     * The Migratable To.
     * Collection of templates this template can migrate to
     */
    @SerializedName(value = "migratableTo", alternate = {"MigratableTo"})
    @Expose
    public DeviceManagementTemplateCollectionPage migratableTo;

    /**
     * The Settings.
     * Collection of all settings this template has
     */
    @SerializedName(value = "settings", alternate = {"Settings"})
    @Expose
    public DeviceManagementSettingInstanceCollectionPage settings;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("categories")) {
            categories = serializer.deserializeObject(json.get("categories").toString(), DeviceManagementTemplateSettingCategoryCollectionPage.class);
        }

        if (json.has("migratableTo")) {
            migratableTo = serializer.deserializeObject(json.get("migratableTo").toString(), DeviceManagementTemplateCollectionPage.class);
        }

        if (json.has("settings")) {
            settings = serializer.deserializeObject(json.get("settings").toString(), DeviceManagementSettingInstanceCollectionPage.class);
        }
    }
}
