// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Printer Location.
 */
public class PrinterLocation implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Altitude In Meters.
     * 
     */
    @SerializedName(value = "altitudeInMeters", alternate = {"AltitudeInMeters"})
    @Expose
    public Integer altitudeInMeters;

    /**
     * The Building.
     * 
     */
    @SerializedName(value = "building", alternate = {"Building"})
    @Expose
    public String building;

    /**
     * The City.
     * 
     */
    @SerializedName(value = "city", alternate = {"City"})
    @Expose
    public String city;

    /**
     * The Country Or Region.
     * 
     */
    @SerializedName(value = "countryOrRegion", alternate = {"CountryOrRegion"})
    @Expose
    public String countryOrRegion;

    /**
     * The Floor Description.
     * 
     */
    @SerializedName(value = "floorDescription", alternate = {"FloorDescription"})
    @Expose
    public String floorDescription;

    /**
     * The Floor Number.
     * 
     */
    @SerializedName(value = "floorNumber", alternate = {"FloorNumber"})
    @Expose
    public Integer floorNumber;

    /**
     * The Latitude.
     * 
     */
    @SerializedName(value = "latitude", alternate = {"Latitude"})
    @Expose
    public float latitude;

    /**
     * The Longitude.
     * 
     */
    @SerializedName(value = "longitude", alternate = {"Longitude"})
    @Expose
    public float longitude;

    /**
     * The Organization.
     * 
     */
    @SerializedName(value = "organization", alternate = {"Organization"})
    @Expose
    public java.util.List<String> organization;

    /**
     * The Postal Code.
     * 
     */
    @SerializedName(value = "postalCode", alternate = {"PostalCode"})
    @Expose
    public String postalCode;

    /**
     * The Room Description.
     * 
     */
    @SerializedName(value = "roomDescription", alternate = {"RoomDescription"})
    @Expose
    public String roomDescription;

    /**
     * The Room Number.
     * 
     */
    @SerializedName(value = "roomNumber", alternate = {"RoomNumber"})
    @Expose
    public Integer roomNumber;

    /**
     * The Site.
     * 
     */
    @SerializedName(value = "site", alternate = {"Site"})
    @Expose
    public String site;

    /**
     * The State Or Province.
     * 
     */
    @SerializedName(value = "stateOrProvince", alternate = {"StateOrProvince"})
    @Expose
    public String stateOrProvince;

    /**
     * The Street Address.
     * 
     */
    @SerializedName(value = "streetAddress", alternate = {"StreetAddress"})
    @Expose
    public String streetAddress;

    /**
     * The Subdivision.
     * 
     */
    @SerializedName(value = "subdivision", alternate = {"Subdivision"})
    @Expose
    public java.util.List<String> subdivision;

    /**
     * The Subunit.
     * 
     */
    @SerializedName(value = "subunit", alternate = {"Subunit"})
    @Expose
    public java.util.List<String> subunit;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
