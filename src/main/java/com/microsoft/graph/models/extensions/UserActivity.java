// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.Status;
import com.microsoft.graph.models.extensions.VisualInfo;
import com.microsoft.graph.models.extensions.ActivityHistoryItem;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.ActivityHistoryItemCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User Activity.
 */
public class UserActivity extends Entity implements IJsonBackedObject {


    /**
     * The Activation Url.
     * 
     */
    @SerializedName(value = "activationUrl", alternate = {"ActivationUrl"})
    @Expose
    public String activationUrl;

    /**
     * The Activity Source Host.
     * 
     */
    @SerializedName(value = "activitySourceHost", alternate = {"ActivitySourceHost"})
    @Expose
    public String activitySourceHost;

    /**
     * The App Activity Id.
     * 
     */
    @SerializedName(value = "appActivityId", alternate = {"AppActivityId"})
    @Expose
    public String appActivityId;

    /**
     * The App Display Name.
     * 
     */
    @SerializedName(value = "appDisplayName", alternate = {"AppDisplayName"})
    @Expose
    public String appDisplayName;

    /**
     * The Content Info.
     * 
     */
    @SerializedName(value = "contentInfo", alternate = {"ContentInfo"})
    @Expose
    public com.google.gson.JsonElement contentInfo;

    /**
     * The Content Url.
     * 
     */
    @SerializedName(value = "contentUrl", alternate = {"ContentUrl"})
    @Expose
    public String contentUrl;

    /**
     * The Created Date Time.
     * 
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
    public java.util.Calendar createdDateTime;

    /**
     * The Expiration Date Time.
     * 
     */
    @SerializedName(value = "expirationDateTime", alternate = {"ExpirationDateTime"})
    @Expose
    public java.util.Calendar expirationDateTime;

    /**
     * The Fallback Url.
     * 
     */
    @SerializedName(value = "fallbackUrl", alternate = {"FallbackUrl"})
    @Expose
    public String fallbackUrl;

    /**
     * The Last Modified Date Time.
     * 
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Status.
     * 
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
    public Status status;

    /**
     * The User Timezone.
     * 
     */
    @SerializedName(value = "userTimezone", alternate = {"UserTimezone"})
    @Expose
    public String userTimezone;

    /**
     * The Visual Elements.
     * 
     */
    @SerializedName(value = "visualElements", alternate = {"VisualElements"})
    @Expose
    public VisualInfo visualElements;

    /**
     * The History Items.
     * 
     */
    @SerializedName(value = "historyItems", alternate = {"HistoryItems"})
    @Expose
    public ActivityHistoryItemCollectionPage historyItems;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("historyItems")) {
            historyItems = serializer.deserializeObject(json.get("historyItems").toString(), ActivityHistoryItemCollectionPage.class);
        }
    }
}
