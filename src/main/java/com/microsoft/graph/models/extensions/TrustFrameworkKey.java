// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Trust Framework Key.
 */
public class TrustFrameworkKey implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The D.
     * 
     */
    @SerializedName(value = "d", alternate = {"D"})
    @Expose
    public String d;

    /**
     * The Dp.
     * 
     */
    @SerializedName(value = "dp", alternate = {"Dp"})
    @Expose
    public String dp;

    /**
     * The Dq.
     * 
     */
    @SerializedName(value = "dq", alternate = {"Dq"})
    @Expose
    public String dq;

    /**
     * The E.
     * 
     */
    @SerializedName(value = "e", alternate = {"E"})
    @Expose
    public String e;

    /**
     * The Exp.
     * 
     */
    @SerializedName(value = "exp", alternate = {"Exp"})
    @Expose
    public Long exp;

    /**
     * The K.
     * 
     */
    @SerializedName(value = "k", alternate = {"K"})
    @Expose
    public String k;

    /**
     * The Kid.
     * 
     */
    @SerializedName(value = "kid", alternate = {"Kid"})
    @Expose
    public String kid;

    /**
     * The Kty.
     * 
     */
    @SerializedName(value = "kty", alternate = {"Kty"})
    @Expose
    public String kty;

    /**
     * The N.
     * 
     */
    @SerializedName(value = "n", alternate = {"N"})
    @Expose
    public String n;

    /**
     * The Nbf.
     * 
     */
    @SerializedName(value = "nbf", alternate = {"Nbf"})
    @Expose
    public Long nbf;

    /**
     * The P.
     * 
     */
    @SerializedName(value = "p", alternate = {"P"})
    @Expose
    public String p;

    /**
     * The Q.
     * 
     */
    @SerializedName(value = "q", alternate = {"Q"})
    @Expose
    public String q;

    /**
     * The Qi.
     * 
     */
    @SerializedName(value = "qi", alternate = {"Qi"})
    @Expose
    public String qi;

    /**
     * The Use.
     * 
     */
    @SerializedName(value = "use", alternate = {"Use"})
    @Expose
    public String use;

    /**
     * The X5c.
     * 
     */
    @SerializedName(value = "x5c", alternate = {"X5c"})
    @Expose
    public java.util.List<String> x5c;

    /**
     * The X5t.
     * 
     */
    @SerializedName(value = "x5t", alternate = {"X5t"})
    @Expose
    public String x5t;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
