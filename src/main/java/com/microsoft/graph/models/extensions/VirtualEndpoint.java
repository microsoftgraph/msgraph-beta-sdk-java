// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.CloudPC;
import com.microsoft.graph.models.extensions.CloudPcDeviceImage;
import com.microsoft.graph.models.extensions.CloudPcOnPremisesConnection;
import com.microsoft.graph.models.extensions.CloudPcProvisioningPolicy;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.CloudPCCollectionPage;
import com.microsoft.graph.requests.extensions.CloudPcDeviceImageCollectionPage;
import com.microsoft.graph.requests.extensions.CloudPcOnPremisesConnectionCollectionPage;
import com.microsoft.graph.requests.extensions.CloudPcProvisioningPolicyCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Virtual Endpoint.
 */
public class VirtualEndpoint extends Entity implements IJsonBackedObject {


    /**
     * The Cloud PCs.
     * 
     */
    @SerializedName(value = "cloudPCs", alternate = {"CloudPCs"})
    @Expose
    public CloudPCCollectionPage cloudPCs;

    /**
     * The Device Images.
     * 
     */
    @SerializedName(value = "deviceImages", alternate = {"DeviceImages"})
    @Expose
    public CloudPcDeviceImageCollectionPage deviceImages;

    /**
     * The On Premises Connections.
     * 
     */
    @SerializedName(value = "onPremisesConnections", alternate = {"OnPremisesConnections"})
    @Expose
    public CloudPcOnPremisesConnectionCollectionPage onPremisesConnections;

    /**
     * The Provisioning Policies.
     * 
     */
    @SerializedName(value = "provisioningPolicies", alternate = {"ProvisioningPolicies"})
    @Expose
    public CloudPcProvisioningPolicyCollectionPage provisioningPolicies;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("cloudPCs")) {
            cloudPCs = serializer.deserializeObject(json.get("cloudPCs").toString(), CloudPCCollectionPage.class);
        }

        if (json.has("deviceImages")) {
            deviceImages = serializer.deserializeObject(json.get("deviceImages").toString(), CloudPcDeviceImageCollectionPage.class);
        }

        if (json.has("onPremisesConnections")) {
            onPremisesConnections = serializer.deserializeObject(json.get("onPremisesConnections").toString(), CloudPcOnPremisesConnectionCollectionPage.class);
        }

        if (json.has("provisioningPolicies")) {
            provisioningPolicies = serializer.deserializeObject(json.get("provisioningPolicies").toString(), CloudPcProvisioningPolicyCollectionPage.class);
        }
    }
}
