// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User Experience Analytics App Health Application Performance.
 */
public class UserExperienceAnalyticsAppHealthApplicationPerformance extends Entity implements IJsonBackedObject {


    /**
     * The App Name.
     * The name of the application.
     */
    @SerializedName("appName")
    @Expose
    public String appName;

    /**
     * The App Friendly Name.
     * The friendly name of the application.
     */
    @SerializedName("appFriendlyName")
    @Expose
    public String appFriendlyName;

    /**
     * The App Publisher.
     * The publisher of the application.
     */
    @SerializedName("appPublisher")
    @Expose
    public String appPublisher;

    /**
     * The Active Devices.
     * The number of devices where the app has been active. Valid values -2147483648 to 2147483647
     */
    @SerializedName("activeDevices")
    @Expose
    public Integer activeDevices;

    /**
     * The Total App Usage Duration.
     * The total usage time of the application in minutes. Valid values -2147483648 to 2147483647
     */
    @SerializedName("totalAppUsageDuration")
    @Expose
    public Integer totalAppUsageDuration;

    /**
     * The Total App Crashes.
     * The number of crashes for the app. Valid values -2147483648 to 2147483647
     */
    @SerializedName("totalAppCrashes")
    @Expose
    public Integer totalAppCrashes;

    /**
     * The Total App Hangs.
     * The number of hangs for the app. Valid values -2147483648 to 2147483647
     */
    @SerializedName("totalAppHangs")
    @Expose
    public Integer totalAppHangs;

    /**
     * The Mean Time To Failure.
     * The mean time to failure for the app in minutes. Valid values -2147483648 to 2147483647
     */
    @SerializedName("meanTimeToFailure")
    @Expose
    public Integer meanTimeToFailure;

    /**
     * The App Health Score.
     * The health score of the app. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    @SerializedName("appHealthScore")
    @Expose
    public Double appHealthScore;

    /**
     * The App Health Status.
     * The overall health status of the app.
     */
    @SerializedName("appHealthStatus")
    @Expose
    public String appHealthStatus;

    /**
     * The All Orgs Health Score.
     * The median health score of the application across all organizations. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    @SerializedName("allOrgsHealthScore")
    @Expose
    public Double allOrgsHealthScore;

    /**
     * The All Orgs Mean Time To Failure.
     * The median mean time to failure across all orgs for the app in minutes. Valid values -2147483648 to 2147483647
     */
    @SerializedName("allOrgsMeanTimeToFailure")
    @Expose
    public Integer allOrgsMeanTimeToFailure;

    /**
     * The Tenant Id.
     * The id of the tenant associated with this app object.
     */
    @SerializedName("tenantId")
    @Expose
    public String tenantId;

    /**
     * The Mema Time Generated.
     * The time when aggregation was performed in MEMA.
     */
    @SerializedName("memaTimeGenerated")
    @Expose
    public String memaTimeGenerated;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
