// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.GroupPolicyConfigurationType;
import com.microsoft.graph.models.extensions.GroupPolicyPresentationValue;
import com.microsoft.graph.models.extensions.GroupPolicyDefinition;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.GroupPolicyPresentationValueCollectionResponse;
import com.microsoft.graph.requests.extensions.GroupPolicyPresentationValueCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Group Policy Definition Value.
 */
public class GroupPolicyDefinitionValue extends Entity implements IJsonBackedObject {


    /**
     * The Created Date Time.
     * The date and time the object was created.
     */
    @SerializedName("createdDateTime")
    @Expose
    public java.util.Calendar createdDateTime;

    /**
     * The Enabled.
     * Enables or disables the associated group policy definition.
     */
    @SerializedName("enabled")
    @Expose
    public Boolean enabled;

    /**
     * The Configuration Type.
     * Specifies how the value should be configured. This can be either as a Policy or as a Preference.
     */
    @SerializedName("configurationType")
    @Expose
    public GroupPolicyConfigurationType configurationType;

    /**
     * The Last Modified Date Time.
     * The date and time the entity was last modified.
     */
    @SerializedName("lastModifiedDateTime")
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Presentation Values.
     * The associated group policy presentation values with the definition value.
     */
    public GroupPolicyPresentationValueCollectionPage presentationValues;

    /**
     * The Definition.
     * The associated group policy definition with the value.
     */
    @SerializedName("definition")
    @Expose
    public GroupPolicyDefinition definition;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("presentationValues")) {
            final GroupPolicyPresentationValueCollectionResponse response = new GroupPolicyPresentationValueCollectionResponse();
            if (json.has("presentationValues@odata.nextLink")) {
                response.nextLink = json.get("presentationValues@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("presentationValues").toString(), JsonObject[].class);
            final GroupPolicyPresentationValue[] array = new GroupPolicyPresentationValue[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), GroupPolicyPresentationValue.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            presentationValues = new GroupPolicyPresentationValueCollectionPage(response, null);
        }
    }
}
