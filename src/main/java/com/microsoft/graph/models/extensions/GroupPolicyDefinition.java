// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.GroupPolicyDefinitionClassType;
import com.microsoft.graph.models.generated.GroupPolicyType;
import com.microsoft.graph.models.extensions.GroupPolicyDefinitionFile;
import com.microsoft.graph.models.extensions.GroupPolicyCategory;
import com.microsoft.graph.models.extensions.GroupPolicyPresentation;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.GroupPolicyPresentationCollectionResponse;
import com.microsoft.graph.requests.extensions.GroupPolicyPresentationCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Group Policy Definition.
 */
public class GroupPolicyDefinition extends Entity implements IJsonBackedObject {


    /**
     * The Class Type.
     * Identifies the type of groups the policy can be applied to.
     */
    @SerializedName("classType")
    @Expose
    public GroupPolicyDefinitionClassType classType;

    /**
     * The Display Name.
     * The localized policy name.
     */
    @SerializedName("displayName")
    @Expose
    public String displayName;

    /**
     * The Explain Text.
     * The localized explanation or help text associated with the policy. The default value is empty.
     */
    @SerializedName("explainText")
    @Expose
    public String explainText;

    /**
     * The Category Path.
     * The localized full category path for the policy.
     */
    @SerializedName("categoryPath")
    @Expose
    public String categoryPath;

    /**
     * The Supported On.
     * Localized string used to specify what operating system or application version is affected by the policy.
     */
    @SerializedName("supportedOn")
    @Expose
    public String supportedOn;

    /**
     * The Policy Type.
     * Specifies the type of group policy.
     */
    @SerializedName("policyType")
    @Expose
    public GroupPolicyType policyType;

    /**
     * The Group Policy Category Id.
     * The category id of the parent category
     */
    @SerializedName("groupPolicyCategoryId")
    @Expose
    public java.util.UUID groupPolicyCategoryId;

    /**
     * The Last Modified Date Time.
     * The date and time the entity was last modified.
     */
    @SerializedName("lastModifiedDateTime")
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Definition File.
     * The group policy file associated with the definition.
     */
    @SerializedName("definitionFile")
    @Expose
    public GroupPolicyDefinitionFile definitionFile;

    /**
     * The Category.
     * The group policy category associated with the definition.
     */
    @SerializedName("category")
    @Expose
    public GroupPolicyCategory category;

    /**
     * The Presentations.
     * The group policy presentations associated with the definition.
     */
    public GroupPolicyPresentationCollectionPage presentations;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("presentations")) {
            final GroupPolicyPresentationCollectionResponse response = new GroupPolicyPresentationCollectionResponse();
            if (json.has("presentations@odata.nextLink")) {
                response.nextLink = json.get("presentations@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("presentations").toString(), JsonObject[].class);
            final GroupPolicyPresentation[] array = new GroupPolicyPresentation[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), GroupPolicyPresentation.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            presentations = new GroupPolicyPresentationCollectionPage(response, null);
        }
    }
}
