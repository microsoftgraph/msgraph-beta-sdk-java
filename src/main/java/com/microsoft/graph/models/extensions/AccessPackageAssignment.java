// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.AccessPackage;
import com.microsoft.graph.models.extensions.AccessPackageAssignmentPolicy;
import com.microsoft.graph.models.extensions.AccessPackageSubject;
import com.microsoft.graph.models.extensions.AccessPackageAssignmentRequest;
import com.microsoft.graph.models.extensions.AccessPackageAssignmentResourceRole;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.AccessPackageAssignmentRequestCollectionResponse;
import com.microsoft.graph.requests.extensions.AccessPackageAssignmentRequestCollectionPage;
import com.microsoft.graph.requests.extensions.AccessPackageAssignmentResourceRoleCollectionResponse;
import com.microsoft.graph.requests.extensions.AccessPackageAssignmentResourceRoleCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Access Package Assignment.
 */
public class AccessPackageAssignment extends Entity implements IJsonBackedObject {


    /**
     * The Catalog Id.
     * 
     */
    @SerializedName("catalogId")
    @Expose
    public String catalogId;

    /**
     * The Access Package Id.
     * 
     */
    @SerializedName("accessPackageId")
    @Expose
    public String accessPackageId;

    /**
     * The Assignment Policy Id.
     * 
     */
    @SerializedName("assignmentPolicyId")
    @Expose
    public String assignmentPolicyId;

    /**
     * The Target Id.
     * 
     */
    @SerializedName("targetId")
    @Expose
    public String targetId;

    /**
     * The Assignment Status.
     * 
     */
    @SerializedName("assignmentStatus")
    @Expose
    public String assignmentStatus;

    /**
     * The Assignment State.
     * 
     */
    @SerializedName("assignmentState")
    @Expose
    public String assignmentState;

    /**
     * The Is Extended.
     * 
     */
    @SerializedName("isExtended")
    @Expose
    public Boolean isExtended;

    /**
     * The Expired Date Time.
     * 
     */
    @SerializedName("expiredDateTime")
    @Expose
    public java.util.Calendar expiredDateTime;

    /**
     * The Access Package.
     * 
     */
    @SerializedName("accessPackage")
    @Expose
    public AccessPackage accessPackage;

    /**
     * The Access Package Assignment Policy.
     * 
     */
    @SerializedName("accessPackageAssignmentPolicy")
    @Expose
    public AccessPackageAssignmentPolicy accessPackageAssignmentPolicy;

    /**
     * The Target.
     * 
     */
    @SerializedName("target")
    @Expose
    public AccessPackageSubject target;

    /**
     * The Access Package Assignment Requests.
     * 
     */
    public AccessPackageAssignmentRequestCollectionPage accessPackageAssignmentRequests;

    /**
     * The Access Package Assignment Resource Roles.
     * 
     */
    public AccessPackageAssignmentResourceRoleCollectionPage accessPackageAssignmentResourceRoles;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("accessPackageAssignmentRequests")) {
            final AccessPackageAssignmentRequestCollectionResponse response = new AccessPackageAssignmentRequestCollectionResponse();
            if (json.has("accessPackageAssignmentRequests@odata.nextLink")) {
                response.nextLink = json.get("accessPackageAssignmentRequests@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("accessPackageAssignmentRequests").toString(), JsonObject[].class);
            final AccessPackageAssignmentRequest[] array = new AccessPackageAssignmentRequest[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), AccessPackageAssignmentRequest.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            accessPackageAssignmentRequests = new AccessPackageAssignmentRequestCollectionPage(response, null);
        }

        if (json.has("accessPackageAssignmentResourceRoles")) {
            final AccessPackageAssignmentResourceRoleCollectionResponse response = new AccessPackageAssignmentResourceRoleCollectionResponse();
            if (json.has("accessPackageAssignmentResourceRoles@odata.nextLink")) {
                response.nextLink = json.get("accessPackageAssignmentResourceRoles@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("accessPackageAssignmentResourceRoles").toString(), JsonObject[].class);
            final AccessPackageAssignmentResourceRole[] array = new AccessPackageAssignmentResourceRole[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), AccessPackageAssignmentResourceRole.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            accessPackageAssignmentResourceRoles = new AccessPackageAssignmentResourceRoleCollectionPage(response, null);
        }
    }
}
