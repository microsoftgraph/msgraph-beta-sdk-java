// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.ConnectorGroupType;
import com.microsoft.graph.models.generated.ConnectorGroupRegion;
import com.microsoft.graph.models.extensions.Application;
import com.microsoft.graph.models.extensions.Connector;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.ApplicationCollectionPage;
import com.microsoft.graph.requests.extensions.ConnectorCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Connector Group.
 */
public class ConnectorGroup extends Entity implements IJsonBackedObject {


    /**
     * The Connector Group Type.
     * Indicates the type of hybrid agent. This pre-set by the system. Read-only.
     */
    @SerializedName(value = "connectorGroupType", alternate = {"ConnectorGroupType"})
    @Expose
    public ConnectorGroupType connectorGroupType;

    /**
     * The Is Default.
     * Indicates if the connectorGroup is the default connectorGroup. Only a single connector group can be the default connectorGroup and this is pre-set by the system. Read-only.
     */
    @SerializedName(value = "isDefault", alternate = {"IsDefault"})
    @Expose
    public Boolean isDefault;

    /**
     * The Name.
     * The name associated with the connectorGroup.
     */
    @SerializedName(value = "name", alternate = {"Name"})
    @Expose
    public String name;

    /**
     * The Region.
     * The region the connectorGroup is assigned to and will optimize traffic for. This region can only be set if no connectors or applications are assigned to the connectorGroup. The regions available include: North America, Europe, Australia, Asia, and India. Possible values are: nam, eur, aus, asia, ind.
     */
    @SerializedName(value = "region", alternate = {"Region"})
    @Expose
    public ConnectorGroupRegion region;

    /**
     * The Applications.
     * Read-only. Nullable.
     */
    public ApplicationCollectionPage applications;

    /**
     * The Members.
     * Read-only. Nullable.
     */
    @SerializedName(value = "members", alternate = {"Members"})
    @Expose
    public ConnectorCollectionPage members;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("applications")) {
            applications = serializer.deserializeObject(json.get("applications").toString(), ApplicationCollectionPage.class);
        }

        if (json.has("members")) {
            members = serializer.deserializeObject(json.get("members").toString(), ConnectorCollectionPage.class);
        }
    }
}
