// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.MobileAppTroubleshootingHistoryItem;
import com.microsoft.graph.models.extensions.AppLogCollectionRequest;
import com.microsoft.graph.models.extensions.DeviceManagementTroubleshootingEvent;
import com.microsoft.graph.requests.extensions.AppLogCollectionRequestCollectionResponse;
import com.microsoft.graph.requests.extensions.AppLogCollectionRequestCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Mobile App Troubleshooting Event.
 */
public class MobileAppTroubleshootingEvent extends DeviceManagementTroubleshootingEvent implements IJsonBackedObject {


    /**
     * The Managed Device Identifier.
     * Device identifier created or collected by Intune.
     */
    @SerializedName("managedDeviceIdentifier")
    @Expose
    public String managedDeviceIdentifier;

    /**
     * The User Id.
     * Identifier for the user that tried to enroll the device.
     */
    @SerializedName("userId")
    @Expose
    public String userId;

    /**
     * The Application Id.
     * Intune application identifier.
     */
    @SerializedName("applicationId")
    @Expose
    public String applicationId;

    /**
     * The History.
     * Intune Mobile Application Troubleshooting History Item
     */
    @SerializedName("history")
    @Expose
    public java.util.List<MobileAppTroubleshootingHistoryItem> history;

    /**
     * The App Log Collection Requests.
     * The collection property of AppLogUploadRequest.
     */
    public AppLogCollectionRequestCollectionPage appLogCollectionRequests;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("appLogCollectionRequests")) {
            final AppLogCollectionRequestCollectionResponse response = new AppLogCollectionRequestCollectionResponse();
            if (json.has("appLogCollectionRequests@odata.nextLink")) {
                response.nextLink = json.get("appLogCollectionRequests@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("appLogCollectionRequests").toString(), JsonObject[].class);
            final AppLogCollectionRequest[] array = new AppLogCollectionRequest[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), AppLogCollectionRequest.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            appLogCollectionRequests = new AppLogCollectionRequestCollectionPage(response, null);
        }
    }
}
