// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Office365Services User Counts.
 */
public class Office365ServicesUserCounts extends Entity implements IJsonBackedObject {


    /**
     * The Exchange Active.
     * The number of active users on Exchange. Any user who can read and send email is considered an active user.
     */
    @SerializedName(value = "exchangeActive", alternate = {"ExchangeActive"})
    @Expose
    public Long exchangeActive;

    /**
     * The Exchange Inactive.
     * The number of inactive users on Exchange.
     */
    @SerializedName(value = "exchangeInactive", alternate = {"ExchangeInactive"})
    @Expose
    public Long exchangeInactive;

    /**
     * The Office365Active.
     * The number of active users on Microsoft 365.
     */
    @SerializedName(value = "office365Active", alternate = {"Office365Active"})
    @Expose
    public Long office365Active;

    /**
     * The Office365Inactive.
     * The number of inactive users on Microsoft 365.
     */
    @SerializedName(value = "office365Inactive", alternate = {"Office365Inactive"})
    @Expose
    public Long office365Inactive;

    /**
     * The One Drive Active.
     * The number of active users on OneDrive. Any user who viewed or edited files, shared files internally or externally, or synced files is considered an active user.
     */
    @SerializedName(value = "oneDriveActive", alternate = {"OneDriveActive"})
    @Expose
    public Long oneDriveActive;

    /**
     * The One Drive Inactive.
     * The number of inactive users on OneDrive.
     */
    @SerializedName(value = "oneDriveInactive", alternate = {"OneDriveInactive"})
    @Expose
    public Long oneDriveInactive;

    /**
     * The Report Period.
     * The number of days the report covers.
     */
    @SerializedName(value = "reportPeriod", alternate = {"ReportPeriod"})
    @Expose
    public String reportPeriod;

    /**
     * The Report Refresh Date.
     * The latest date of the content.
     */
    @SerializedName(value = "reportRefreshDate", alternate = {"ReportRefreshDate"})
    @Expose
    public com.microsoft.graph.models.extensions.DateOnly reportRefreshDate;

    /**
     * The Share Point Active.
     * The number of active users on SharePoint. Any user who viewed or edited files, shared files internally or externally, synced files, or viewed SharePoint pages is considered an active user.
     */
    @SerializedName(value = "sharePointActive", alternate = {"SharePointActive"})
    @Expose
    public Long sharePointActive;

    /**
     * The Share Point Inactive.
     * The number of inactive users on SharePoint.
     */
    @SerializedName(value = "sharePointInactive", alternate = {"SharePointInactive"})
    @Expose
    public Long sharePointInactive;

    /**
     * The Skype For Business Active.
     * The number of active users on Skype For Business. Any user who organized or participated in conferences, or joined peer-to-peer sessions is considered an active user.
     */
    @SerializedName(value = "skypeForBusinessActive", alternate = {"SkypeForBusinessActive"})
    @Expose
    public Long skypeForBusinessActive;

    /**
     * The Skype For Business Inactive.
     * The number of inactive users on Skype For Business.
     */
    @SerializedName(value = "skypeForBusinessInactive", alternate = {"SkypeForBusinessInactive"})
    @Expose
    public Long skypeForBusinessInactive;

    /**
     * The Teams Active.
     * The number of active users on Microsoft Teams. Any user who posted messages in team channels, sent messages in private chat sessions, or participated in meetings or calls is considered an active user.
     */
    @SerializedName(value = "teamsActive", alternate = {"TeamsActive"})
    @Expose
    public Long teamsActive;

    /**
     * The Teams Inactive.
     * The number of inactive users on Microsoft Teams.
     */
    @SerializedName(value = "teamsInactive", alternate = {"TeamsInactive"})
    @Expose
    public Long teamsInactive;

    /**
     * The Yammer Active.
     * The number of active users on Yammer. Any user who can post, read, or like messages is considered an active user.
     */
    @SerializedName(value = "yammerActive", alternate = {"YammerActive"})
    @Expose
    public Long yammerActive;

    /**
     * The Yammer Inactive.
     * The number of inactive users on Yammer.
     */
    @SerializedName(value = "yammerInactive", alternate = {"YammerInactive"})
    @Expose
    public Long yammerInactive;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
