// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.AppleVpnConnectionType;
import com.microsoft.graph.models.extensions.VpnServer;
import com.microsoft.graph.models.extensions.KeyValue;
import com.microsoft.graph.models.extensions.KeyValuePair;
import com.microsoft.graph.models.generated.VpnAuthenticationMethod;
import com.microsoft.graph.models.extensions.VpnOnDemandRule;
import com.microsoft.graph.models.generated.VpnProviderType;
import com.microsoft.graph.models.extensions.VpnProxyServer;
import com.microsoft.graph.models.extensions.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Apple Vpn Configuration.
 */
public class AppleVpnConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Connection Name.
     * Connection name displayed to the user.
     */
    @SerializedName("connectionName")
    @Expose
    public String connectionName;

    /**
     * The Connection Type.
     * Connection type.
     */
    @SerializedName("connectionType")
    @Expose
    public AppleVpnConnectionType connectionType;

    /**
     * The Login Group Or Domain.
     * Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.
     */
    @SerializedName("loginGroupOrDomain")
    @Expose
    public String loginGroupOrDomain;

    /**
     * The Role.
     * Role when connection type is set to Pulse Secure.
     */
    @SerializedName("role")
    @Expose
    public String role;

    /**
     * The Realm.
     * Realm when connection type is set to Pulse Secure.
     */
    @SerializedName("realm")
    @Expose
    public String realm;

    /**
     * The Server.
     * VPN Server on the network. Make sure end users can access this network location.
     */
    @SerializedName("server")
    @Expose
    public VpnServer server;

    /**
     * The Identifier.
     * Identifier provided by VPN vendor when connection type is set to Custom VPN. For example: Cisco AnyConnect uses an identifier of the form com.cisco.anyconnect.applevpn.plugin
     */
    @SerializedName("identifier")
    @Expose
    public String identifier;

    /**
     * The Custom Data.
     * Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements.
     */
    @SerializedName("customData")
    @Expose
    public java.util.List<KeyValue> customData;

    /**
     * The Custom Key Value Data.
     * Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements.
     */
    @SerializedName("customKeyValueData")
    @Expose
    public java.util.List<KeyValuePair> customKeyValueData;

    /**
     * The Enable Split Tunneling.
     * Send all network traffic through VPN.
     */
    @SerializedName("enableSplitTunneling")
    @Expose
    public Boolean enableSplitTunneling;

    /**
     * The Authentication Method.
     * Authentication method for this VPN connection.
     */
    @SerializedName("authenticationMethod")
    @Expose
    public VpnAuthenticationMethod authenticationMethod;

    /**
     * The Enable Per App.
     * Setting this to true creates Per-App VPN payload which can later be associated with Apps that can trigger this VPN conneciton on the end user's iOS device.
     */
    @SerializedName("enablePerApp")
    @Expose
    public Boolean enablePerApp;

    /**
     * The Safari Domains.
     * Safari domains when this VPN per App setting is enabled. In addition to the apps associated with this VPN, Safari domains specified here will also be able to trigger this VPN connection.
     */
    @SerializedName("safariDomains")
    @Expose
    public java.util.List<String> safariDomains;

    /**
     * The On Demand Rules.
     * On-Demand Rules. This collection can contain a maximum of 500 elements.
     */
    @SerializedName("onDemandRules")
    @Expose
    public java.util.List<VpnOnDemandRule> onDemandRules;

    /**
     * The Provider Type.
     * Provider type for per-app VPN.
     */
    @SerializedName("providerType")
    @Expose
    public VpnProviderType providerType;

    /**
     * The Proxy Server.
     * Proxy Server.
     */
    @SerializedName("proxyServer")
    @Expose
    public VpnProxyServer proxyServer;

    /**
     * The Opt In To Device Id Sharing.
     * Opt-In to sharing the device's Id to third-party vpn clients for use during network access control validation.
     */
    @SerializedName("optInToDeviceIdSharing")
    @Expose
    public Boolean optInToDeviceIdSharing;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
