// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.HybridAgentUpdaterConfiguration;
import com.microsoft.graph.models.extensions.OnPremisesAgentGroup;
import com.microsoft.graph.models.extensions.OnPremisesAgent;
import com.microsoft.graph.models.extensions.ConnectorGroup;
import com.microsoft.graph.models.extensions.Connector;
import com.microsoft.graph.models.extensions.PublishedResource;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.OnPremisesAgentGroupCollectionPage;
import com.microsoft.graph.requests.extensions.OnPremisesAgentCollectionPage;
import com.microsoft.graph.requests.extensions.ConnectorGroupCollectionPage;
import com.microsoft.graph.requests.extensions.ConnectorCollectionPage;
import com.microsoft.graph.requests.extensions.PublishedResourceCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the On Premises Publishing Profile.
 */
public class OnPremisesPublishingProfile extends Entity implements IJsonBackedObject {


    /**
     * The Hybrid Agent Updater Configuration.
     * Represents a hybridAgentUpdaterConfiguration object.
     */
    @SerializedName(value = "hybridAgentUpdaterConfiguration", alternate = {"HybridAgentUpdaterConfiguration"})
    @Expose
    public HybridAgentUpdaterConfiguration hybridAgentUpdaterConfiguration;

    /**
     * The Is Enabled.
     * Represents if Azure AD Application Proxy is enabled for the tenant.
     */
    @SerializedName(value = "isEnabled", alternate = {"IsEnabled"})
    @Expose
    public Boolean isEnabled;

    /**
     * The Agent Groups.
     * List of existing onPremisesAgentGroup objects. Read-only. Nullable.
     */
    @SerializedName(value = "agentGroups", alternate = {"AgentGroups"})
    @Expose
    public OnPremisesAgentGroupCollectionPage agentGroups;

    /**
     * The Agents.
     * List of existing onPremisesAgent objects. Read-only. Nullable.
     */
    @SerializedName(value = "agents", alternate = {"Agents"})
    @Expose
    public OnPremisesAgentCollectionPage agents;

    /**
     * The Connector Groups.
     * List of existing connectorGroup objects for applications published through Application Proxy. Read-only. Nullable.
     */
    @SerializedName(value = "connectorGroups", alternate = {"ConnectorGroups"})
    @Expose
    public ConnectorGroupCollectionPage connectorGroups;

    /**
     * The Connectors.
     * List of existing connector objects for applications published through Application Proxy. Read-only. Nullable.
     */
    @SerializedName(value = "connectors", alternate = {"Connectors"})
    @Expose
    public ConnectorCollectionPage connectors;

    /**
     * The Published Resources.
     * List of existing publishedResource objects. Read-only. Nullable.
     */
    @SerializedName(value = "publishedResources", alternate = {"PublishedResources"})
    @Expose
    public PublishedResourceCollectionPage publishedResources;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("agentGroups")) {
            agentGroups = serializer.deserializeObject(json.get("agentGroups").toString(), OnPremisesAgentGroupCollectionPage.class);
        }

        if (json.has("agents")) {
            agents = serializer.deserializeObject(json.get("agents").toString(), OnPremisesAgentCollectionPage.class);
        }

        if (json.has("connectorGroups")) {
            connectorGroups = serializer.deserializeObject(json.get("connectorGroups").toString(), ConnectorGroupCollectionPage.class);
        }

        if (json.has("connectors")) {
            connectors = serializer.deserializeObject(json.get("connectors").toString(), ConnectorCollectionPage.class);
        }

        if (json.has("publishedResources")) {
            publishedResources = serializer.deserializeObject(json.get("publishedResources").toString(), PublishedResourceCollectionPage.class);
        }
    }
}
