// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.PrintColorMode;
import com.microsoft.graph.models.extensions.IntegerRange;
import com.microsoft.graph.models.generated.PrintDuplexMode;
import com.microsoft.graph.models.generated.PrinterFeedDirection;
import com.microsoft.graph.models.generated.PrinterFeedOrientation;
import com.microsoft.graph.models.generated.PrintFinishing;
import com.microsoft.graph.models.generated.PrintMultipageLayout;
import com.microsoft.graph.models.generated.PrintOrientation;
import com.microsoft.graph.models.generated.PrintQuality;
import com.microsoft.graph.models.generated.PrintScaling;
import com.microsoft.graph.models.generated.PrintColorConfiguration;
import com.microsoft.graph.models.generated.PrintDuplexConfiguration;
import com.microsoft.graph.models.generated.PrintMediaType;
import com.microsoft.graph.models.generated.PrintPresentationDirection;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Printer Capabilities.
 */
public class PrinterCapabilities implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Bottom Margins.
     * 
     */
    @SerializedName(value = "bottomMargins", alternate = {"BottomMargins"})
    @Expose
    public java.util.List<Integer> bottomMargins;

    /**
     * The Collation.
     * 
     */
    @SerializedName(value = "collation", alternate = {"Collation"})
    @Expose
    public Boolean collation;

    /**
     * The Color Modes.
     * 
     */
    @SerializedName(value = "colorModes", alternate = {"ColorModes"})
    @Expose
    public java.util.List<PrintColorMode> colorModes;

    /**
     * The Content Types.
     * 
     */
    @SerializedName(value = "contentTypes", alternate = {"ContentTypes"})
    @Expose
    public java.util.List<String> contentTypes;

    /**
     * The Copies Per Job.
     * 
     */
    @SerializedName(value = "copiesPerJob", alternate = {"CopiesPerJob"})
    @Expose
    public IntegerRange copiesPerJob;

    /**
     * The Dpis.
     * 
     */
    @SerializedName(value = "dpis", alternate = {"Dpis"})
    @Expose
    public java.util.List<Integer> dpis;

    /**
     * The Duplex Modes.
     * 
     */
    @SerializedName(value = "duplexModes", alternate = {"DuplexModes"})
    @Expose
    public java.util.List<PrintDuplexMode> duplexModes;

    /**
     * The Feed Directions.
     * 
     */
    @SerializedName(value = "feedDirections", alternate = {"FeedDirections"})
    @Expose
    public java.util.List<PrinterFeedDirection> feedDirections;

    /**
     * The Feed Orientations.
     * 
     */
    @SerializedName(value = "feedOrientations", alternate = {"FeedOrientations"})
    @Expose
    public java.util.List<PrinterFeedOrientation> feedOrientations;

    /**
     * The Finishings.
     * 
     */
    @SerializedName(value = "finishings", alternate = {"Finishings"})
    @Expose
    public java.util.List<PrintFinishing> finishings;

    /**
     * The Input Bins.
     * 
     */
    @SerializedName(value = "inputBins", alternate = {"InputBins"})
    @Expose
    public java.util.List<String> inputBins;

    /**
     * The Is Color Printing Supported.
     * 
     */
    @SerializedName(value = "isColorPrintingSupported", alternate = {"IsColorPrintingSupported"})
    @Expose
    public Boolean isColorPrintingSupported;

    /**
     * The Is Page Range Supported.
     * 
     */
    @SerializedName(value = "isPageRangeSupported", alternate = {"IsPageRangeSupported"})
    @Expose
    public Boolean isPageRangeSupported;

    /**
     * The Left Margins.
     * 
     */
    @SerializedName(value = "leftMargins", alternate = {"LeftMargins"})
    @Expose
    public java.util.List<Integer> leftMargins;

    /**
     * The Media Colors.
     * 
     */
    @SerializedName(value = "mediaColors", alternate = {"MediaColors"})
    @Expose
    public java.util.List<String> mediaColors;

    /**
     * The Media Sizes.
     * 
     */
    @SerializedName(value = "mediaSizes", alternate = {"MediaSizes"})
    @Expose
    public java.util.List<String> mediaSizes;

    /**
     * The Media Types.
     * 
     */
    @SerializedName(value = "mediaTypes", alternate = {"MediaTypes"})
    @Expose
    public java.util.List<String> mediaTypes;

    /**
     * The Multipage Layouts.
     * 
     */
    @SerializedName(value = "multipageLayouts", alternate = {"MultipageLayouts"})
    @Expose
    public java.util.List<PrintMultipageLayout> multipageLayouts;

    /**
     * The Orientations.
     * 
     */
    @SerializedName(value = "orientations", alternate = {"Orientations"})
    @Expose
    public java.util.List<PrintOrientation> orientations;

    /**
     * The Output Bins.
     * 
     */
    @SerializedName(value = "outputBins", alternate = {"OutputBins"})
    @Expose
    public java.util.List<String> outputBins;

    /**
     * The Pages Per Sheet.
     * 
     */
    @SerializedName(value = "pagesPerSheet", alternate = {"PagesPerSheet"})
    @Expose
    public java.util.List<Integer> pagesPerSheet;

    /**
     * The Qualities.
     * 
     */
    @SerializedName(value = "qualities", alternate = {"Qualities"})
    @Expose
    public java.util.List<PrintQuality> qualities;

    /**
     * The Right Margins.
     * 
     */
    @SerializedName(value = "rightMargins", alternate = {"RightMargins"})
    @Expose
    public java.util.List<Integer> rightMargins;

    /**
     * The Scalings.
     * 
     */
    @SerializedName(value = "scalings", alternate = {"Scalings"})
    @Expose
    public java.util.List<PrintScaling> scalings;

    /**
     * The Supported Color Configurations.
     * 
     */
    @SerializedName(value = "supportedColorConfigurations", alternate = {"SupportedColorConfigurations"})
    @Expose
    public java.util.List<PrintColorConfiguration> supportedColorConfigurations;

    /**
     * The Supported Copies Per Job.
     * 
     */
    @SerializedName(value = "supportedCopiesPerJob", alternate = {"SupportedCopiesPerJob"})
    @Expose
    public IntegerRange supportedCopiesPerJob;

    /**
     * The Supported Document Mime Types.
     * 
     */
    @SerializedName(value = "supportedDocumentMimeTypes", alternate = {"SupportedDocumentMimeTypes"})
    @Expose
    public java.util.List<String> supportedDocumentMimeTypes;

    /**
     * The Supported Duplex Configurations.
     * 
     */
    @SerializedName(value = "supportedDuplexConfigurations", alternate = {"SupportedDuplexConfigurations"})
    @Expose
    public java.util.List<PrintDuplexConfiguration> supportedDuplexConfigurations;

    /**
     * The Supported Finishings.
     * 
     */
    @SerializedName(value = "supportedFinishings", alternate = {"SupportedFinishings"})
    @Expose
    public java.util.List<PrintFinishing> supportedFinishings;

    /**
     * The Supported Media Colors.
     * 
     */
    @SerializedName(value = "supportedMediaColors", alternate = {"SupportedMediaColors"})
    @Expose
    public java.util.List<String> supportedMediaColors;

    /**
     * The Supported Media Sizes.
     * 
     */
    @SerializedName(value = "supportedMediaSizes", alternate = {"SupportedMediaSizes"})
    @Expose
    public java.util.List<String> supportedMediaSizes;

    /**
     * The Supported Media Types.
     * 
     */
    @SerializedName(value = "supportedMediaTypes", alternate = {"SupportedMediaTypes"})
    @Expose
    public java.util.List<PrintMediaType> supportedMediaTypes;

    /**
     * The Supported Orientations.
     * 
     */
    @SerializedName(value = "supportedOrientations", alternate = {"SupportedOrientations"})
    @Expose
    public java.util.List<PrintOrientation> supportedOrientations;

    /**
     * The Supported Output Bins.
     * 
     */
    @SerializedName(value = "supportedOutputBins", alternate = {"SupportedOutputBins"})
    @Expose
    public java.util.List<String> supportedOutputBins;

    /**
     * The Supported Pages Per Sheet.
     * 
     */
    @SerializedName(value = "supportedPagesPerSheet", alternate = {"SupportedPagesPerSheet"})
    @Expose
    public IntegerRange supportedPagesPerSheet;

    /**
     * The Supported Presentation Directions.
     * 
     */
    @SerializedName(value = "supportedPresentationDirections", alternate = {"SupportedPresentationDirections"})
    @Expose
    public java.util.List<PrintPresentationDirection> supportedPresentationDirections;

    /**
     * The Supported Print Qualities.
     * 
     */
    @SerializedName(value = "supportedPrintQualities", alternate = {"SupportedPrintQualities"})
    @Expose
    public java.util.List<PrintQuality> supportedPrintQualities;

    /**
     * The Supports Fit Pdf To Page.
     * 
     */
    @SerializedName(value = "supportsFitPdfToPage", alternate = {"SupportsFitPdfToPage"})
    @Expose
    public Boolean supportsFitPdfToPage;

    /**
     * The Top Margins.
     * 
     */
    @SerializedName(value = "topMargins", alternate = {"TopMargins"})
    @Expose
    public java.util.List<Integer> topMargins;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
