// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.GroupPolicyUploadedDefinitionFileStatus;
import com.microsoft.graph.models.extensions.GroupPolicyUploadedLanguageFile;
import com.microsoft.graph.models.extensions.GroupPolicyOperation;
import com.microsoft.graph.models.extensions.GroupPolicyDefinitionFile;
import com.microsoft.graph.requests.extensions.GroupPolicyOperationCollectionResponse;
import com.microsoft.graph.requests.extensions.GroupPolicyOperationCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Group Policy Uploaded Definition File.
 */
public class GroupPolicyUploadedDefinitionFile extends GroupPolicyDefinitionFile implements IJsonBackedObject {


    /**
     * The File Name.
     * The file name of the uploaded ADML file.
     */
    @SerializedName("fileName")
    @Expose
    public String fileName;

    /**
     * The Status.
     * The upload status of the uploaded ADMX file.
     */
    @SerializedName("status")
    @Expose
    public GroupPolicyUploadedDefinitionFileStatus status;

    /**
     * The Content.
     * The contents of the uploaded ADMX file.
     */
    @SerializedName("content")
    @Expose
    public byte[] content;

    /**
     * The Upload Date Time.
     * The uploaded time of the uploaded ADMX file.
     */
    @SerializedName("uploadDateTime")
    @Expose
    public java.util.Calendar uploadDateTime;

    /**
     * The Default Language Code.
     * The default language of the uploaded ADMX file.
     */
    @SerializedName("defaultLanguageCode")
    @Expose
    public String defaultLanguageCode;

    /**
     * The Group Policy Uploaded Language Files.
     * The list of ADML files associated with the uploaded ADMX file.
     */
    @SerializedName("groupPolicyUploadedLanguageFiles")
    @Expose
    public java.util.List<GroupPolicyUploadedLanguageFile> groupPolicyUploadedLanguageFiles;

    /**
     * The Group Policy Operations.
     * The list of operations on the uploaded ADMX file.
     */
    public GroupPolicyOperationCollectionPage groupPolicyOperations;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("groupPolicyOperations")) {
            final GroupPolicyOperationCollectionResponse response = new GroupPolicyOperationCollectionResponse();
            if (json.has("groupPolicyOperations@odata.nextLink")) {
                response.nextLink = json.get("groupPolicyOperations@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("groupPolicyOperations").toString(), JsonObject[].class);
            final GroupPolicyOperation[] array = new GroupPolicyOperation[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), GroupPolicyOperation.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            groupPolicyOperations = new GroupPolicyOperationCollectionPage(response, null);
        }
    }
}
