// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.CloudPcProvisioningPolicyImageType;
import com.microsoft.graph.models.extensions.CloudPcProvisioningPolicyAssignment;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.CloudPcProvisioningPolicyAssignmentCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Cloud Pc Provisioning Policy.
 */
public class CloudPcProvisioningPolicy extends Entity implements IJsonBackedObject {


    /**
     * The Description.
     * The provisioning policy description.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Display Name.
     * The display name for the provisioning policy.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Image Display Name.
     * The display name for the OS image you’re provisioning.
     */
    @SerializedName(value = "imageDisplayName", alternate = {"ImageDisplayName"})
    @Expose
    public String imageDisplayName;

    /**
     * The Image Id.
     * The ID of the OS image you want to provision on cloud PCs. The format for a gallery type image is: {publisher_offer_sku}.
     */
    @SerializedName(value = "imageId", alternate = {"ImageId"})
    @Expose
    public String imageId;

    /**
     * The Image Type.
     * The type of OS image (custom or gallery) you want to provision on cloud PCs. Possible values are: gallery, custom.
     */
    @SerializedName(value = "imageType", alternate = {"ImageType"})
    @Expose
    public CloudPcProvisioningPolicyImageType imageType;

    /**
     * The On Premises Connection Id.
     * The ID of the cloudPcOnPremisesConnection. To ensure that cloud PCs have network connectivity and that they domain join, choose a connection with a virtual network that’s validated by the cloud PC service.
     */
    @SerializedName(value = "onPremisesConnectionId", alternate = {"OnPremisesConnectionId"})
    @Expose
    public String onPremisesConnectionId;

    /**
     * The Assignments.
     * A defined collection of provisioning policy assignments. Returned only on $expand. See an example of getting the assignments relationship.
     */
    @SerializedName(value = "assignments", alternate = {"Assignments"})
    @Expose
    public CloudPcProvisioningPolicyAssignmentCollectionPage assignments;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("assignments")) {
            assignments = serializer.deserializeObject(json.get("assignments").toString(), CloudPcProvisioningPolicyAssignmentCollectionPage.class);
        }
    }
}
