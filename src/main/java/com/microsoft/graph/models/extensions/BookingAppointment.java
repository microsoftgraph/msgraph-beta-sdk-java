// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Location;
import com.microsoft.graph.models.extensions.DateTimeTimeZone;
import com.microsoft.graph.models.generated.BookingInvoiceStatus;
import com.microsoft.graph.models.generated.BookingPriceType;
import com.microsoft.graph.models.extensions.BookingReminder;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Booking Appointment.
 */
public class BookingAppointment extends Entity implements IJsonBackedObject {


    /**
     * The Additional Information.
     * 
     */
    @SerializedName(value = "additionalInformation", alternate = {"AdditionalInformation"})
    @Expose
    public String additionalInformation;

    /**
     * The Customer Email Address.
     * The SMTP address of the bookingCustomer who is booking the appointment.
     */
    @SerializedName(value = "customerEmailAddress", alternate = {"CustomerEmailAddress"})
    @Expose
    public String customerEmailAddress;

    /**
     * The Customer Id.
     * If CustomerId is not specified when an appointment is created then a new customer is created based on the appointment customer information. Once set, the customerId should be considered immutable.
     */
    @SerializedName(value = "customerId", alternate = {"CustomerId"})
    @Expose
    public String customerId;

    /**
     * The Customer Location.
     * Represents location information for the bookingCustomer who is booking the appointment.
     */
    @SerializedName(value = "customerLocation", alternate = {"CustomerLocation"})
    @Expose
    public Location customerLocation;

    /**
     * The Customer Name.
     * The customer's name.
     */
    @SerializedName(value = "customerName", alternate = {"CustomerName"})
    @Expose
    public String customerName;

    /**
     * The Customer Notes.
     * The value of this property is only available when reading an individual booking appointment by id. Its value can only be set when creating a new appointment with a new customer, ie, without specifying a CustomerId. After that, the property is computed from the customer represented by CustomerId.
     */
    @SerializedName(value = "customerNotes", alternate = {"CustomerNotes"})
    @Expose
    public String customerNotes;

    /**
     * The Customer Phone.
     * The customer's phone number.
     */
    @SerializedName(value = "customerPhone", alternate = {"CustomerPhone"})
    @Expose
    public String customerPhone;

    /**
     * The Duration.
     * The length of the appointment, denoted in ISO8601 format.
     */
    @SerializedName(value = "duration", alternate = {"Duration"})
    @Expose
    public javax.xml.datatype.Duration duration;

    /**
     * The End.
     * The date, time, and time zone that the appointment ends.
     */
    @SerializedName(value = "end", alternate = {"End"})
    @Expose
    public DateTimeTimeZone end;

    /**
     * The Invoice Amount.
     * The billed amount on the invoice.
     */
    @SerializedName(value = "invoiceAmount", alternate = {"InvoiceAmount"})
    @Expose
    public Double invoiceAmount;

    /**
     * The Invoice Date.
     * The date, time, and time zone of the invoice for this appointment.
     */
    @SerializedName(value = "invoiceDate", alternate = {"InvoiceDate"})
    @Expose
    public DateTimeTimeZone invoiceDate;

    /**
     * The Invoice Id.
     * The ID of the invoice.
     */
    @SerializedName(value = "invoiceId", alternate = {"InvoiceId"})
    @Expose
    public String invoiceId;

    /**
     * The Invoice Status.
     * The status of the invoice. Possible values are: draft, reviewing, open, canceled, paid, corrective.
     */
    @SerializedName(value = "invoiceStatus", alternate = {"InvoiceStatus"})
    @Expose
    public BookingInvoiceStatus invoiceStatus;

    /**
     * The Invoice Url.
     * The URL of the invoice in Microsoft Bookings.
     */
    @SerializedName(value = "invoiceUrl", alternate = {"InvoiceUrl"})
    @Expose
    public String invoiceUrl;

    /**
     * The Is Location Online.
     * 
     */
    @SerializedName(value = "isLocationOnline", alternate = {"IsLocationOnline"})
    @Expose
    public Boolean isLocationOnline;

    /**
     * The Online Meeting Url.
     * 
     */
    @SerializedName(value = "onlineMeetingUrl", alternate = {"OnlineMeetingUrl"})
    @Expose
    public String onlineMeetingUrl;

    /**
     * The Opt Out Of Customer Email.
     * True indicates that the bookingCustomer for this appointment does not wish to receive a confirmation for this appointment.
     */
    @SerializedName(value = "optOutOfCustomerEmail", alternate = {"OptOutOfCustomerEmail"})
    @Expose
    public Boolean optOutOfCustomerEmail;

    /**
     * The Post Buffer.
     * The amount of time to reserve after the appointment ends, for cleaning up, as an example. The value is expressed in ISO8601 format.
     */
    @SerializedName(value = "postBuffer", alternate = {"PostBuffer"})
    @Expose
    public javax.xml.datatype.Duration postBuffer;

    /**
     * The Pre Buffer.
     * The amount of time to reserve before the appointment begins, for preparation, as an example. The value is expressed in ISO8601 format.
     */
    @SerializedName(value = "preBuffer", alternate = {"PreBuffer"})
    @Expose
    public javax.xml.datatype.Duration preBuffer;

    /**
     * The Price.
     * The regular price for an appointment for the specified bookingService.
     */
    @SerializedName(value = "price", alternate = {"Price"})
    @Expose
    public Double price;

    /**
     * The Price Type.
     * A setting to provide flexibility for the pricing structure of services. Possible values are: undefined, fixedPrice, startingAt, hourly, free, priceVaries, callUs, notSet.
     */
    @SerializedName(value = "priceType", alternate = {"PriceType"})
    @Expose
    public BookingPriceType priceType;

    /**
     * The Reminders.
     * The value of this property is only available when reading an individual booking appointment by id.
     */
    @SerializedName(value = "reminders", alternate = {"Reminders"})
    @Expose
    public java.util.List<BookingReminder> reminders;

    /**
     * The Self Service Appointment Id.
     * An additional tracking ID for the appointment, if the appointment has been created directly by the customer on the scheduling page, as opposed to by a staff member on the behalf of the customer.
     */
    @SerializedName(value = "selfServiceAppointmentId", alternate = {"SelfServiceAppointmentId"})
    @Expose
    public String selfServiceAppointmentId;

    /**
     * The Service Id.
     * The ID of the bookingService associated with this appointment.
     */
    @SerializedName(value = "serviceId", alternate = {"ServiceId"})
    @Expose
    public String serviceId;

    /**
     * The Service Location.
     * The location where the service is delivered.
     */
    @SerializedName(value = "serviceLocation", alternate = {"ServiceLocation"})
    @Expose
    public Location serviceLocation;

    /**
     * The Service Name.
     * This property is optional when creating a new appointment. If not specified, it is computed from the service associated with the appointment by the service id.
     */
    @SerializedName(value = "serviceName", alternate = {"ServiceName"})
    @Expose
    public String serviceName;

    /**
     * The Service Notes.
     * The value of this property is only available when reading an individual booking appointment by id.
     */
    @SerializedName(value = "serviceNotes", alternate = {"ServiceNotes"})
    @Expose
    public String serviceNotes;

    /**
     * The Staff Member Ids.
     * The ID of each bookingStaffMember who is scheduled in this appointment.
     */
    @SerializedName(value = "staffMemberIds", alternate = {"StaffMemberIds"})
    @Expose
    public java.util.List<String> staffMemberIds;

    /**
     * The Start.
     * The date, time, and time zone that the appointment begins.
     */
    @SerializedName(value = "start", alternate = {"Start"})
    @Expose
    public DateTimeTimeZone start;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
