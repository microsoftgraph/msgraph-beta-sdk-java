// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Location;
import com.microsoft.graph.models.extensions.DateTimeTimeZone;
import com.microsoft.graph.models.generated.BookingPriceType;
import com.microsoft.graph.models.extensions.BookingReminder;
import com.microsoft.graph.models.generated.BookingInvoiceStatus;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Booking Appointment.
 */
public class BookingAppointment extends Entity implements IJsonBackedObject {


    /**
     * The Self Service Appointment Id.
     * 
     */
    @SerializedName("selfServiceAppointmentId")
    @Expose
    public String selfServiceAppointmentId;

    /**
     * The Customer Id.
     * If CustomerId is not specified when an appointment is created then a new customer is created based on the appointment customer information. Once set, the customerId should be considered immutable.
     */
    @SerializedName("customerId")
    @Expose
    public String customerId;

    /**
     * The Customer Name.
     * 
     */
    @SerializedName("customerName")
    @Expose
    public String customerName;

    /**
     * The Customer Email Address.
     * 
     */
    @SerializedName("customerEmailAddress")
    @Expose
    public String customerEmailAddress;

    /**
     * The Customer Phone.
     * 
     */
    @SerializedName("customerPhone")
    @Expose
    public String customerPhone;

    /**
     * The Customer Location.
     * 
     */
    @SerializedName("customerLocation")
    @Expose
    public Location customerLocation;

    /**
     * The Customer Notes.
     * The value of this property is only available when reading an individual booking appointment by id. Its value can only be set when creating a new appointment with a new customer, ie, without specifying a CustomerId. After that, the property is computed from the customer represented by CustomerId.
     */
    @SerializedName("customerNotes")
    @Expose
    public String customerNotes;

    /**
     * The Service Id.
     * The id of the booking service associated with this appointment.
     */
    @SerializedName("serviceId")
    @Expose
    public String serviceId;

    /**
     * The Service Name.
     * This property is optional when creating a new appointment. If not specified, it is computed from the service associated with the appointment by the service id.
     */
    @SerializedName("serviceName")
    @Expose
    public String serviceName;

    /**
     * The Start.
     * 
     */
    @SerializedName("start")
    @Expose
    public DateTimeTimeZone start;

    /**
     * The End.
     * 
     */
    @SerializedName("end")
    @Expose
    public DateTimeTimeZone end;

    /**
     * The Duration.
     * 
     */
    @SerializedName("duration")
    @Expose
    public javax.xml.datatype.Duration duration;

    /**
     * The Pre Buffer.
     * 
     */
    @SerializedName("preBuffer")
    @Expose
    public javax.xml.datatype.Duration preBuffer;

    /**
     * The Post Buffer.
     * 
     */
    @SerializedName("postBuffer")
    @Expose
    public javax.xml.datatype.Duration postBuffer;

    /**
     * The Service Location.
     * 
     */
    @SerializedName("serviceLocation")
    @Expose
    public Location serviceLocation;

    /**
     * The Price Type.
     * 
     */
    @SerializedName("priceType")
    @Expose
    public BookingPriceType priceType;

    /**
     * The Price.
     * 
     */
    @SerializedName("price")
    @Expose
    public Double price;

    /**
     * The Service Notes.
     * The value of this property is only available when reading an individual booking appointment by id.
     */
    @SerializedName("serviceNotes")
    @Expose
    public String serviceNotes;

    /**
     * The Reminders.
     * The value of this property is only available when reading an individual booking appointment by id.
     */
    @SerializedName("reminders")
    @Expose
    public java.util.List<BookingReminder> reminders;

    /**
     * The Opt Out Of Customer Email.
     * 
     */
    @SerializedName("optOutOfCustomerEmail")
    @Expose
    public Boolean optOutOfCustomerEmail;

    /**
     * The Staff Member Ids.
     * 
     */
    @SerializedName("staffMemberIds")
    @Expose
    public java.util.List<String> staffMemberIds;

    /**
     * The Invoice Amount.
     * 
     */
    @SerializedName("invoiceAmount")
    @Expose
    public Double invoiceAmount;

    /**
     * The Invoice Date.
     * 
     */
    @SerializedName("invoiceDate")
    @Expose
    public DateTimeTimeZone invoiceDate;

    /**
     * The Invoice Id.
     * 
     */
    @SerializedName("invoiceId")
    @Expose
    public String invoiceId;

    /**
     * The Invoice Status.
     * 
     */
    @SerializedName("invoiceStatus")
    @Expose
    public BookingInvoiceStatus invoiceStatus;

    /**
     * The Invoice Url.
     * 
     */
    @SerializedName("invoiceUrl")
    @Expose
    public String invoiceUrl;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
