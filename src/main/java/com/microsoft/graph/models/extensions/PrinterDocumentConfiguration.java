// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.IntegerRange;
import com.microsoft.graph.models.generated.PrintQuality;
import com.microsoft.graph.models.generated.PrinterFeedDirection;
import com.microsoft.graph.models.generated.PrintOrientation;
import com.microsoft.graph.models.generated.PrintDuplexMode;
import com.microsoft.graph.models.generated.PrintColorMode;
import com.microsoft.graph.models.extensions.PrintMargin;
import com.microsoft.graph.models.generated.PrintFinishing;
import com.microsoft.graph.models.generated.PrintMultipageLayout;
import com.microsoft.graph.models.generated.PrintScaling;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Printer Document Configuration.
 */
public class PrinterDocumentConfiguration implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Page Ranges.
     * 
     */
    @SerializedName("pageRanges")
    @Expose
    public java.util.List<IntegerRange> pageRanges;

    /**
     * The Quality.
     * 
     */
    @SerializedName("quality")
    @Expose
    public PrintQuality quality;

    /**
     * The Dpi.
     * 
     */
    @SerializedName("dpi")
    @Expose
    public Integer dpi;

    /**
     * The Feed Direction.
     * 
     */
    @SerializedName("feedDirection")
    @Expose
    public PrinterFeedDirection feedDirection;

    /**
     * The Orientation.
     * 
     */
    @SerializedName("orientation")
    @Expose
    public PrintOrientation orientation;

    /**
     * The Duplex Mode.
     * 
     */
    @SerializedName("duplexMode")
    @Expose
    public PrintDuplexMode duplexMode;

    /**
     * The Copies.
     * 
     */
    @SerializedName("copies")
    @Expose
    public Integer copies;

    /**
     * The Color Mode.
     * 
     */
    @SerializedName("colorMode")
    @Expose
    public PrintColorMode colorMode;

    /**
     * The Input Bin.
     * 
     */
    @SerializedName("inputBin")
    @Expose
    public String inputBin;

    /**
     * The Output Bin.
     * 
     */
    @SerializedName("outputBin")
    @Expose
    public String outputBin;

    /**
     * The Media Size.
     * 
     */
    @SerializedName("mediaSize")
    @Expose
    public String mediaSize;

    /**
     * The Margin.
     * 
     */
    @SerializedName("margin")
    @Expose
    public PrintMargin margin;

    /**
     * The Media Type.
     * 
     */
    @SerializedName("mediaType")
    @Expose
    public String mediaType;

    /**
     * The Finishings.
     * 
     */
    @SerializedName("finishings")
    @Expose
    public java.util.List<PrintFinishing> finishings;

    /**
     * The Pages Per Sheet.
     * 
     */
    @SerializedName("pagesPerSheet")
    @Expose
    public Integer pagesPerSheet;

    /**
     * The Multipage Layout.
     * 
     */
    @SerializedName("multipageLayout")
    @Expose
    public PrintMultipageLayout multipageLayout;

    /**
     * The Collate.
     * 
     */
    @SerializedName("collate")
    @Expose
    public Boolean collate;

    /**
     * The Scaling.
     * 
     */
    @SerializedName("scaling")
    @Expose
    public PrintScaling scaling;

    /**
     * The Fit Pdf To Page.
     * 
     */
    @SerializedName("fitPdfToPage")
    @Expose
    public Boolean fitPdfToPage;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
