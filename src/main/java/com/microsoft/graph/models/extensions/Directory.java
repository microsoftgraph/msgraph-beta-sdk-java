// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.AdministrativeUnit;
import com.microsoft.graph.models.extensions.DirectoryObject;
import com.microsoft.graph.models.extensions.SharedEmailDomain;
import com.microsoft.graph.models.extensions.FeatureRolloutPolicy;
import com.microsoft.graph.requests.extensions.AdministrativeUnitCollectionPage;
import com.microsoft.graph.requests.extensions.DirectoryObjectCollectionPage;
import com.microsoft.graph.requests.extensions.SharedEmailDomainCollectionPage;
import com.microsoft.graph.requests.extensions.FeatureRolloutPolicyCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Directory.
 */
public class Directory implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Administrative Units.
     * 
     */
    @SerializedName(value = "administrativeUnits", alternate = {"AdministrativeUnits"})
    @Expose
    public AdministrativeUnitCollectionPage administrativeUnits;

    /**
     * The Deleted Items.
     * 
     */
    @SerializedName(value = "deletedItems", alternate = {"DeletedItems"})
    @Expose
    public DirectoryObjectCollectionPage deletedItems;

    /**
     * The Shared Email Domains.
     * 
     */
    @SerializedName(value = "sharedEmailDomains", alternate = {"SharedEmailDomains"})
    @Expose
    public SharedEmailDomainCollectionPage sharedEmailDomains;

    /**
     * The Feature Rollout Policies.
     * Nullable.
     */
    @SerializedName(value = "featureRolloutPolicies", alternate = {"FeatureRolloutPolicies"})
    @Expose
    public FeatureRolloutPolicyCollectionPage featureRolloutPolicies;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("administrativeUnits")) {
            administrativeUnits = serializer.deserializeObject(json.get("administrativeUnits").toString(), AdministrativeUnitCollectionPage.class);
        }

        if (json.has("deletedItems")) {
            deletedItems = serializer.deserializeObject(json.get("deletedItems").toString(), DirectoryObjectCollectionPage.class);
        }

        if (json.has("sharedEmailDomains")) {
            sharedEmailDomains = serializer.deserializeObject(json.get("sharedEmailDomains").toString(), SharedEmailDomainCollectionPage.class);
        }

        if (json.has("featureRolloutPolicies")) {
            featureRolloutPolicies = serializer.deserializeObject(json.get("featureRolloutPolicies").toString(), FeatureRolloutPolicyCollectionPage.class);
        }
    }
}
