// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.ApplicationGuardBlockClipboardSharingType;
import com.microsoft.graph.models.generated.ApplicationGuardBlockFileTransferType;
import com.microsoft.graph.models.generated.ApplicationGuardEnabledOptions;
import com.microsoft.graph.models.generated.AppLockerApplicationControlType;
import com.microsoft.graph.models.extensions.BitLockerFixedDrivePolicy;
import com.microsoft.graph.models.generated.BitLockerRecoveryPasswordRotationType;
import com.microsoft.graph.models.extensions.BitLockerRemovableDrivePolicy;
import com.microsoft.graph.models.extensions.BitLockerSystemDrivePolicy;
import com.microsoft.graph.models.generated.DefenderProtectionType;
import com.microsoft.graph.models.generated.DefenderCloudBlockLevelType;
import com.microsoft.graph.models.extensions.DefenderDetectedMalwareActions;
import com.microsoft.graph.models.generated.DefenderAttackSurfaceType;
import com.microsoft.graph.models.generated.FolderProtectionType;
import com.microsoft.graph.models.generated.DefenderRealtimeScanDirection;
import com.microsoft.graph.models.generated.DefenderScanType;
import com.microsoft.graph.models.generated.WeeklySchedule;
import com.microsoft.graph.models.generated.DefenderSecurityCenterITContactDisplayType;
import com.microsoft.graph.models.generated.DefenderSecurityCenterNotificationsFromAppType;
import com.microsoft.graph.models.generated.DefenderSubmitSamplesConsentType;
import com.microsoft.graph.models.generated.Enablement;
import com.microsoft.graph.models.generated.DeviceGuardLocalSystemAuthorityCredentialGuardType;
import com.microsoft.graph.models.generated.SecureBootWithDMAType;
import com.microsoft.graph.models.generated.DmaGuardDeviceEnumerationPolicyType;
import com.microsoft.graph.models.generated.FirewallCertificateRevocationListCheckMethodType;
import com.microsoft.graph.models.generated.FirewallPacketQueueingMethodType;
import com.microsoft.graph.models.generated.FirewallPreSharedKeyEncodingMethodType;
import com.microsoft.graph.models.extensions.WindowsFirewallNetworkProfile;
import com.microsoft.graph.models.extensions.WindowsFirewallRule;
import com.microsoft.graph.models.generated.LanManagerAuthenticationLevel;
import com.microsoft.graph.models.generated.LocalSecurityOptionsAdministratorElevationPromptBehaviorType;
import com.microsoft.graph.models.generated.LocalSecurityOptionsFormatAndEjectOfRemovableMediaAllowedUserType;
import com.microsoft.graph.models.generated.LocalSecurityOptionsInformationDisplayedOnLockScreenType;
import com.microsoft.graph.models.generated.LocalSecurityOptionsInformationShownOnLockScreenType;
import com.microsoft.graph.models.generated.LocalSecurityOptionsMinimumSessionSecurity;
import com.microsoft.graph.models.generated.LocalSecurityOptionsSmartCardRemovalBehaviorType;
import com.microsoft.graph.models.generated.LocalSecurityOptionsStandardUserElevationPromptBehaviorType;
import com.microsoft.graph.models.extensions.DeviceManagementUserRightsSetting;
import com.microsoft.graph.models.generated.WindowsDefenderTamperProtectionOptions;
import com.microsoft.graph.models.generated.ServiceStartType;
import com.microsoft.graph.models.extensions.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows10Endpoint Protection Configuration.
 */
public class Windows10EndpointProtectionConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Application Guard Allow File Save On Host.
     * Allow users to download files from Edge in the application guard container and save them on the host file system
     */
    @SerializedName(value = "applicationGuardAllowFileSaveOnHost", alternate = {"ApplicationGuardAllowFileSaveOnHost"})
    @Expose
    public Boolean applicationGuardAllowFileSaveOnHost;

    /**
     * The Application Guard Allow Persistence.
     * Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)
     */
    @SerializedName(value = "applicationGuardAllowPersistence", alternate = {"ApplicationGuardAllowPersistence"})
    @Expose
    public Boolean applicationGuardAllowPersistence;

    /**
     * The Application Guard Allow Print To Local Printers.
     * Allow printing to Local Printers from Container
     */
    @SerializedName(value = "applicationGuardAllowPrintToLocalPrinters", alternate = {"ApplicationGuardAllowPrintToLocalPrinters"})
    @Expose
    public Boolean applicationGuardAllowPrintToLocalPrinters;

    /**
     * The Application Guard Allow Print To Network Printers.
     * Allow printing to Network Printers from Container
     */
    @SerializedName(value = "applicationGuardAllowPrintToNetworkPrinters", alternate = {"ApplicationGuardAllowPrintToNetworkPrinters"})
    @Expose
    public Boolean applicationGuardAllowPrintToNetworkPrinters;

    /**
     * The Application Guard Allow Print To PDF.
     * Allow printing to PDF from Container
     */
    @SerializedName(value = "applicationGuardAllowPrintToPDF", alternate = {"ApplicationGuardAllowPrintToPDF"})
    @Expose
    public Boolean applicationGuardAllowPrintToPDF;

    /**
     * The Application Guard Allow Print To XPS.
     * Allow printing to XPS from Container
     */
    @SerializedName(value = "applicationGuardAllowPrintToXPS", alternate = {"ApplicationGuardAllowPrintToXPS"})
    @Expose
    public Boolean applicationGuardAllowPrintToXPS;

    /**
     * The Application Guard Allow Virtual GPU.
     * Allow application guard to use virtual GPU
     */
    @SerializedName(value = "applicationGuardAllowVirtualGPU", alternate = {"ApplicationGuardAllowVirtualGPU"})
    @Expose
    public Boolean applicationGuardAllowVirtualGPU;

    /**
     * The Application Guard Block Clipboard Sharing.
     * Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways. Possible values are: notConfigured, blockBoth, blockHostToContainer, blockContainerToHost, blockNone.
     */
    @SerializedName(value = "applicationGuardBlockClipboardSharing", alternate = {"ApplicationGuardBlockClipboardSharing"})
    @Expose
    public ApplicationGuardBlockClipboardSharingType applicationGuardBlockClipboardSharing;

    /**
     * The Application Guard Block File Transfer.
     * Block clipboard to transfer image file, text file or neither of them. Possible values are: notConfigured, blockImageAndTextFile, blockImageFile, blockNone, blockTextFile.
     */
    @SerializedName(value = "applicationGuardBlockFileTransfer", alternate = {"ApplicationGuardBlockFileTransfer"})
    @Expose
    public ApplicationGuardBlockFileTransferType applicationGuardBlockFileTransfer;

    /**
     * The Application Guard Block Non Enterprise Content.
     * Block enterprise sites to load non-enterprise content, such as third party plug-ins
     */
    @SerializedName(value = "applicationGuardBlockNonEnterpriseContent", alternate = {"ApplicationGuardBlockNonEnterpriseContent"})
    @Expose
    public Boolean applicationGuardBlockNonEnterpriseContent;

    /**
     * The Application Guard Enabled.
     * Enable Windows Defender Application Guard
     */
    @SerializedName(value = "applicationGuardEnabled", alternate = {"ApplicationGuardEnabled"})
    @Expose
    public Boolean applicationGuardEnabled;

    /**
     * The Application Guard Enabled Options.
     * Enable Windows Defender Application Guard for newer Windows builds
     */
    @SerializedName(value = "applicationGuardEnabledOptions", alternate = {"ApplicationGuardEnabledOptions"})
    @Expose
    public ApplicationGuardEnabledOptions applicationGuardEnabledOptions;

    /**
     * The Application Guard Force Auditing.
     * Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)
     */
    @SerializedName(value = "applicationGuardForceAuditing", alternate = {"ApplicationGuardForceAuditing"})
    @Expose
    public Boolean applicationGuardForceAuditing;

    /**
     * The App Locker Application Control.
     * Enables the Admin to choose what types of app to allow on devices. Possible values are: notConfigured, enforceComponentsAndStoreApps, auditComponentsAndStoreApps, enforceComponentsStoreAppsAndSmartlocker, auditComponentsStoreAppsAndSmartlocker.
     */
    @SerializedName(value = "appLockerApplicationControl", alternate = {"AppLockerApplicationControl"})
    @Expose
    public AppLockerApplicationControlType appLockerApplicationControl;

    /**
     * The Bit Locker Allow Standard User Encryption.
     * Allows the admin to allow standard users to enable encrpytion during Azure AD Join.
     */
    @SerializedName(value = "bitLockerAllowStandardUserEncryption", alternate = {"BitLockerAllowStandardUserEncryption"})
    @Expose
    public Boolean bitLockerAllowStandardUserEncryption;

    /**
     * The Bit Locker Disable Warning For Other Disk Encryption.
     * Allows the Admin to disable the warning prompt for other disk encryption on the user machines.
     */
    @SerializedName(value = "bitLockerDisableWarningForOtherDiskEncryption", alternate = {"BitLockerDisableWarningForOtherDiskEncryption"})
    @Expose
    public Boolean bitLockerDisableWarningForOtherDiskEncryption;

    /**
     * The Bit Locker Enable Storage Card Encryption On Mobile.
     * Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.
     */
    @SerializedName(value = "bitLockerEnableStorageCardEncryptionOnMobile", alternate = {"BitLockerEnableStorageCardEncryptionOnMobile"})
    @Expose
    public Boolean bitLockerEnableStorageCardEncryptionOnMobile;

    /**
     * The Bit Locker Encrypt Device.
     * Allows the admin to require encryption to be turned on using BitLocker.
     */
    @SerializedName(value = "bitLockerEncryptDevice", alternate = {"BitLockerEncryptDevice"})
    @Expose
    public Boolean bitLockerEncryptDevice;

    /**
     * The Bit Locker Fixed Drive Policy.
     * BitLocker Fixed Drive Policy.
     */
    @SerializedName(value = "bitLockerFixedDrivePolicy", alternate = {"BitLockerFixedDrivePolicy"})
    @Expose
    public BitLockerFixedDrivePolicy bitLockerFixedDrivePolicy;

    /**
     * The Bit Locker Recovery Password Rotation.
     * This setting initiates a client-driven recovery password rotation after an OS drive recovery (either by using bootmgr or WinRE).
     */
    @SerializedName(value = "bitLockerRecoveryPasswordRotation", alternate = {"BitLockerRecoveryPasswordRotation"})
    @Expose
    public BitLockerRecoveryPasswordRotationType bitLockerRecoveryPasswordRotation;

    /**
     * The Bit Locker Removable Drive Policy.
     * BitLocker Removable Drive Policy.
     */
    @SerializedName(value = "bitLockerRemovableDrivePolicy", alternate = {"BitLockerRemovableDrivePolicy"})
    @Expose
    public BitLockerRemovableDrivePolicy bitLockerRemovableDrivePolicy;

    /**
     * The Bit Locker System Drive Policy.
     * BitLocker System Drive Policy.
     */
    @SerializedName(value = "bitLockerSystemDrivePolicy", alternate = {"BitLockerSystemDrivePolicy"})
    @Expose
    public BitLockerSystemDrivePolicy bitLockerSystemDrivePolicy;

    /**
     * The Defender Additional Guarded Folders.
     * List of folder paths to be added to the list of protected folders
     */
    @SerializedName(value = "defenderAdditionalGuardedFolders", alternate = {"DefenderAdditionalGuardedFolders"})
    @Expose
    public java.util.List<String> defenderAdditionalGuardedFolders;

    /**
     * The Defender Adobe Reader Launch Child Process.
     * Value indicating the behavior of Adobe Reader from creating child processes
     */
    @SerializedName(value = "defenderAdobeReaderLaunchChildProcess", alternate = {"DefenderAdobeReaderLaunchChildProcess"})
    @Expose
    public DefenderProtectionType defenderAdobeReaderLaunchChildProcess;

    /**
     * The Defender Advanced Ransomeware Protection Type.
     * Value indicating use of advanced protection against ransomeware
     */
    @SerializedName(value = "defenderAdvancedRansomewareProtectionType", alternate = {"DefenderAdvancedRansomewareProtectionType"})
    @Expose
    public DefenderProtectionType defenderAdvancedRansomewareProtectionType;

    /**
     * The Defender Allow Behavior Monitoring.
     * Allows or disallows Windows Defender Behavior Monitoring functionality.
     */
    @SerializedName(value = "defenderAllowBehaviorMonitoring", alternate = {"DefenderAllowBehaviorMonitoring"})
    @Expose
    public Boolean defenderAllowBehaviorMonitoring;

    /**
     * The Defender Allow Cloud Protection.
     * To best protect your PC, Windows Defender will send information to Microsoft about any problems it finds. Microsoft will analyze that information, learn more about problems affecting you and other customers, and offer improved solutions.
     */
    @SerializedName(value = "defenderAllowCloudProtection", alternate = {"DefenderAllowCloudProtection"})
    @Expose
    public Boolean defenderAllowCloudProtection;

    /**
     * The Defender Allow End User Access.
     * Allows or disallows user access to the Windows Defender UI. If disallowed, all Windows Defender notifications will also be suppressed.
     */
    @SerializedName(value = "defenderAllowEndUserAccess", alternate = {"DefenderAllowEndUserAccess"})
    @Expose
    public Boolean defenderAllowEndUserAccess;

    /**
     * The Defender Allow Intrusion Prevention System.
     * Allows or disallows Windows Defender Intrusion Prevention functionality.
     */
    @SerializedName(value = "defenderAllowIntrusionPreventionSystem", alternate = {"DefenderAllowIntrusionPreventionSystem"})
    @Expose
    public Boolean defenderAllowIntrusionPreventionSystem;

    /**
     * The Defender Allow On Access Protection.
     * Allows or disallows Windows Defender On Access Protection functionality.
     */
    @SerializedName(value = "defenderAllowOnAccessProtection", alternate = {"DefenderAllowOnAccessProtection"})
    @Expose
    public Boolean defenderAllowOnAccessProtection;

    /**
     * The Defender Allow Real Time Monitoring.
     * Allows or disallows Windows Defender Realtime Monitoring functionality.
     */
    @SerializedName(value = "defenderAllowRealTimeMonitoring", alternate = {"DefenderAllowRealTimeMonitoring"})
    @Expose
    public Boolean defenderAllowRealTimeMonitoring;

    /**
     * The Defender Allow Scan Archive Files.
     * Allows or disallows scanning of archives.
     */
    @SerializedName(value = "defenderAllowScanArchiveFiles", alternate = {"DefenderAllowScanArchiveFiles"})
    @Expose
    public Boolean defenderAllowScanArchiveFiles;

    /**
     * The Defender Allow Scan Downloads.
     * Allows or disallows Windows Defender IOAVP Protection functionality.
     */
    @SerializedName(value = "defenderAllowScanDownloads", alternate = {"DefenderAllowScanDownloads"})
    @Expose
    public Boolean defenderAllowScanDownloads;

    /**
     * The Defender Allow Scan Network Files.
     * Allows or disallows a scanning of network files.
     */
    @SerializedName(value = "defenderAllowScanNetworkFiles", alternate = {"DefenderAllowScanNetworkFiles"})
    @Expose
    public Boolean defenderAllowScanNetworkFiles;

    /**
     * The Defender Allow Scan Removable Drives During Full Scan.
     * Allows or disallows a full scan of removable drives. During a quick scan, removable drives may still be scanned.
     */
    @SerializedName(value = "defenderAllowScanRemovableDrivesDuringFullScan", alternate = {"DefenderAllowScanRemovableDrivesDuringFullScan"})
    @Expose
    public Boolean defenderAllowScanRemovableDrivesDuringFullScan;

    /**
     * The Defender Allow Scan Scripts Loaded In Internet Explorer.
     * Allows or disallows Windows Defender Script Scanning functionality.
     */
    @SerializedName(value = "defenderAllowScanScriptsLoadedInInternetExplorer", alternate = {"DefenderAllowScanScriptsLoadedInInternetExplorer"})
    @Expose
    public Boolean defenderAllowScanScriptsLoadedInInternetExplorer;

    /**
     * The Defender Attack Surface Reduction Excluded Paths.
     * List of exe files and folders to be excluded from attack surface reduction rules
     */
    @SerializedName(value = "defenderAttackSurfaceReductionExcludedPaths", alternate = {"DefenderAttackSurfaceReductionExcludedPaths"})
    @Expose
    public java.util.List<String> defenderAttackSurfaceReductionExcludedPaths;

    /**
     * The Defender Block End User Access.
     * Allows or disallows user access to the Windows Defender UI. If disallowed, all Windows Defender notifications will also be suppressed.
     */
    @SerializedName(value = "defenderBlockEndUserAccess", alternate = {"DefenderBlockEndUserAccess"})
    @Expose
    public Boolean defenderBlockEndUserAccess;

    /**
     * The Defender Check For Signatures Before Running Scan.
     * This policy setting allows you to manage whether a check for new virus and spyware definitions will occur before running a scan.
     */
    @SerializedName(value = "defenderCheckForSignaturesBeforeRunningScan", alternate = {"DefenderCheckForSignaturesBeforeRunningScan"})
    @Expose
    public Boolean defenderCheckForSignaturesBeforeRunningScan;

    /**
     * The Defender Cloud Block Level.
     * Added in Windows 10, version 1709. This policy setting determines how aggressive Windows Defender Antivirus will be in blocking and scanning suspicious files. Value type is integer. This feature requires the "Join Microsoft MAPS" setting enabled in order to function.
     */
    @SerializedName(value = "defenderCloudBlockLevel", alternate = {"DefenderCloudBlockLevel"})
    @Expose
    public DefenderCloudBlockLevelType defenderCloudBlockLevel;

    /**
     * The Defender Cloud Extended Timeout In Seconds.
     * Added in Windows 10, version 1709. This feature allows Windows Defender Antivirus to block a suspicious file for up to 60 seconds, and scan it in the cloud to make sure it's safe. Value type is integer, range is 0 - 50. This feature depends on three other MAPS settings the must all be enabled- "Configure the 'Block at First Sight' feature; "Join Microsoft MAPS"; "Send file samples when further analysis is required". Valid values 0 to 50
     */
    @SerializedName(value = "defenderCloudExtendedTimeoutInSeconds", alternate = {"DefenderCloudExtendedTimeoutInSeconds"})
    @Expose
    public Integer defenderCloudExtendedTimeoutInSeconds;

    /**
     * The Defender Days Before Deleting Quarantined Malware.
     * Time period (in days) that quarantine items will be stored on the system. Valid values 0 to 90
     */
    @SerializedName(value = "defenderDaysBeforeDeletingQuarantinedMalware", alternate = {"DefenderDaysBeforeDeletingQuarantinedMalware"})
    @Expose
    public Integer defenderDaysBeforeDeletingQuarantinedMalware;

    /**
     * The Defender Detected Malware Actions.
     * Allows an administrator to specify any valid threat severity levels and the corresponding default action ID to take.
     */
    @SerializedName(value = "defenderDetectedMalwareActions", alternate = {"DefenderDetectedMalwareActions"})
    @Expose
    public DefenderDetectedMalwareActions defenderDetectedMalwareActions;

    /**
     * The Defender Disable Behavior Monitoring.
     * Allows or disallows Windows Defender Behavior Monitoring functionality.
     */
    @SerializedName(value = "defenderDisableBehaviorMonitoring", alternate = {"DefenderDisableBehaviorMonitoring"})
    @Expose
    public Boolean defenderDisableBehaviorMonitoring;

    /**
     * The Defender Disable Catchup Full Scan.
     * This policy setting allows you to configure catch-up scans for scheduled full scans. A catch-up scan is a scan that is initiated because a regularly scheduled scan was missed. Usually these scheduled scans are missed because the computer was turned off at the scheduled time.
     */
    @SerializedName(value = "defenderDisableCatchupFullScan", alternate = {"DefenderDisableCatchupFullScan"})
    @Expose
    public Boolean defenderDisableCatchupFullScan;

    /**
     * The Defender Disable Catchup Quick Scan.
     * This policy setting allows you to configure catch-up scans for scheduled quick scans. A catch-up scan is a scan that is initiated because a regularly scheduled scan was missed. Usually these scheduled scans are missed because the computer was turned off at the scheduled time.
     */
    @SerializedName(value = "defenderDisableCatchupQuickScan", alternate = {"DefenderDisableCatchupQuickScan"})
    @Expose
    public Boolean defenderDisableCatchupQuickScan;

    /**
     * The Defender Disable Cloud Protection.
     * To best protect your PC, Windows Defender will send information to Microsoft about any problems it finds. Microsoft will analyze that information, learn more about problems affecting you and other customers, and offer improved solutions.
     */
    @SerializedName(value = "defenderDisableCloudProtection", alternate = {"DefenderDisableCloudProtection"})
    @Expose
    public Boolean defenderDisableCloudProtection;

    /**
     * The Defender Disable Intrusion Prevention System.
     * Allows or disallows Windows Defender Intrusion Prevention functionality.
     */
    @SerializedName(value = "defenderDisableIntrusionPreventionSystem", alternate = {"DefenderDisableIntrusionPreventionSystem"})
    @Expose
    public Boolean defenderDisableIntrusionPreventionSystem;

    /**
     * The Defender Disable On Access Protection.
     * Allows or disallows Windows Defender On Access Protection functionality.
     */
    @SerializedName(value = "defenderDisableOnAccessProtection", alternate = {"DefenderDisableOnAccessProtection"})
    @Expose
    public Boolean defenderDisableOnAccessProtection;

    /**
     * The Defender Disable Real Time Monitoring.
     * Allows or disallows Windows Defender Realtime Monitoring functionality.
     */
    @SerializedName(value = "defenderDisableRealTimeMonitoring", alternate = {"DefenderDisableRealTimeMonitoring"})
    @Expose
    public Boolean defenderDisableRealTimeMonitoring;

    /**
     * The Defender Disable Scan Archive Files.
     * Allows or disallows scanning of archives.
     */
    @SerializedName(value = "defenderDisableScanArchiveFiles", alternate = {"DefenderDisableScanArchiveFiles"})
    @Expose
    public Boolean defenderDisableScanArchiveFiles;

    /**
     * The Defender Disable Scan Downloads.
     * Allows or disallows Windows Defender IOAVP Protection functionality.
     */
    @SerializedName(value = "defenderDisableScanDownloads", alternate = {"DefenderDisableScanDownloads"})
    @Expose
    public Boolean defenderDisableScanDownloads;

    /**
     * The Defender Disable Scan Network Files.
     * Allows or disallows a scanning of network files.
     */
    @SerializedName(value = "defenderDisableScanNetworkFiles", alternate = {"DefenderDisableScanNetworkFiles"})
    @Expose
    public Boolean defenderDisableScanNetworkFiles;

    /**
     * The Defender Disable Scan Removable Drives During Full Scan.
     * Allows or disallows a full scan of removable drives. During a quick scan, removable drives may still be scanned.
     */
    @SerializedName(value = "defenderDisableScanRemovableDrivesDuringFullScan", alternate = {"DefenderDisableScanRemovableDrivesDuringFullScan"})
    @Expose
    public Boolean defenderDisableScanRemovableDrivesDuringFullScan;

    /**
     * The Defender Disable Scan Scripts Loaded In Internet Explorer.
     * Allows or disallows Windows Defender Script Scanning functionality.
     */
    @SerializedName(value = "defenderDisableScanScriptsLoadedInInternetExplorer", alternate = {"DefenderDisableScanScriptsLoadedInInternetExplorer"})
    @Expose
    public Boolean defenderDisableScanScriptsLoadedInInternetExplorer;

    /**
     * The Defender Email Content Execution.
     * Value indicating if execution of executable content (exe, dll, ps, js, vbs, etc) should be dropped from email (webmail/mail-client)
     */
    @SerializedName(value = "defenderEmailContentExecution", alternate = {"DefenderEmailContentExecution"})
    @Expose
    public DefenderProtectionType defenderEmailContentExecution;

    /**
     * The Defender Email Content Execution Type.
     * Value indicating if execution of executable content (exe, dll, ps, js, vbs, etc) should be dropped from email (webmail/mail-client)
     */
    @SerializedName(value = "defenderEmailContentExecutionType", alternate = {"DefenderEmailContentExecutionType"})
    @Expose
    public DefenderAttackSurfaceType defenderEmailContentExecutionType;

    /**
     * The Defender Enable Low Cpu Priority.
     * This policy setting allows you to enable or disable low CPU priority for scheduled scans.
     */
    @SerializedName(value = "defenderEnableLowCpuPriority", alternate = {"DefenderEnableLowCpuPriority"})
    @Expose
    public Boolean defenderEnableLowCpuPriority;

    /**
     * The Defender Enable Scan Incoming Mail.
     * Allows or disallows scanning of email.
     */
    @SerializedName(value = "defenderEnableScanIncomingMail", alternate = {"DefenderEnableScanIncomingMail"})
    @Expose
    public Boolean defenderEnableScanIncomingMail;

    /**
     * The Defender Enable Scan Mapped Network Drives During Full Scan.
     * Allows or disallows a full scan of mapped network drives.
     */
    @SerializedName(value = "defenderEnableScanMappedNetworkDrivesDuringFullScan", alternate = {"DefenderEnableScanMappedNetworkDrivesDuringFullScan"})
    @Expose
    public Boolean defenderEnableScanMappedNetworkDrivesDuringFullScan;

    /**
     * The Defender Exploit Protection Xml.
     * Xml content containing information regarding exploit protection details.
     */
    @SerializedName(value = "defenderExploitProtectionXml", alternate = {"DefenderExploitProtectionXml"})
    @Expose
    public byte[] defenderExploitProtectionXml;

    /**
     * The Defender Exploit Protection Xml File Name.
     * Name of the file from which DefenderExploitProtectionXml was obtained.
     */
    @SerializedName(value = "defenderExploitProtectionXmlFileName", alternate = {"DefenderExploitProtectionXmlFileName"})
    @Expose
    public String defenderExploitProtectionXmlFileName;

    /**
     * The Defender File Extensions To Exclude.
     * File extensions to exclude from scans and real time protection.
     */
    @SerializedName(value = "defenderFileExtensionsToExclude", alternate = {"DefenderFileExtensionsToExclude"})
    @Expose
    public java.util.List<String> defenderFileExtensionsToExclude;

    /**
     * The Defender Files And Folders To Exclude.
     * Files and folder to exclude from scans and real time protection.
     */
    @SerializedName(value = "defenderFilesAndFoldersToExclude", alternate = {"DefenderFilesAndFoldersToExclude"})
    @Expose
    public java.util.List<String> defenderFilesAndFoldersToExclude;

    /**
     * The Defender Guarded Folders Allowed App Paths.
     * List of paths to exe that are allowed to access protected folders
     */
    @SerializedName(value = "defenderGuardedFoldersAllowedAppPaths", alternate = {"DefenderGuardedFoldersAllowedAppPaths"})
    @Expose
    public java.util.List<String> defenderGuardedFoldersAllowedAppPaths;

    /**
     * The Defender Guard My Folders Type.
     * Value indicating the behavior of protected folders
     */
    @SerializedName(value = "defenderGuardMyFoldersType", alternate = {"DefenderGuardMyFoldersType"})
    @Expose
    public FolderProtectionType defenderGuardMyFoldersType;

    /**
     * The Defender Network Protection Type.
     * Value indicating the behavior of NetworkProtection
     */
    @SerializedName(value = "defenderNetworkProtectionType", alternate = {"DefenderNetworkProtectionType"})
    @Expose
    public DefenderProtectionType defenderNetworkProtectionType;

    /**
     * The Defender Office Apps Executable Content Creation Or Launch.
     * Value indicating the behavior of Office applications/macros creating or launching executable content
     */
    @SerializedName(value = "defenderOfficeAppsExecutableContentCreationOrLaunch", alternate = {"DefenderOfficeAppsExecutableContentCreationOrLaunch"})
    @Expose
    public DefenderProtectionType defenderOfficeAppsExecutableContentCreationOrLaunch;

    /**
     * The Defender Office Apps Executable Content Creation Or Launch Type.
     * Value indicating the behavior of Office applications/macros creating or launching executable content
     */
    @SerializedName(value = "defenderOfficeAppsExecutableContentCreationOrLaunchType", alternate = {"DefenderOfficeAppsExecutableContentCreationOrLaunchType"})
    @Expose
    public DefenderAttackSurfaceType defenderOfficeAppsExecutableContentCreationOrLaunchType;

    /**
     * The Defender Office Apps Launch Child Process.
     * Value indicating the behavior of Office application launching child processes
     */
    @SerializedName(value = "defenderOfficeAppsLaunchChildProcess", alternate = {"DefenderOfficeAppsLaunchChildProcess"})
    @Expose
    public DefenderProtectionType defenderOfficeAppsLaunchChildProcess;

    /**
     * The Defender Office Apps Launch Child Process Type.
     * Value indicating the behavior of Office application launching child processes
     */
    @SerializedName(value = "defenderOfficeAppsLaunchChildProcessType", alternate = {"DefenderOfficeAppsLaunchChildProcessType"})
    @Expose
    public DefenderAttackSurfaceType defenderOfficeAppsLaunchChildProcessType;

    /**
     * The Defender Office Apps Other Process Injection.
     * Value indicating the behavior of  Office applications injecting into other processes
     */
    @SerializedName(value = "defenderOfficeAppsOtherProcessInjection", alternate = {"DefenderOfficeAppsOtherProcessInjection"})
    @Expose
    public DefenderProtectionType defenderOfficeAppsOtherProcessInjection;

    /**
     * The Defender Office Apps Other Process Injection Type.
     * Value indicating the behavior of Office applications injecting into other processes
     */
    @SerializedName(value = "defenderOfficeAppsOtherProcessInjectionType", alternate = {"DefenderOfficeAppsOtherProcessInjectionType"})
    @Expose
    public DefenderAttackSurfaceType defenderOfficeAppsOtherProcessInjectionType;

    /**
     * The Defender Office Communication Apps Launch Child Process.
     * Value indicating the behavior of Office communication applications, including Microsoft Outlook, from creating child processes
     */
    @SerializedName(value = "defenderOfficeCommunicationAppsLaunchChildProcess", alternate = {"DefenderOfficeCommunicationAppsLaunchChildProcess"})
    @Expose
    public DefenderProtectionType defenderOfficeCommunicationAppsLaunchChildProcess;

    /**
     * The Defender Office Macro Code Allow Win32Imports.
     * Value indicating the behavior of Win32 imports from Macro code in Office
     */
    @SerializedName(value = "defenderOfficeMacroCodeAllowWin32Imports", alternate = {"DefenderOfficeMacroCodeAllowWin32Imports"})
    @Expose
    public DefenderProtectionType defenderOfficeMacroCodeAllowWin32Imports;

    /**
     * The Defender Office Macro Code Allow Win32Imports Type.
     * Value indicating the behavior of Win32 imports from Macro code in Office
     */
    @SerializedName(value = "defenderOfficeMacroCodeAllowWin32ImportsType", alternate = {"DefenderOfficeMacroCodeAllowWin32ImportsType"})
    @Expose
    public DefenderAttackSurfaceType defenderOfficeMacroCodeAllowWin32ImportsType;

    /**
     * The Defender Potentially Unwanted App Action.
     * Added in Windows 10, version 1607. Specifies the level of detection for potentially unwanted applications (PUAs). Windows Defender alerts you when potentially unwanted software is being downloaded or attempts to install itself on your computer.
     */
    @SerializedName(value = "defenderPotentiallyUnwantedAppAction", alternate = {"DefenderPotentiallyUnwantedAppAction"})
    @Expose
    public DefenderProtectionType defenderPotentiallyUnwantedAppAction;

    /**
     * The Defender Prevent Credential Stealing Type.
     * Value indicating if credential stealing from the Windows local security authority subsystem is permitted
     */
    @SerializedName(value = "defenderPreventCredentialStealingType", alternate = {"DefenderPreventCredentialStealingType"})
    @Expose
    public DefenderProtectionType defenderPreventCredentialStealingType;

    /**
     * The Defender Process Creation.
     * Value indicating response to process creations originating from PSExec and WMI commands
     */
    @SerializedName(value = "defenderProcessCreation", alternate = {"DefenderProcessCreation"})
    @Expose
    public DefenderProtectionType defenderProcessCreation;

    /**
     * The Defender Process Creation Type.
     * Value indicating response to process creations originating from PSExec and WMI commands
     */
    @SerializedName(value = "defenderProcessCreationType", alternate = {"DefenderProcessCreationType"})
    @Expose
    public DefenderAttackSurfaceType defenderProcessCreationType;

    /**
     * The Defender Processes To Exclude.
     * Processes to exclude from scans and real time protection.
     */
    @SerializedName(value = "defenderProcessesToExclude", alternate = {"DefenderProcessesToExclude"})
    @Expose
    public java.util.List<String> defenderProcessesToExclude;

    /**
     * The Defender Scan Direction.
     * Controls which sets of files should be monitored.
     */
    @SerializedName(value = "defenderScanDirection", alternate = {"DefenderScanDirection"})
    @Expose
    public DefenderRealtimeScanDirection defenderScanDirection;

    /**
     * The Defender Scan Max Cpu Percentage.
     * Represents the average CPU load factor for the Windows Defender scan (in percent). The default value is 50. Valid values 0 to 100
     */
    @SerializedName(value = "defenderScanMaxCpuPercentage", alternate = {"DefenderScanMaxCpuPercentage"})
    @Expose
    public Integer defenderScanMaxCpuPercentage;

    /**
     * The Defender Scan Type.
     * Selects whether to perform a quick scan or full scan.
     */
    @SerializedName(value = "defenderScanType", alternate = {"DefenderScanType"})
    @Expose
    public DefenderScanType defenderScanType;

    /**
     * The Defender Scheduled Quick Scan Time.
     * Selects the time of day that the Windows Defender quick scan should run. For example, a value of 0=12:00AM, a value of 60=1:00AM, a value of 120=2:00, and so on, up to a value of 1380=11:00PM. The default value is 120
     */
    @SerializedName(value = "defenderScheduledQuickScanTime", alternate = {"DefenderScheduledQuickScanTime"})
    @Expose
    public com.microsoft.graph.models.extensions.TimeOfDay defenderScheduledQuickScanTime;

    /**
     * The Defender Scheduled Scan Day.
     * Selects the day that the Windows Defender scan should run.
     */
    @SerializedName(value = "defenderScheduledScanDay", alternate = {"DefenderScheduledScanDay"})
    @Expose
    public WeeklySchedule defenderScheduledScanDay;

    /**
     * The Defender Scheduled Scan Time.
     * Selects the time of day that the Windows Defender scan should run.
     */
    @SerializedName(value = "defenderScheduledScanTime", alternate = {"DefenderScheduledScanTime"})
    @Expose
    public com.microsoft.graph.models.extensions.TimeOfDay defenderScheduledScanTime;

    /**
     * The Defender Script Downloaded Payload Execution.
     * Value indicating the behavior of js/vbs executing payload downloaded from Internet
     */
    @SerializedName(value = "defenderScriptDownloadedPayloadExecution", alternate = {"DefenderScriptDownloadedPayloadExecution"})
    @Expose
    public DefenderProtectionType defenderScriptDownloadedPayloadExecution;

    /**
     * The Defender Script Downloaded Payload Execution Type.
     * Value indicating the behavior of js/vbs executing payload downloaded from Internet
     */
    @SerializedName(value = "defenderScriptDownloadedPayloadExecutionType", alternate = {"DefenderScriptDownloadedPayloadExecutionType"})
    @Expose
    public DefenderAttackSurfaceType defenderScriptDownloadedPayloadExecutionType;

    /**
     * The Defender Script Obfuscated Macro Code.
     * Value indicating the behavior of obfuscated js/vbs/ps/macro code
     */
    @SerializedName(value = "defenderScriptObfuscatedMacroCode", alternate = {"DefenderScriptObfuscatedMacroCode"})
    @Expose
    public DefenderProtectionType defenderScriptObfuscatedMacroCode;

    /**
     * The Defender Script Obfuscated Macro Code Type.
     * Value indicating the behavior of obfuscated js/vbs/ps/macro code
     */
    @SerializedName(value = "defenderScriptObfuscatedMacroCodeType", alternate = {"DefenderScriptObfuscatedMacroCodeType"})
    @Expose
    public DefenderAttackSurfaceType defenderScriptObfuscatedMacroCodeType;

    /**
     * The Defender Security Center Block Exploit Protection Override.
     * Indicates whether or not to block user from overriding Exploit Protection settings.
     */
    @SerializedName(value = "defenderSecurityCenterBlockExploitProtectionOverride", alternate = {"DefenderSecurityCenterBlockExploitProtectionOverride"})
    @Expose
    public Boolean defenderSecurityCenterBlockExploitProtectionOverride;

    /**
     * The Defender Security Center Disable Account UI.
     * Used to disable the display of the account protection area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableAccountUI", alternate = {"DefenderSecurityCenterDisableAccountUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableAccountUI;

    /**
     * The Defender Security Center Disable App Browser UI.
     * Used to disable the display of the app and browser protection area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableAppBrowserUI", alternate = {"DefenderSecurityCenterDisableAppBrowserUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableAppBrowserUI;

    /**
     * The Defender Security Center Disable Clear Tpm UI.
     * Used to disable the display of the Clear TPM button.
     */
    @SerializedName(value = "defenderSecurityCenterDisableClearTpmUI", alternate = {"DefenderSecurityCenterDisableClearTpmUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableClearTpmUI;

    /**
     * The Defender Security Center Disable Family UI.
     * Used to disable the display of the family options area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableFamilyUI", alternate = {"DefenderSecurityCenterDisableFamilyUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableFamilyUI;

    /**
     * The Defender Security Center Disable Hardware UI.
     * Used to disable the display of the hardware protection area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableHardwareUI", alternate = {"DefenderSecurityCenterDisableHardwareUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableHardwareUI;

    /**
     * The Defender Security Center Disable Health UI.
     * Used to disable the display of the device performance and health area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableHealthUI", alternate = {"DefenderSecurityCenterDisableHealthUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableHealthUI;

    /**
     * The Defender Security Center Disable Network UI.
     * Used to disable the display of the firewall and network protection area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableNetworkUI", alternate = {"DefenderSecurityCenterDisableNetworkUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableNetworkUI;

    /**
     * The Defender Security Center Disable Notification Area UI.
     * Used to disable the display of the notification area control. The user needs to either sign out and sign in or reboot the computer for this setting to take effect.
     */
    @SerializedName(value = "defenderSecurityCenterDisableNotificationAreaUI", alternate = {"DefenderSecurityCenterDisableNotificationAreaUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableNotificationAreaUI;

    /**
     * The Defender Security Center Disable Ransomware UI.
     * Used to disable the display of the ransomware protection area. 
     */
    @SerializedName(value = "defenderSecurityCenterDisableRansomwareUI", alternate = {"DefenderSecurityCenterDisableRansomwareUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableRansomwareUI;

    /**
     * The Defender Security Center Disable Secure Boot UI.
     * Used to disable the display of the secure boot area under Device security.
     */
    @SerializedName(value = "defenderSecurityCenterDisableSecureBootUI", alternate = {"DefenderSecurityCenterDisableSecureBootUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableSecureBootUI;

    /**
     * The Defender Security Center Disable Troubleshooting UI.
     * Used to disable the display of the security process troubleshooting under Device security.
     */
    @SerializedName(value = "defenderSecurityCenterDisableTroubleshootingUI", alternate = {"DefenderSecurityCenterDisableTroubleshootingUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableTroubleshootingUI;

    /**
     * The Defender Security Center Disable Virus UI.
     * Used to disable the display of the virus and threat protection area.
     */
    @SerializedName(value = "defenderSecurityCenterDisableVirusUI", alternate = {"DefenderSecurityCenterDisableVirusUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableVirusUI;

    /**
     * The Defender Security Center Disable Vulnerable Tpm Firmware Update UI.
     * Used to disable the display of update TPM Firmware when a vulnerable firmware is detected.
     */
    @SerializedName(value = "defenderSecurityCenterDisableVulnerableTpmFirmwareUpdateUI", alternate = {"DefenderSecurityCenterDisableVulnerableTpmFirmwareUpdateUI"})
    @Expose
    public Boolean defenderSecurityCenterDisableVulnerableTpmFirmwareUpdateUI;

    /**
     * The Defender Security Center Help Email.
     * The email address that is displayed to users.
     */
    @SerializedName(value = "defenderSecurityCenterHelpEmail", alternate = {"DefenderSecurityCenterHelpEmail"})
    @Expose
    public String defenderSecurityCenterHelpEmail;

    /**
     * The Defender Security Center Help Phone.
     * The phone number or Skype ID that is displayed to users.
     */
    @SerializedName(value = "defenderSecurityCenterHelpPhone", alternate = {"DefenderSecurityCenterHelpPhone"})
    @Expose
    public String defenderSecurityCenterHelpPhone;

    /**
     * The Defender Security Center Help URL.
     * The help portal URL this is displayed to users.
     */
    @SerializedName(value = "defenderSecurityCenterHelpURL", alternate = {"DefenderSecurityCenterHelpURL"})
    @Expose
    public String defenderSecurityCenterHelpURL;

    /**
     * The Defender Security Center ITContact Display.
     * Configure where to display IT contact information to end users.
     */
    @SerializedName(value = "defenderSecurityCenterITContactDisplay", alternate = {"DefenderSecurityCenterITContactDisplay"})
    @Expose
    public DefenderSecurityCenterITContactDisplayType defenderSecurityCenterITContactDisplay;

    /**
     * The Defender Security Center Notifications From App.
     * Notifications to show from the displayed areas of app
     */
    @SerializedName(value = "defenderSecurityCenterNotificationsFromApp", alternate = {"DefenderSecurityCenterNotificationsFromApp"})
    @Expose
    public DefenderSecurityCenterNotificationsFromAppType defenderSecurityCenterNotificationsFromApp;

    /**
     * The Defender Security Center Organization Display Name.
     * The company name that is displayed to the users.
     */
    @SerializedName(value = "defenderSecurityCenterOrganizationDisplayName", alternate = {"DefenderSecurityCenterOrganizationDisplayName"})
    @Expose
    public String defenderSecurityCenterOrganizationDisplayName;

    /**
     * The Defender Signature Update Interval In Hours.
     * Specifies the interval (in hours) that will be used to check for signatures, so instead of using the ScheduleDay and ScheduleTime the check for new signatures will be set according to the interval. Valid values 0 to 24
     */
    @SerializedName(value = "defenderSignatureUpdateIntervalInHours", alternate = {"DefenderSignatureUpdateIntervalInHours"})
    @Expose
    public Integer defenderSignatureUpdateIntervalInHours;

    /**
     * The Defender Submit Samples Consent Type.
     * Checks for the user consent level in Windows Defender to send data.
     */
    @SerializedName(value = "defenderSubmitSamplesConsentType", alternate = {"DefenderSubmitSamplesConsentType"})
    @Expose
    public DefenderSubmitSamplesConsentType defenderSubmitSamplesConsentType;

    /**
     * The Defender Untrusted Executable.
     * Value indicating response to executables that don't meet a prevalence, age, or trusted list criteria
     */
    @SerializedName(value = "defenderUntrustedExecutable", alternate = {"DefenderUntrustedExecutable"})
    @Expose
    public DefenderProtectionType defenderUntrustedExecutable;

    /**
     * The Defender Untrusted Executable Type.
     * Value indicating response to executables that don't meet a prevalence, age, or trusted list criteria
     */
    @SerializedName(value = "defenderUntrustedExecutableType", alternate = {"DefenderUntrustedExecutableType"})
    @Expose
    public DefenderAttackSurfaceType defenderUntrustedExecutableType;

    /**
     * The Defender Untrusted USBProcess.
     * Value indicating response to untrusted and unsigned processes that run from USB
     */
    @SerializedName(value = "defenderUntrustedUSBProcess", alternate = {"DefenderUntrustedUSBProcess"})
    @Expose
    public DefenderProtectionType defenderUntrustedUSBProcess;

    /**
     * The Defender Untrusted USBProcess Type.
     * Value indicating response to untrusted and unsigned processes that run from USB
     */
    @SerializedName(value = "defenderUntrustedUSBProcessType", alternate = {"DefenderUntrustedUSBProcessType"})
    @Expose
    public DefenderAttackSurfaceType defenderUntrustedUSBProcessType;

    /**
     * The Device Guard Enable Secure Boot With DMA.
     * This property will be deprecated in May 2019 and will be replaced with property DeviceGuardSecureBootWithDMA. Specifies whether Platform Security Level is enabled at next reboot.
     */
    @SerializedName(value = "deviceGuardEnableSecureBootWithDMA", alternate = {"DeviceGuardEnableSecureBootWithDMA"})
    @Expose
    public Boolean deviceGuardEnableSecureBootWithDMA;

    /**
     * The Device Guard Enable Virtualization Based Security.
     * Turns On Virtualization Based Security(VBS).
     */
    @SerializedName(value = "deviceGuardEnableVirtualizationBasedSecurity", alternate = {"DeviceGuardEnableVirtualizationBasedSecurity"})
    @Expose
    public Boolean deviceGuardEnableVirtualizationBasedSecurity;

    /**
     * The Device Guard Launch System Guard.
     * Allows the IT admin to configure the launch of System Guard.
     */
    @SerializedName(value = "deviceGuardLaunchSystemGuard", alternate = {"DeviceGuardLaunchSystemGuard"})
    @Expose
    public Enablement deviceGuardLaunchSystemGuard;

    /**
     * The Device Guard Local System Authority Credential Guard Settings.
     * Turn on Credential Guard when Platform Security Level with Secure Boot and Virtualization Based Security are both enabled.
     */
    @SerializedName(value = "deviceGuardLocalSystemAuthorityCredentialGuardSettings", alternate = {"DeviceGuardLocalSystemAuthorityCredentialGuardSettings"})
    @Expose
    public DeviceGuardLocalSystemAuthorityCredentialGuardType deviceGuardLocalSystemAuthorityCredentialGuardSettings;

    /**
     * The Device Guard Secure Boot With DMA.
     * Specifies whether Platform Security Level is enabled at next reboot.
     */
    @SerializedName(value = "deviceGuardSecureBootWithDMA", alternate = {"DeviceGuardSecureBootWithDMA"})
    @Expose
    public SecureBootWithDMAType deviceGuardSecureBootWithDMA;

    /**
     * The Dma Guard Device Enumeration Policy.
     * This policy is intended to provide additional security against external DMA capable devices. It allows for more control over the enumeration of external DMA capable devices incompatible with DMA Remapping/device memory isolation and sandboxing. This policy only takes effect when Kernel DMA Protection is supported and enabled by the system firmware. Kernel DMA Protection is a platform feature that cannot be controlled via policy or by end user. It has to be supported by the system at the time of manufacturing. To check if the system supports Kernel DMA Protection, please check the Kernel DMA Protection field in the Summary page of MSINFO32.exe.
     */
    @SerializedName(value = "dmaGuardDeviceEnumerationPolicy", alternate = {"DmaGuardDeviceEnumerationPolicy"})
    @Expose
    public DmaGuardDeviceEnumerationPolicyType dmaGuardDeviceEnumerationPolicy;

    /**
     * The Firewall Block Stateful FTP.
     * Blocks stateful FTP connections to the device
     */
    @SerializedName(value = "firewallBlockStatefulFTP", alternate = {"FirewallBlockStatefulFTP"})
    @Expose
    public Boolean firewallBlockStatefulFTP;

    /**
     * The Firewall Certificate Revocation List Check Method.
     * Specify how the certificate revocation list is to be enforced. Possible values are: deviceDefault, none, attempt, require.
     */
    @SerializedName(value = "firewallCertificateRevocationListCheckMethod", alternate = {"FirewallCertificateRevocationListCheckMethod"})
    @Expose
    public FirewallCertificateRevocationListCheckMethodType firewallCertificateRevocationListCheckMethod;

    /**
     * The Firewall Idle Timeout For Security Association In Seconds.
     * Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600
     */
    @SerializedName(value = "firewallIdleTimeoutForSecurityAssociationInSeconds", alternate = {"FirewallIdleTimeoutForSecurityAssociationInSeconds"})
    @Expose
    public Integer firewallIdleTimeoutForSecurityAssociationInSeconds;

    /**
     * The Firewall IPSec Exemptions Allow DHCP.
     * Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic
     */
    @SerializedName(value = "firewallIPSecExemptionsAllowDHCP", alternate = {"FirewallIPSecExemptionsAllowDHCP"})
    @Expose
    public Boolean firewallIPSecExemptionsAllowDHCP;

    /**
     * The Firewall IPSec Exemptions Allow ICMP.
     * Configures IPSec exemptions to allow ICMP
     */
    @SerializedName(value = "firewallIPSecExemptionsAllowICMP", alternate = {"FirewallIPSecExemptionsAllowICMP"})
    @Expose
    public Boolean firewallIPSecExemptionsAllowICMP;

    /**
     * The Firewall IPSec Exemptions Allow Neighbor Discovery.
     * Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes
     */
    @SerializedName(value = "firewallIPSecExemptionsAllowNeighborDiscovery", alternate = {"FirewallIPSecExemptionsAllowNeighborDiscovery"})
    @Expose
    public Boolean firewallIPSecExemptionsAllowNeighborDiscovery;

    /**
     * The Firewall IPSec Exemptions Allow Router Discovery.
     * Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes
     */
    @SerializedName(value = "firewallIPSecExemptionsAllowRouterDiscovery", alternate = {"FirewallIPSecExemptionsAllowRouterDiscovery"})
    @Expose
    public Boolean firewallIPSecExemptionsAllowRouterDiscovery;

    /**
     * The Firewall IPSec Exemptions None.
     * Configures IPSec exemptions to no exemptions
     */
    @SerializedName(value = "firewallIPSecExemptionsNone", alternate = {"FirewallIPSecExemptionsNone"})
    @Expose
    public Boolean firewallIPSecExemptionsNone;

    /**
     * The Firewall Merge Keying Module Settings.
     * If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set
     */
    @SerializedName(value = "firewallMergeKeyingModuleSettings", alternate = {"FirewallMergeKeyingModuleSettings"})
    @Expose
    public Boolean firewallMergeKeyingModuleSettings;

    /**
     * The Firewall Packet Queueing Method.
     * Configures how packet queueing should be applied in the tunnel gateway scenario. Possible values are: deviceDefault, disabled, queueInbound, queueOutbound, queueBoth.
     */
    @SerializedName(value = "firewallPacketQueueingMethod", alternate = {"FirewallPacketQueueingMethod"})
    @Expose
    public FirewallPacketQueueingMethodType firewallPacketQueueingMethod;

    /**
     * The Firewall Pre Shared Key Encoding Method.
     * Select the preshared key encoding to be used. Possible values are: deviceDefault, none, utF8.
     */
    @SerializedName(value = "firewallPreSharedKeyEncodingMethod", alternate = {"FirewallPreSharedKeyEncodingMethod"})
    @Expose
    public FirewallPreSharedKeyEncodingMethodType firewallPreSharedKeyEncodingMethod;

    /**
     * The Firewall Profile Domain.
     * Configures the firewall profile settings for domain networks
     */
    @SerializedName(value = "firewallProfileDomain", alternate = {"FirewallProfileDomain"})
    @Expose
    public WindowsFirewallNetworkProfile firewallProfileDomain;

    /**
     * The Firewall Profile Private.
     * Configures the firewall profile settings for private networks
     */
    @SerializedName(value = "firewallProfilePrivate", alternate = {"FirewallProfilePrivate"})
    @Expose
    public WindowsFirewallNetworkProfile firewallProfilePrivate;

    /**
     * The Firewall Profile Public.
     * Configures the firewall profile settings for public networks
     */
    @SerializedName(value = "firewallProfilePublic", alternate = {"FirewallProfilePublic"})
    @Expose
    public WindowsFirewallNetworkProfile firewallProfilePublic;

    /**
     * The Firewall Rules.
     * Configures the firewall rule settings. This collection can contain a maximum of 150 elements.
     */
    @SerializedName(value = "firewallRules", alternate = {"FirewallRules"})
    @Expose
    public java.util.List<WindowsFirewallRule> firewallRules;

    /**
     * The Lan Manager Authentication Level.
     * This security setting determines which challenge/response authentication protocol is used for network logons.
     */
    @SerializedName(value = "lanManagerAuthenticationLevel", alternate = {"LanManagerAuthenticationLevel"})
    @Expose
    public LanManagerAuthenticationLevel lanManagerAuthenticationLevel;

    /**
     * The Lan Manager Workstation Disable Insecure Guest Logons.
     * If enabled,the SMB client will allow insecure guest logons. If not configured, the SMB client will reject insecure guest logons.
     */
    @SerializedName(value = "lanManagerWorkstationDisableInsecureGuestLogons", alternate = {"LanManagerWorkstationDisableInsecureGuestLogons"})
    @Expose
    public Boolean lanManagerWorkstationDisableInsecureGuestLogons;

    /**
     * The Local Security Options Administrator Account Name.
     * Define a different account name to be associated with the security identifier (SID) for the account ???Administrator???.
     */
    @SerializedName(value = "localSecurityOptionsAdministratorAccountName", alternate = {"LocalSecurityOptionsAdministratorAccountName"})
    @Expose
    public String localSecurityOptionsAdministratorAccountName;

    /**
     * The Local Security Options Administrator Elevation Prompt Behavior.
     * Define the behavior of the elevation prompt for admins in Admin Approval Mode.
     */
    @SerializedName(value = "localSecurityOptionsAdministratorElevationPromptBehavior", alternate = {"LocalSecurityOptionsAdministratorElevationPromptBehavior"})
    @Expose
    public LocalSecurityOptionsAdministratorElevationPromptBehaviorType localSecurityOptionsAdministratorElevationPromptBehavior;

    /**
     * The Local Security Options Allow Anonymous Enumeration Of SAMAccounts And Shares.
     * This security setting determines whether to allows anonymous users to perform certain activities, such as enumerating the names of domain accounts and network shares.
     */
    @SerializedName(value = "localSecurityOptionsAllowAnonymousEnumerationOfSAMAccountsAndShares", alternate = {"LocalSecurityOptionsAllowAnonymousEnumerationOfSAMAccountsAndShares"})
    @Expose
    public Boolean localSecurityOptionsAllowAnonymousEnumerationOfSAMAccountsAndShares;

    /**
     * The Local Security Options Allow PKU2UAuthentication Requests.
     * Block PKU2U authentication requests to this device to use online identities.
     */
    @SerializedName(value = "localSecurityOptionsAllowPKU2UAuthenticationRequests", alternate = {"LocalSecurityOptionsAllowPKU2UAuthenticationRequests"})
    @Expose
    public Boolean localSecurityOptionsAllowPKU2UAuthenticationRequests;

    /**
     * The Local Security Options Allow Remote Calls To Security Accounts Manager.
     * Edit the default Security Descriptor Definition Language string to allow or deny users and groups to make remote calls to the SAM.
     */
    @SerializedName(value = "localSecurityOptionsAllowRemoteCallsToSecurityAccountsManager", alternate = {"LocalSecurityOptionsAllowRemoteCallsToSecurityAccountsManager"})
    @Expose
    public String localSecurityOptionsAllowRemoteCallsToSecurityAccountsManager;

    /**
     * The Local Security Options Allow Remote Calls To Security Accounts Manager Helper Bool.
     * UI helper boolean for LocalSecurityOptionsAllowRemoteCallsToSecurityAccountsManager entity
     */
    @SerializedName(value = "localSecurityOptionsAllowRemoteCallsToSecurityAccountsManagerHelperBool", alternate = {"LocalSecurityOptionsAllowRemoteCallsToSecurityAccountsManagerHelperBool"})
    @Expose
    public Boolean localSecurityOptionsAllowRemoteCallsToSecurityAccountsManagerHelperBool;

    /**
     * The Local Security Options Allow System To Be Shut Down Without Having To Log On.
     * This security setting determines whether a computer can be shut down without having to log on to Windows.
     */
    @SerializedName(value = "localSecurityOptionsAllowSystemToBeShutDownWithoutHavingToLogOn", alternate = {"LocalSecurityOptionsAllowSystemToBeShutDownWithoutHavingToLogOn"})
    @Expose
    public Boolean localSecurityOptionsAllowSystemToBeShutDownWithoutHavingToLogOn;

    /**
     * The Local Security Options Allow UIAccess Application Elevation.
     * Allow UIAccess apps to prompt for elevation without using the secure desktop.
     */
    @SerializedName(value = "localSecurityOptionsAllowUIAccessApplicationElevation", alternate = {"LocalSecurityOptionsAllowUIAccessApplicationElevation"})
    @Expose
    public Boolean localSecurityOptionsAllowUIAccessApplicationElevation;

    /**
     * The Local Security Options Allow UIAccess Applications For Secure Locations.
     * Allow UIAccess apps to prompt for elevation without using the secure desktop.Default is enabled
     */
    @SerializedName(value = "localSecurityOptionsAllowUIAccessApplicationsForSecureLocations", alternate = {"LocalSecurityOptionsAllowUIAccessApplicationsForSecureLocations"})
    @Expose
    public Boolean localSecurityOptionsAllowUIAccessApplicationsForSecureLocations;

    /**
     * The Local Security Options Allow Undock Without Having To Logon.
     * Prevent a portable computer from being undocked without having to log in.
     */
    @SerializedName(value = "localSecurityOptionsAllowUndockWithoutHavingToLogon", alternate = {"LocalSecurityOptionsAllowUndockWithoutHavingToLogon"})
    @Expose
    public Boolean localSecurityOptionsAllowUndockWithoutHavingToLogon;

    /**
     * The Local Security Options Block Microsoft Accounts.
     * Prevent users from adding new Microsoft accounts to this computer.
     */
    @SerializedName(value = "localSecurityOptionsBlockMicrosoftAccounts", alternate = {"LocalSecurityOptionsBlockMicrosoftAccounts"})
    @Expose
    public Boolean localSecurityOptionsBlockMicrosoftAccounts;

    /**
     * The Local Security Options Block Remote Logon With Blank Password.
     * Enable Local accounts that are not password protected to log on from locations other than the physical device.Default is enabled
     */
    @SerializedName(value = "localSecurityOptionsBlockRemoteLogonWithBlankPassword", alternate = {"LocalSecurityOptionsBlockRemoteLogonWithBlankPassword"})
    @Expose
    public Boolean localSecurityOptionsBlockRemoteLogonWithBlankPassword;

    /**
     * The Local Security Options Block Remote Optical Drive Access.
     * Enabling this settings allows only interactively logged on user to access CD-ROM media.
     */
    @SerializedName(value = "localSecurityOptionsBlockRemoteOpticalDriveAccess", alternate = {"LocalSecurityOptionsBlockRemoteOpticalDriveAccess"})
    @Expose
    public Boolean localSecurityOptionsBlockRemoteOpticalDriveAccess;

    /**
     * The Local Security Options Block Users Installing Printer Drivers.
     * Restrict installing printer drivers as part of connecting to a shared printer to admins only.
     */
    @SerializedName(value = "localSecurityOptionsBlockUsersInstallingPrinterDrivers", alternate = {"LocalSecurityOptionsBlockUsersInstallingPrinterDrivers"})
    @Expose
    public Boolean localSecurityOptionsBlockUsersInstallingPrinterDrivers;

    /**
     * The Local Security Options Clear Virtual Memory Page File.
     * This security setting determines whether the virtual memory pagefile is cleared when the system is shut down.
     */
    @SerializedName(value = "localSecurityOptionsClearVirtualMemoryPageFile", alternate = {"LocalSecurityOptionsClearVirtualMemoryPageFile"})
    @Expose
    public Boolean localSecurityOptionsClearVirtualMemoryPageFile;

    /**
     * The Local Security Options Client Digitally Sign Communications Always.
     * This security setting determines whether packet signing is required by the SMB client component.
     */
    @SerializedName(value = "localSecurityOptionsClientDigitallySignCommunicationsAlways", alternate = {"LocalSecurityOptionsClientDigitallySignCommunicationsAlways"})
    @Expose
    public Boolean localSecurityOptionsClientDigitallySignCommunicationsAlways;

    /**
     * The Local Security Options Client Send Unencrypted Password To Third Party SMBServers.
     * If this security setting is enabled, the Server Message Block (SMB) redirector is allowed to send plaintext passwords to non-Microsoft SMB servers that do not support password encryption during authentication.
     */
    @SerializedName(value = "localSecurityOptionsClientSendUnencryptedPasswordToThirdPartySMBServers", alternate = {"LocalSecurityOptionsClientSendUnencryptedPasswordToThirdPartySMBServers"})
    @Expose
    public Boolean localSecurityOptionsClientSendUnencryptedPasswordToThirdPartySMBServers;

    /**
     * The Local Security Options Detect Application Installations And Prompt For Elevation.
     * App installations requiring elevated privileges will prompt for admin credentials.Default is enabled
     */
    @SerializedName(value = "localSecurityOptionsDetectApplicationInstallationsAndPromptForElevation", alternate = {"LocalSecurityOptionsDetectApplicationInstallationsAndPromptForElevation"})
    @Expose
    public Boolean localSecurityOptionsDetectApplicationInstallationsAndPromptForElevation;

    /**
     * The Local Security Options Disable Administrator Account.
     * Determines whether the Local Administrator account is enabled or disabled.
     */
    @SerializedName(value = "localSecurityOptionsDisableAdministratorAccount", alternate = {"LocalSecurityOptionsDisableAdministratorAccount"})
    @Expose
    public Boolean localSecurityOptionsDisableAdministratorAccount;

    /**
     * The Local Security Options Disable Client Digitally Sign Communications If Server Agrees.
     * This security setting determines whether the SMB client attempts to negotiate SMB packet signing.
     */
    @SerializedName(value = "localSecurityOptionsDisableClientDigitallySignCommunicationsIfServerAgrees", alternate = {"LocalSecurityOptionsDisableClientDigitallySignCommunicationsIfServerAgrees"})
    @Expose
    public Boolean localSecurityOptionsDisableClientDigitallySignCommunicationsIfServerAgrees;

    /**
     * The Local Security Options Disable Guest Account.
     * Determines if the Guest account is enabled or disabled.
     */
    @SerializedName(value = "localSecurityOptionsDisableGuestAccount", alternate = {"LocalSecurityOptionsDisableGuestAccount"})
    @Expose
    public Boolean localSecurityOptionsDisableGuestAccount;

    /**
     * The Local Security Options Disable Server Digitally Sign Communications Always.
     * This security setting determines whether packet signing is required by the SMB server component.
     */
    @SerializedName(value = "localSecurityOptionsDisableServerDigitallySignCommunicationsAlways", alternate = {"LocalSecurityOptionsDisableServerDigitallySignCommunicationsAlways"})
    @Expose
    public Boolean localSecurityOptionsDisableServerDigitallySignCommunicationsAlways;

    /**
     * The Local Security Options Disable Server Digitally Sign Communications If Client Agrees.
     * This security setting determines whether the SMB server will negotiate SMB packet signing with clients that request it.
     */
    @SerializedName(value = "localSecurityOptionsDisableServerDigitallySignCommunicationsIfClientAgrees", alternate = {"LocalSecurityOptionsDisableServerDigitallySignCommunicationsIfClientAgrees"})
    @Expose
    public Boolean localSecurityOptionsDisableServerDigitallySignCommunicationsIfClientAgrees;

    /**
     * The Local Security Options Do Not Allow Anonymous Enumeration Of SAMAccounts.
     * This security setting determines what additional permissions will be granted for anonymous connections to the computer.
     */
    @SerializedName(value = "localSecurityOptionsDoNotAllowAnonymousEnumerationOfSAMAccounts", alternate = {"LocalSecurityOptionsDoNotAllowAnonymousEnumerationOfSAMAccounts"})
    @Expose
    public Boolean localSecurityOptionsDoNotAllowAnonymousEnumerationOfSAMAccounts;

    /**
     * The Local Security Options Do Not Require Ctrl Alt Del.
     * Require CTRL+ALT+DEL to be pressed before a user can log on.
     */
    @SerializedName(value = "localSecurityOptionsDoNotRequireCtrlAltDel", alternate = {"LocalSecurityOptionsDoNotRequireCtrlAltDel"})
    @Expose
    public Boolean localSecurityOptionsDoNotRequireCtrlAltDel;

    /**
     * The Local Security Options Do Not Store LANManager Hash Value On Next Password Change.
     * This security setting determines if, at the next password change, the LAN Manager (LM) hash value for the new password is stored. It???s not stored by default.
     */
    @SerializedName(value = "localSecurityOptionsDoNotStoreLANManagerHashValueOnNextPasswordChange", alternate = {"LocalSecurityOptionsDoNotStoreLANManagerHashValueOnNextPasswordChange"})
    @Expose
    public Boolean localSecurityOptionsDoNotStoreLANManagerHashValueOnNextPasswordChange;

    /**
     * The Local Security Options Format And Eject Of Removable Media Allowed User.
     * Define who is allowed to format and eject removable NTFS media.
     */
    @SerializedName(value = "localSecurityOptionsFormatAndEjectOfRemovableMediaAllowedUser", alternate = {"LocalSecurityOptionsFormatAndEjectOfRemovableMediaAllowedUser"})
    @Expose
    public LocalSecurityOptionsFormatAndEjectOfRemovableMediaAllowedUserType localSecurityOptionsFormatAndEjectOfRemovableMediaAllowedUser;

    /**
     * The Local Security Options Guest Account Name.
     * Define a different account name to be associated with the security identifier (SID) for the account ???Guest???.
     */
    @SerializedName(value = "localSecurityOptionsGuestAccountName", alternate = {"LocalSecurityOptionsGuestAccountName"})
    @Expose
    public String localSecurityOptionsGuestAccountName;

    /**
     * The Local Security Options Hide Last Signed In User.
     * Do not display the username of the last person who signed in on this device.
     */
    @SerializedName(value = "localSecurityOptionsHideLastSignedInUser", alternate = {"LocalSecurityOptionsHideLastSignedInUser"})
    @Expose
    public Boolean localSecurityOptionsHideLastSignedInUser;

    /**
     * The Local Security Options Hide Username At Sign In.
     * Do not display the username of the person signing in to this device after credentials are entered and before the device???s desktop is shown.
     */
    @SerializedName(value = "localSecurityOptionsHideUsernameAtSignIn", alternate = {"LocalSecurityOptionsHideUsernameAtSignIn"})
    @Expose
    public Boolean localSecurityOptionsHideUsernameAtSignIn;

    /**
     * The Local Security Options Information Displayed On Lock Screen.
     * Configure the user information that is displayed when the session is locked. If not configured, user display name, domain and username are shown
     */
    @SerializedName(value = "localSecurityOptionsInformationDisplayedOnLockScreen", alternate = {"LocalSecurityOptionsInformationDisplayedOnLockScreen"})
    @Expose
    public LocalSecurityOptionsInformationDisplayedOnLockScreenType localSecurityOptionsInformationDisplayedOnLockScreen;

    /**
     * The Local Security Options Information Shown On Lock Screen.
     * Configure the user information that is displayed when the session is locked. If not configured, user display name, domain and username are shown
     */
    @SerializedName(value = "localSecurityOptionsInformationShownOnLockScreen", alternate = {"LocalSecurityOptionsInformationShownOnLockScreen"})
    @Expose
    public LocalSecurityOptionsInformationShownOnLockScreenType localSecurityOptionsInformationShownOnLockScreen;

    /**
     * The Local Security Options Log On Message Text.
     * Set message text for users attempting to log in.
     */
    @SerializedName(value = "localSecurityOptionsLogOnMessageText", alternate = {"LocalSecurityOptionsLogOnMessageText"})
    @Expose
    public String localSecurityOptionsLogOnMessageText;

    /**
     * The Local Security Options Log On Message Title.
     * Set message title for users attempting to log in.
     */
    @SerializedName(value = "localSecurityOptionsLogOnMessageTitle", alternate = {"LocalSecurityOptionsLogOnMessageTitle"})
    @Expose
    public String localSecurityOptionsLogOnMessageTitle;

    /**
     * The Local Security Options Machine Inactivity Limit.
     * Define maximum minutes of inactivity on the interactive desktop???s login screen until the screen saver runs. Valid values 0 to 9999
     */
    @SerializedName(value = "localSecurityOptionsMachineInactivityLimit", alternate = {"LocalSecurityOptionsMachineInactivityLimit"})
    @Expose
    public Integer localSecurityOptionsMachineInactivityLimit;

    /**
     * The Local Security Options Machine Inactivity Limit In Minutes.
     * Define maximum minutes of inactivity on the interactive desktop???s login screen until the screen saver runs. Valid values 0 to 9999
     */
    @SerializedName(value = "localSecurityOptionsMachineInactivityLimitInMinutes", alternate = {"LocalSecurityOptionsMachineInactivityLimitInMinutes"})
    @Expose
    public Integer localSecurityOptionsMachineInactivityLimitInMinutes;

    /**
     * The Local Security Options Minimum Session Security For Ntlm Ssp Based Clients.
     * This security setting allows a client to require the negotiation of 128-bit encryption and/or NTLMv2 session security.
     */
    @SerializedName(value = "localSecurityOptionsMinimumSessionSecurityForNtlmSspBasedClients", alternate = {"LocalSecurityOptionsMinimumSessionSecurityForNtlmSspBasedClients"})
    @Expose
    public LocalSecurityOptionsMinimumSessionSecurity localSecurityOptionsMinimumSessionSecurityForNtlmSspBasedClients;

    /**
     * The Local Security Options Minimum Session Security For Ntlm Ssp Based Servers.
     * This security setting allows a server to require the negotiation of 128-bit encryption and/or NTLMv2 session security.
     */
    @SerializedName(value = "localSecurityOptionsMinimumSessionSecurityForNtlmSspBasedServers", alternate = {"LocalSecurityOptionsMinimumSessionSecurityForNtlmSspBasedServers"})
    @Expose
    public LocalSecurityOptionsMinimumSessionSecurity localSecurityOptionsMinimumSessionSecurityForNtlmSspBasedServers;

    /**
     * The Local Security Options Only Elevate Signed Executables.
     * Enforce PKI certification path validation for a given executable file before it is permitted to run.
     */
    @SerializedName(value = "localSecurityOptionsOnlyElevateSignedExecutables", alternate = {"LocalSecurityOptionsOnlyElevateSignedExecutables"})
    @Expose
    public Boolean localSecurityOptionsOnlyElevateSignedExecutables;

    /**
     * The Local Security Options Restrict Anonymous Access To Named Pipes And Shares.
     * By default, this security setting restricts anonymous access to shares and pipes to the settings for named pipes that can be accessed anonymously and Shares that can be accessed anonymously
     */
    @SerializedName(value = "localSecurityOptionsRestrictAnonymousAccessToNamedPipesAndShares", alternate = {"LocalSecurityOptionsRestrictAnonymousAccessToNamedPipesAndShares"})
    @Expose
    public Boolean localSecurityOptionsRestrictAnonymousAccessToNamedPipesAndShares;

    /**
     * The Local Security Options Smart Card Removal Behavior.
     * This security setting determines what happens when the smart card for a logged-on user is removed from the smart card reader.
     */
    @SerializedName(value = "localSecurityOptionsSmartCardRemovalBehavior", alternate = {"LocalSecurityOptionsSmartCardRemovalBehavior"})
    @Expose
    public LocalSecurityOptionsSmartCardRemovalBehaviorType localSecurityOptionsSmartCardRemovalBehavior;

    /**
     * The Local Security Options Standard User Elevation Prompt Behavior.
     * Define the behavior of the elevation prompt for standard users.
     */
    @SerializedName(value = "localSecurityOptionsStandardUserElevationPromptBehavior", alternate = {"LocalSecurityOptionsStandardUserElevationPromptBehavior"})
    @Expose
    public LocalSecurityOptionsStandardUserElevationPromptBehaviorType localSecurityOptionsStandardUserElevationPromptBehavior;

    /**
     * The Local Security Options Switch To Secure Desktop When Prompting For Elevation.
     * Enable all elevation requests to go to the interactive user's desktop rather than the secure desktop. Prompt behavior policy settings for admins and standard users are used.
     */
    @SerializedName(value = "localSecurityOptionsSwitchToSecureDesktopWhenPromptingForElevation", alternate = {"LocalSecurityOptionsSwitchToSecureDesktopWhenPromptingForElevation"})
    @Expose
    public Boolean localSecurityOptionsSwitchToSecureDesktopWhenPromptingForElevation;

    /**
     * The Local Security Options Use Admin Approval Mode.
     * Defines whether the built-in admin account uses Admin Approval Mode or runs all apps with full admin privileges.Default is enabled
     */
    @SerializedName(value = "localSecurityOptionsUseAdminApprovalMode", alternate = {"LocalSecurityOptionsUseAdminApprovalMode"})
    @Expose
    public Boolean localSecurityOptionsUseAdminApprovalMode;

    /**
     * The Local Security Options Use Admin Approval Mode For Administrators.
     * Define whether Admin Approval Mode and all UAC policy settings are enabled, default is enabled
     */
    @SerializedName(value = "localSecurityOptionsUseAdminApprovalModeForAdministrators", alternate = {"LocalSecurityOptionsUseAdminApprovalModeForAdministrators"})
    @Expose
    public Boolean localSecurityOptionsUseAdminApprovalModeForAdministrators;

    /**
     * The Local Security Options Virtualize File And Registry Write Failures To Per User Locations.
     * Virtualize file and registry write failures to per user locations
     */
    @SerializedName(value = "localSecurityOptionsVirtualizeFileAndRegistryWriteFailuresToPerUserLocations", alternate = {"LocalSecurityOptionsVirtualizeFileAndRegistryWriteFailuresToPerUserLocations"})
    @Expose
    public Boolean localSecurityOptionsVirtualizeFileAndRegistryWriteFailuresToPerUserLocations;

    /**
     * The Smart Screen Block Override For Files.
     * Allows IT Admins to control whether users can ignore SmartScreen warnings and run malicious files.
     */
    @SerializedName(value = "smartScreenBlockOverrideForFiles", alternate = {"SmartScreenBlockOverrideForFiles"})
    @Expose
    public Boolean smartScreenBlockOverrideForFiles;

    /**
     * The Smart Screen Enable In Shell.
     * Allows IT Admins to configure SmartScreen for Windows.
     */
    @SerializedName(value = "smartScreenEnableInShell", alternate = {"SmartScreenEnableInShell"})
    @Expose
    public Boolean smartScreenEnableInShell;

    /**
     * The User Rights Access Credential Manager As Trusted Caller.
     * This user right is used by Credential Manager during Backup/Restore. Users' saved credentials might be compromised if this privilege is given to other entities. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsAccessCredentialManagerAsTrustedCaller", alternate = {"UserRightsAccessCredentialManagerAsTrustedCaller"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsAccessCredentialManagerAsTrustedCaller;

    /**
     * The User Rights Act As Part Of The Operating System.
     * This user right allows a process to impersonate any user without authentication. The process can therefore gain access to the same local resources as that user. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsActAsPartOfTheOperatingSystem", alternate = {"UserRightsActAsPartOfTheOperatingSystem"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsActAsPartOfTheOperatingSystem;

    /**
     * The User Rights Allow Access From Network.
     * This user right determines which users and groups are allowed to connect to the computer over the network. State Allowed is supported.
     */
    @SerializedName(value = "userRightsAllowAccessFromNetwork", alternate = {"UserRightsAllowAccessFromNetwork"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsAllowAccessFromNetwork;

    /**
     * The User Rights Backup Data.
     * This user right determines which users can bypass file, directory, registry, and other persistent objects permissions when backing up files and directories. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsBackupData", alternate = {"UserRightsBackupData"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsBackupData;

    /**
     * The User Rights Block Access From Network.
     * This user right determines which users and groups are block from connecting to the computer over the network. State Block is supported.
     */
    @SerializedName(value = "userRightsBlockAccessFromNetwork", alternate = {"UserRightsBlockAccessFromNetwork"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsBlockAccessFromNetwork;

    /**
     * The User Rights Change System Time.
     * This user right determines which users and groups can change the time and date on the internal clock of the computer. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsChangeSystemTime", alternate = {"UserRightsChangeSystemTime"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsChangeSystemTime;

    /**
     * The User Rights Create Global Objects.
     * This security setting determines whether users can create global objects that are available to all sessions. Users who can create global objects could affect processes that run under other users' sessions, which could lead to application failure or data corruption. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsCreateGlobalObjects", alternate = {"UserRightsCreateGlobalObjects"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsCreateGlobalObjects;

    /**
     * The User Rights Create Page File.
     * This user right determines which users and groups can call an internal API to create and change the size of a page file. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsCreatePageFile", alternate = {"UserRightsCreatePageFile"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsCreatePageFile;

    /**
     * The User Rights Create Permanent Shared Objects.
     * This user right determines which accounts can be used by processes to create a directory object using the object manager. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsCreatePermanentSharedObjects", alternate = {"UserRightsCreatePermanentSharedObjects"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsCreatePermanentSharedObjects;

    /**
     * The User Rights Create Symbolic Links.
     * This user right determines if the user can create a symbolic link from the computer to which they are logged on. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsCreateSymbolicLinks", alternate = {"UserRightsCreateSymbolicLinks"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsCreateSymbolicLinks;

    /**
     * The User Rights Create Token.
     * This user right determines which users/groups can be used by processes to create a token that can then be used to get access to any local resources when the process uses an internal API to create an access token. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsCreateToken", alternate = {"UserRightsCreateToken"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsCreateToken;

    /**
     * The User Rights Debug Programs.
     * This user right determines which users can attach a debugger to any process or to the kernel. Only states NotConfigured and Allowed are supported
     */
    @SerializedName(value = "userRightsDebugPrograms", alternate = {"UserRightsDebugPrograms"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsDebugPrograms;

    /**
     * The User Rights Delegation.
     * This user right determines which users can set the Trusted for Delegation setting on a user or computer object. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsDelegation", alternate = {"UserRightsDelegation"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsDelegation;

    /**
     * The User Rights Deny Local Log On.
     * This user right determines which users cannot log on to the computer. States NotConfigured, Blocked are supported 
     */
    @SerializedName(value = "userRightsDenyLocalLogOn", alternate = {"UserRightsDenyLocalLogOn"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsDenyLocalLogOn;

    /**
     * The User Rights Generate Security Audits.
     * This user right determines which accounts can be used by a process to add entries to the security log. The security log is used to trace unauthorized system access.  Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsGenerateSecurityAudits", alternate = {"UserRightsGenerateSecurityAudits"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsGenerateSecurityAudits;

    /**
     * The User Rights Impersonate Client.
     * Assigning this user right to a user allows programs running on behalf of that user to impersonate a client. Requiring this user right for this kind of impersonation prevents an unauthorized user from convincing a client to connect to a service that they have created and then impersonating that client, which can elevate the unauthorized user's permissions to administrative or system levels. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsImpersonateClient", alternate = {"UserRightsImpersonateClient"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsImpersonateClient;

    /**
     * The User Rights Increase Scheduling Priority.
     * This user right determines which accounts can use a process with Write Property access to another process to increase the execution priority assigned to the other process. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsIncreaseSchedulingPriority", alternate = {"UserRightsIncreaseSchedulingPriority"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsIncreaseSchedulingPriority;

    /**
     * The User Rights Load Unload Drivers.
     * This user right determines which users can dynamically load and unload device drivers or other code in to kernel mode. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsLoadUnloadDrivers", alternate = {"UserRightsLoadUnloadDrivers"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsLoadUnloadDrivers;

    /**
     * The User Rights Local Log On.
     * This user right determines which users can log on to the computer. States NotConfigured, Allowed are supported 
     */
    @SerializedName(value = "userRightsLocalLogOn", alternate = {"UserRightsLocalLogOn"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsLocalLogOn;

    /**
     * The User Rights Lock Memory.
     * This user right determines which accounts can use a process to keep data in physical memory, which prevents the system from paging the data to virtual memory on disk. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsLockMemory", alternate = {"UserRightsLockMemory"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsLockMemory;

    /**
     * The User Rights Manage Auditing And Security Logs.
     * This user right determines which users can specify object access auditing options for individual resources, such as files, Active Directory objects, and registry keys. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsManageAuditingAndSecurityLogs", alternate = {"UserRightsManageAuditingAndSecurityLogs"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsManageAuditingAndSecurityLogs;

    /**
     * The User Rights Manage Volumes.
     * This user right determines which users and groups can run maintenance tasks on a volume, such as remote defragmentation. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsManageVolumes", alternate = {"UserRightsManageVolumes"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsManageVolumes;

    /**
     * The User Rights Modify Firmware Environment.
     * This user right determines who can modify firmware environment values. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsModifyFirmwareEnvironment", alternate = {"UserRightsModifyFirmwareEnvironment"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsModifyFirmwareEnvironment;

    /**
     * The User Rights Modify Object Labels.
     * This user right determines which user accounts can modify the integrity label of objects, such as files, registry keys, or processes owned by other users. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsModifyObjectLabels", alternate = {"UserRightsModifyObjectLabels"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsModifyObjectLabels;

    /**
     * The User Rights Profile Single Process.
     * This user right determines which users can use performance monitoring tools to monitor the performance of system processes. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsProfileSingleProcess", alternate = {"UserRightsProfileSingleProcess"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsProfileSingleProcess;

    /**
     * The User Rights Remote Desktop Services Log On.
     * This user right determines which users and groups are prohibited from logging on as a Remote Desktop Services client. Only states NotConfigured and Blocked are supported
     */
    @SerializedName(value = "userRightsRemoteDesktopServicesLogOn", alternate = {"UserRightsRemoteDesktopServicesLogOn"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsRemoteDesktopServicesLogOn;

    /**
     * The User Rights Remote Shutdown.
     * This user right determines which users are allowed to shut down a computer from a remote location on the network. Misuse of this user right can result in a denial of service. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsRemoteShutdown", alternate = {"UserRightsRemoteShutdown"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsRemoteShutdown;

    /**
     * The User Rights Restore Data.
     * This user right determines which users can bypass file, directory, registry, and other persistent objects permissions when restoring backed up files and directories, and determines which users can set any valid security principal as the owner of an object. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsRestoreData", alternate = {"UserRightsRestoreData"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsRestoreData;

    /**
     * The User Rights Take Ownership.
     * This user right determines which users can take ownership of any securable object in the system, including Active Directory objects, files and folders, printers, registry keys, processes, and threads. Only states NotConfigured and Allowed are supported.
     */
    @SerializedName(value = "userRightsTakeOwnership", alternate = {"UserRightsTakeOwnership"})
    @Expose
    public DeviceManagementUserRightsSetting userRightsTakeOwnership;

    /**
     * The Windows Defender Tamper Protection.
     * Configure windows defender TamperProtection settings
     */
    @SerializedName(value = "windowsDefenderTamperProtection", alternate = {"WindowsDefenderTamperProtection"})
    @Expose
    public WindowsDefenderTamperProtectionOptions windowsDefenderTamperProtection;

    /**
     * The Xbox Services Accessory Management Service Startup Mode.
     * This setting determines whether the Accessory management service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.
     */
    @SerializedName(value = "xboxServicesAccessoryManagementServiceStartupMode", alternate = {"XboxServicesAccessoryManagementServiceStartupMode"})
    @Expose
    public ServiceStartType xboxServicesAccessoryManagementServiceStartupMode;

    /**
     * The Xbox Services Enable Xbox Game Save Task.
     * This setting determines whether xbox game save is enabled (1) or disabled (0).
     */
    @SerializedName(value = "xboxServicesEnableXboxGameSaveTask", alternate = {"XboxServicesEnableXboxGameSaveTask"})
    @Expose
    public Boolean xboxServicesEnableXboxGameSaveTask;

    /**
     * The Xbox Services Live Auth Manager Service Startup Mode.
     * This setting determines whether Live Auth Manager service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.
     */
    @SerializedName(value = "xboxServicesLiveAuthManagerServiceStartupMode", alternate = {"XboxServicesLiveAuthManagerServiceStartupMode"})
    @Expose
    public ServiceStartType xboxServicesLiveAuthManagerServiceStartupMode;

    /**
     * The Xbox Services Live Game Save Service Startup Mode.
     * This setting determines whether Live Game save service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.
     */
    @SerializedName(value = "xboxServicesLiveGameSaveServiceStartupMode", alternate = {"XboxServicesLiveGameSaveServiceStartupMode"})
    @Expose
    public ServiceStartType xboxServicesLiveGameSaveServiceStartupMode;

    /**
     * The Xbox Services Live Networking Service Startup Mode.
     * This setting determines whether Networking service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.
     */
    @SerializedName(value = "xboxServicesLiveNetworkingServiceStartupMode", alternate = {"XboxServicesLiveNetworkingServiceStartupMode"})
    @Expose
    public ServiceStartType xboxServicesLiveNetworkingServiceStartupMode;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
