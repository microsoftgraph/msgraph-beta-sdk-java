// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.RegistrationAuthMethod;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Credential User Registration Details.
 */
public class CredentialUserRegistrationDetails extends Entity implements IJsonBackedObject {


    /**
     * The Auth Methods.
     * 
     */
    @SerializedName(value = "authMethods", alternate = {"AuthMethods"})
    @Expose
    public java.util.List<RegistrationAuthMethod> authMethods;

    /**
     * The Is Capable.
     * 
     */
    @SerializedName(value = "isCapable", alternate = {"IsCapable"})
    @Expose
    public Boolean isCapable;

    /**
     * The Is Enabled.
     * 
     */
    @SerializedName(value = "isEnabled", alternate = {"IsEnabled"})
    @Expose
    public Boolean isEnabled;

    /**
     * The Is Mfa Registered.
     * 
     */
    @SerializedName(value = "isMfaRegistered", alternate = {"IsMfaRegistered"})
    @Expose
    public Boolean isMfaRegistered;

    /**
     * The Is Registered.
     * 
     */
    @SerializedName(value = "isRegistered", alternate = {"IsRegistered"})
    @Expose
    public Boolean isRegistered;

    /**
     * The User Display Name.
     * 
     */
    @SerializedName(value = "userDisplayName", alternate = {"UserDisplayName"})
    @Expose
    public String userDisplayName;

    /**
     * The User Principal Name.
     * 
     */
    @SerializedName(value = "userPrincipalName", alternate = {"UserPrincipalName"})
    @Expose
    public String userPrincipalName;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
