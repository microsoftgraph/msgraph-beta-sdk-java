// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.PostalAddressType;
import com.microsoft.graph.models.extensions.Currency;
import com.microsoft.graph.models.extensions.Customer;
import com.microsoft.graph.models.extensions.PaymentTerm;
import com.microsoft.graph.models.extensions.SalesInvoiceLine;
import com.microsoft.graph.models.extensions.ShipmentMethod;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.SalesInvoiceLineCollectionResponse;
import com.microsoft.graph.requests.extensions.SalesInvoiceLineCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Sales Invoice.
 */
public class SalesInvoice extends Entity implements IJsonBackedObject {


    /**
     * The Billing Postal Address.
     * 
     */
    @SerializedName("billingPostalAddress")
    @Expose
    public PostalAddressType billingPostalAddress;

    /**
     * The Bill To Customer Id.
     * 
     */
    @SerializedName("billToCustomerId")
    @Expose
    public java.util.UUID billToCustomerId;

    /**
     * The Bill To Customer Number.
     * 
     */
    @SerializedName("billToCustomerNumber")
    @Expose
    public String billToCustomerNumber;

    /**
     * The Bill To Name.
     * 
     */
    @SerializedName("billToName")
    @Expose
    public String billToName;

    /**
     * The Currency Code.
     * 
     */
    @SerializedName("currencyCode")
    @Expose
    public String currencyCode;

    /**
     * The Currency Id.
     * 
     */
    @SerializedName("currencyId")
    @Expose
    public java.util.UUID currencyId;

    /**
     * The Customer Id.
     * 
     */
    @SerializedName("customerId")
    @Expose
    public java.util.UUID customerId;

    /**
     * The Customer Name.
     * 
     */
    @SerializedName("customerName")
    @Expose
    public String customerName;

    /**
     * The Customer Number.
     * 
     */
    @SerializedName("customerNumber")
    @Expose
    public String customerNumber;

    /**
     * The Customer Purchase Order Reference.
     * 
     */
    @SerializedName("customerPurchaseOrderReference")
    @Expose
    public String customerPurchaseOrderReference;

    /**
     * The Discount Amount.
     * 
     */
    @SerializedName("discountAmount")
    @Expose
    public java.math.BigDecimal discountAmount;

    /**
     * The Discount Applied Before Tax.
     * 
     */
    @SerializedName("discountAppliedBeforeTax")
    @Expose
    public Boolean discountAppliedBeforeTax;

    /**
     * The Due Date.
     * 
     */
    @SerializedName("dueDate")
    @Expose
    public com.microsoft.graph.models.extensions.DateOnly dueDate;

    /**
     * The Email.
     * 
     */
    @SerializedName("email")
    @Expose
    public String email;

    /**
     * The External Document Number.
     * 
     */
    @SerializedName("externalDocumentNumber")
    @Expose
    public String externalDocumentNumber;

    /**
     * The Invoice Date.
     * 
     */
    @SerializedName("invoiceDate")
    @Expose
    public com.microsoft.graph.models.extensions.DateOnly invoiceDate;

    /**
     * The Last Modified Date Time.
     * 
     */
    @SerializedName("lastModifiedDateTime")
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Number.
     * 
     */
    @SerializedName("number")
    @Expose
    public String number;

    /**
     * The Order Id.
     * 
     */
    @SerializedName("orderId")
    @Expose
    public java.util.UUID orderId;

    /**
     * The Order Number.
     * 
     */
    @SerializedName("orderNumber")
    @Expose
    public String orderNumber;

    /**
     * The Payment Terms Id.
     * 
     */
    @SerializedName("paymentTermsId")
    @Expose
    public java.util.UUID paymentTermsId;

    /**
     * The Phone Number.
     * 
     */
    @SerializedName("phoneNumber")
    @Expose
    public String phoneNumber;

    /**
     * The Prices Include Tax.
     * 
     */
    @SerializedName("pricesIncludeTax")
    @Expose
    public Boolean pricesIncludeTax;

    /**
     * The Salesperson.
     * 
     */
    @SerializedName("salesperson")
    @Expose
    public String salesperson;

    /**
     * The Selling Postal Address.
     * 
     */
    @SerializedName("sellingPostalAddress")
    @Expose
    public PostalAddressType sellingPostalAddress;

    /**
     * The Shipment Method Id.
     * 
     */
    @SerializedName("shipmentMethodId")
    @Expose
    public java.util.UUID shipmentMethodId;

    /**
     * The Shipping Postal Address.
     * 
     */
    @SerializedName("shippingPostalAddress")
    @Expose
    public PostalAddressType shippingPostalAddress;

    /**
     * The Ship To Contact.
     * 
     */
    @SerializedName("shipToContact")
    @Expose
    public String shipToContact;

    /**
     * The Ship To Name.
     * 
     */
    @SerializedName("shipToName")
    @Expose
    public String shipToName;

    /**
     * The Status.
     * 
     */
    @SerializedName("status")
    @Expose
    public String status;

    /**
     * The Total Amount Excluding Tax.
     * 
     */
    @SerializedName("totalAmountExcludingTax")
    @Expose
    public java.math.BigDecimal totalAmountExcludingTax;

    /**
     * The Total Amount Including Tax.
     * 
     */
    @SerializedName("totalAmountIncludingTax")
    @Expose
    public java.math.BigDecimal totalAmountIncludingTax;

    /**
     * The Total Tax Amount.
     * 
     */
    @SerializedName("totalTaxAmount")
    @Expose
    public java.math.BigDecimal totalTaxAmount;

    /**
     * The Currency.
     * 
     */
    @SerializedName("currency")
    @Expose
    public Currency currency;

    /**
     * The Customer.
     * 
     */
    @SerializedName("customer")
    @Expose
    public Customer customer;

    /**
     * The Payment Term.
     * 
     */
    @SerializedName("paymentTerm")
    @Expose
    public PaymentTerm paymentTerm;

    /**
     * The Sales Invoice Lines.
     * 
     */
    @SerializedName("salesInvoiceLines")
    @Expose
    public SalesInvoiceLineCollectionPage salesInvoiceLines;

    /**
     * The Shipment Method.
     * 
     */
    @SerializedName("shipmentMethod")
    @Expose
    public ShipmentMethod shipmentMethod;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("salesInvoiceLines")) {
            final SalesInvoiceLineCollectionResponse response = new SalesInvoiceLineCollectionResponse();
            if (json.has("salesInvoiceLines@odata.nextLink")) {
                response.nextLink = json.get("salesInvoiceLines@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("salesInvoiceLines").toString(), JsonObject[].class);
            final SalesInvoiceLine[] array = new SalesInvoiceLine[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), SalesInvoiceLine.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            salesInvoiceLines = new SalesInvoiceLineCollectionPage(response, null);
        }
    }
}
