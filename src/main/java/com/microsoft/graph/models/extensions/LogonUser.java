// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.UserAccountSecurityType;
import com.microsoft.graph.models.generated.LogonType;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Logon User.
 */
public class LogonUser implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Account Domain.
     * Domain of user account used to logon.
     */
    @SerializedName(value = "accountDomain", alternate = {"AccountDomain"})
    @Expose
    public String accountDomain;

    /**
     * The Account Name.
     * Account name of user account used to logon.
     */
    @SerializedName(value = "accountName", alternate = {"AccountName"})
    @Expose
    public String accountName;

    /**
     * The Account Type.
     * User Account type, per Windows definition. Possible values are: unknown, standard, power, administrator.
     */
    @SerializedName(value = "accountType", alternate = {"AccountType"})
    @Expose
    public UserAccountSecurityType accountType;

    /**
     * The First Seen Date Time.
     * DateTime at which the earliest logon by this user account occurred (provider-determined period). The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.
     */
    @SerializedName(value = "firstSeenDateTime", alternate = {"FirstSeenDateTime"})
    @Expose
    public java.util.Calendar firstSeenDateTime;

    /**
     * The Last Seen Date Time.
     * DateTime at which the latest logon by this user account occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.
     */
    @SerializedName(value = "lastSeenDateTime", alternate = {"LastSeenDateTime"})
    @Expose
    public java.util.Calendar lastSeenDateTime;

    /**
     * The Logon Id.
     * User logon ID.
     */
    @SerializedName(value = "logonId", alternate = {"LogonId"})
    @Expose
    public String logonId;

    /**
     * The Logon Types.
     * Collection of the logon types observed for the logged on user from when first to last seen. Possible values are: unknown, interactive, remoteInteractive, network, batch, service.
     */
    @SerializedName(value = "logonTypes", alternate = {"LogonTypes"})
    @Expose
    public java.util.List<LogonType> logonTypes;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
