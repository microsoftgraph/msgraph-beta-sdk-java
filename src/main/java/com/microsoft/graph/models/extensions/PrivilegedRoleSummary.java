// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.RoleSummaryStatus;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Privileged Role Summary.
 */
public class PrivilegedRoleSummary extends Entity implements IJsonBackedObject {


    /**
     * The Elevated Count.
     * The number of users that have the role assigned and the role is activated.
     */
    @SerializedName(value = "elevatedCount", alternate = {"ElevatedCount"})
    @Expose
    public Integer elevatedCount;

    /**
     * The Managed Count.
     * The number of users that have the role assigned but the role is deactivated.
     */
    @SerializedName(value = "managedCount", alternate = {"ManagedCount"})
    @Expose
    public Integer managedCount;

    /**
     * The Mfa Enabled.
     * true if the role activation requires MFA. false if the role activation doesn't require MFA.
     */
    @SerializedName(value = "mfaEnabled", alternate = {"MfaEnabled"})
    @Expose
    public Boolean mfaEnabled;

    /**
     * The Status.
     * Possible values are: ok, bad. The value depends on the ratio of (managedCount / usersCount). If the ratio is less than a predefined threshold, ok is returned. Otherwise, bad is returned.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
    public RoleSummaryStatus status;

    /**
     * The Users Count.
     * The number of users that are assigned with the role.
     */
    @SerializedName(value = "usersCount", alternate = {"UsersCount"})
    @Expose
    public Integer usersCount;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
