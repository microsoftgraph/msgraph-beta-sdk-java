// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.WindowsDefenderApplicationControlSupplementalPolicyAssignment;
import com.microsoft.graph.models.extensions.WindowsDefenderApplicationControlSupplementalPolicyDeploymentSummary;
import com.microsoft.graph.models.extensions.WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionResponse;
import com.microsoft.graph.requests.extensions.WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionPage;
import com.microsoft.graph.requests.extensions.WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionResponse;
import com.microsoft.graph.requests.extensions.WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Defender Application Control Supplemental Policy.
 */
public class WindowsDefenderApplicationControlSupplementalPolicy extends Entity implements IJsonBackedObject {


    /**
     * The Display Name.
     * The display name of WindowsDefenderApplicationControl supplemental policy.
     */
    @SerializedName("displayName")
    @Expose
    public String displayName;

    /**
     * The Description.
     * The description of WindowsDefenderApplicationControl supplemental policy.
     */
    @SerializedName("description")
    @Expose
    public String description;

    /**
     * The Content.
     * The WindowsDefenderApplicationControl supplemental policy content in byte array format.
     */
    @SerializedName("content")
    @Expose
    public byte[] content;

    /**
     * The Content File Name.
     * The WindowsDefenderApplicationControl supplemental policy content's file name.
     */
    @SerializedName("contentFileName")
    @Expose
    public String contentFileName;

    /**
     * The Version.
     * The WindowsDefenderApplicationControl supplemental policy's version.
     */
    @SerializedName("version")
    @Expose
    public String version;

    /**
     * The Creation Date Time.
     * The date and time when the WindowsDefenderApplicationControl supplemental policy was uploaded.
     */
    @SerializedName("creationDateTime")
    @Expose
    public java.util.Calendar creationDateTime;

    /**
     * The Last Modified Date Time.
     * The date and time when the WindowsDefenderApplicationControl supplemental policy was last modified.
     */
    @SerializedName("lastModifiedDateTime")
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Role Scope Tag Ids.
     * List of Scope Tags for this WindowsDefenderApplicationControl supplemental policy entity.
     */
    @SerializedName("roleScopeTagIds")
    @Expose
    public java.util.List<String> roleScopeTagIds;

    /**
     * The Assignments.
     * The associated group assignments for this WindowsDefenderApplicationControl supplemental policy.
     */
    public WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionPage assignments;

    /**
     * The Deploy Summary.
     * WindowsDefenderApplicationControl supplemental policy deployment summary.
     */
    @SerializedName("deploySummary")
    @Expose
    public WindowsDefenderApplicationControlSupplementalPolicyDeploymentSummary deploySummary;

    /**
     * The Device Statuses.
     * The list of device deployment states for this WindowsDefenderApplicationControl supplemental policy.
     */
    public WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionPage deviceStatuses;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("assignments")) {
            final WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionResponse response = new WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionResponse();
            if (json.has("assignments@odata.nextLink")) {
                response.nextLink = json.get("assignments@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("assignments").toString(), JsonObject[].class);
            final WindowsDefenderApplicationControlSupplementalPolicyAssignment[] array = new WindowsDefenderApplicationControlSupplementalPolicyAssignment[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), WindowsDefenderApplicationControlSupplementalPolicyAssignment.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            assignments = new WindowsDefenderApplicationControlSupplementalPolicyAssignmentCollectionPage(response, null);
        }

        if (json.has("deviceStatuses")) {
            final WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionResponse response = new WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionResponse();
            if (json.has("deviceStatuses@odata.nextLink")) {
                response.nextLink = json.get("deviceStatuses@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("deviceStatuses").toString(), JsonObject[].class);
            final WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus[] array = new WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatus.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            deviceStatuses = new WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusCollectionPage(response, null);
        }
    }
}
