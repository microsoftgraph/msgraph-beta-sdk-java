// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Acl;
import com.microsoft.graph.models.extensions.ExternalItemContent;
import com.microsoft.graph.models.extensions.Properties;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the External Item.
 */
public class ExternalItem extends Entity implements IJsonBackedObject {


    /**
     * The Acl.
     * An array of access control entries. Each entry specifies the access granted to a user or group. Required.
     */
    @SerializedName(value = "acl", alternate = {"Acl"})
    @Expose
    public java.util.List<Acl> acl;

    /**
     * The Content.
     * A plain-text  representation of the contents of the item. The text in this property is full-text indexed. Optional.
     */
    @SerializedName(value = "content", alternate = {"Content"})
    @Expose
    public ExternalItemContent content;

    /**
     * The Properties.
     * A property bag with the properties of the item. The properties MUST conform to the schema defined for the externalConnection. Required.
     */
    @SerializedName(value = "properties", alternate = {"Properties"})
    @Expose
    public Properties properties;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
