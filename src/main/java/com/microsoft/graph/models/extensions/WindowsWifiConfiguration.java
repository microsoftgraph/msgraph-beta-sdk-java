// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.MeteredConnectionLimitType;
import com.microsoft.graph.models.generated.WiFiProxySetting;
import com.microsoft.graph.models.generated.WiFiSecurityType;
import com.microsoft.graph.models.extensions.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Wifi Configuration.
 */
public class WindowsWifiConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Connect Automatically.
     * Specify whether the wifi connection should connect automatically when in range.
     */
    @SerializedName(value = "connectAutomatically", alternate = {"ConnectAutomatically"})
    @Expose
    public Boolean connectAutomatically;

    /**
     * The Connect To Preferred Network.
     * Specify whether the wifi connection should connect to more preferred networks when already connected to this one.  Requires ConnectAutomatically to be true.
     */
    @SerializedName(value = "connectToPreferredNetwork", alternate = {"ConnectToPreferredNetwork"})
    @Expose
    public Boolean connectToPreferredNetwork;

    /**
     * The Connect When Network Name Is Hidden.
     * Specify whether the wifi connection should connect automatically even when the SSID is not broadcasting.
     */
    @SerializedName(value = "connectWhenNetworkNameIsHidden", alternate = {"ConnectWhenNetworkNameIsHidden"})
    @Expose
    public Boolean connectWhenNetworkNameIsHidden;

    /**
     * The Force FIPSCompliance.
     * Specify whether to force FIPS compliance.
     */
    @SerializedName(value = "forceFIPSCompliance", alternate = {"ForceFIPSCompliance"})
    @Expose
    public Boolean forceFIPSCompliance;

    /**
     * The Metered Connection Limit.
     * Specify the metered connection limit type for the wifi connection.
     */
    @SerializedName(value = "meteredConnectionLimit", alternate = {"MeteredConnectionLimit"})
    @Expose
    public MeteredConnectionLimitType meteredConnectionLimit;

    /**
     * The Network Name.
     * Specify the network configuration name.
     */
    @SerializedName(value = "networkName", alternate = {"NetworkName"})
    @Expose
    public String networkName;

    /**
     * The Pre Shared Key.
     * This is the pre-shared key for WPA Personal Wi-Fi network.
     */
    @SerializedName(value = "preSharedKey", alternate = {"PreSharedKey"})
    @Expose
    public String preSharedKey;

    /**
     * The Proxy Automatic Configuration Url.
     * Specify the URL for the proxy server configuration script.
     */
    @SerializedName(value = "proxyAutomaticConfigurationUrl", alternate = {"ProxyAutomaticConfigurationUrl"})
    @Expose
    public String proxyAutomaticConfigurationUrl;

    /**
     * The Proxy Manual Address.
     * Specify the IP address for the proxy server.
     */
    @SerializedName(value = "proxyManualAddress", alternate = {"ProxyManualAddress"})
    @Expose
    public String proxyManualAddress;

    /**
     * The Proxy Manual Port.
     * Specify the port for the proxy server.
     */
    @SerializedName(value = "proxyManualPort", alternate = {"ProxyManualPort"})
    @Expose
    public Integer proxyManualPort;

    /**
     * The Proxy Setting.
     * Specify the proxy setting for Wi-Fi configuration
     */
    @SerializedName(value = "proxySetting", alternate = {"ProxySetting"})
    @Expose
    public WiFiProxySetting proxySetting;

    /**
     * The Ssid.
     * Specify the SSID of the wifi connection.
     */
    @SerializedName(value = "ssid", alternate = {"Ssid"})
    @Expose
    public String ssid;

    /**
     * The Wifi Security Type.
     * Specify the Wifi Security Type.
     */
    @SerializedName(value = "wifiSecurityType", alternate = {"WifiSecurityType"})
    @Expose
    public WiFiSecurityType wifiSecurityType;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
