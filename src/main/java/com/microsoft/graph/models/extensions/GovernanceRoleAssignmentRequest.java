// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.GovernanceSchedule;
import com.microsoft.graph.models.extensions.GovernanceRoleAssignmentRequestStatus;
import com.microsoft.graph.models.extensions.GovernanceResource;
import com.microsoft.graph.models.extensions.GovernanceRoleDefinition;
import com.microsoft.graph.models.extensions.GovernanceSubject;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Governance Role Assignment Request.
 */
public class GovernanceRoleAssignmentRequest extends Entity implements IJsonBackedObject {


    /**
     * The Assignment State.
     * Required. The state of the assignment. The value can be  Eligible for eligible assignment Active - if it is directly assigned Active by administrators, or activated on an eligible assignment by the users.
     */
    @SerializedName(value = "assignmentState", alternate = {"AssignmentState"})
    @Expose
    public String assignmentState;

    /**
     * The Linked Eligible Role Assignment Id.
     * If this is a request for role activation, it represents the id of the eligible assignment being referred; Otherwise, the value is null.
     */
    @SerializedName(value = "linkedEligibleRoleAssignmentId", alternate = {"LinkedEligibleRoleAssignmentId"})
    @Expose
    public String linkedEligibleRoleAssignmentId;

    /**
     * The Reason.
     * A message provided by users and administrators when create the request about why it is needed.
     */
    @SerializedName(value = "reason", alternate = {"Reason"})
    @Expose
    public String reason;

    /**
     * The Requested Date Time.
     * Read-only. The request create time. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'
     */
    @SerializedName(value = "requestedDateTime", alternate = {"RequestedDateTime"})
    @Expose
    public java.util.Calendar requestedDateTime;

    /**
     * The Resource Id.
     * Required. The id of the resource which the role assignment request is associated with.
     */
    @SerializedName(value = "resourceId", alternate = {"ResourceId"})
    @Expose
    public String resourceId;

    /**
     * The Role Definition Id.
     * Required. The id of the role definition which the role assignment request is associated with.
     */
    @SerializedName(value = "roleDefinitionId", alternate = {"RoleDefinitionId"})
    @Expose
    public String roleDefinitionId;

    /**
     * The Schedule.
     * The schedule object of the role assignment request.
     */
    @SerializedName(value = "schedule", alternate = {"Schedule"})
    @Expose
    public GovernanceSchedule schedule;

    /**
     * The Status.
     * The status of the role assignment request.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
    public GovernanceRoleAssignmentRequestStatus status;

    /**
     * The Subject Id.
     * Required. The id of the subject which the role assignment request is associated with.
     */
    @SerializedName(value = "subjectId", alternate = {"SubjectId"})
    @Expose
    public String subjectId;

    /**
     * The Type.
     * Required. Representing the type of the operation on the role assignment. The value can be AdminAdd: Administrators assign users/groups to roles;UserAdd: Users activate eligible assignments; AdminUpdate: Administrators change existing role assignmentsAdminRemove: Administrators remove users/groups from roles;UserRemove: Users deactivate active assignments;UserExtend: Users request to extend their expiring assignments;AdminExtend: Administrators extend expiring assignments.UserRenew: Users request to renew their expired assignments;AdminRenew: Administrators extend expiring assignments.
     */
    @SerializedName(value = "type", alternate = {"Type"})
    @Expose
    public String type;

    /**
     * The Resource.
     * Read-only. The resource that the request aims to.
     */
    @SerializedName(value = "resource", alternate = {"Resource"})
    @Expose
    public GovernanceResource resource;

    /**
     * The Role Definition.
     * Read-only. The role definition that the request aims to.
     */
    @SerializedName(value = "roleDefinition", alternate = {"RoleDefinition"})
    @Expose
    public GovernanceRoleDefinition roleDefinition;

    /**
     * The Subject.
     * Read-only. The user/group principal.
     */
    @SerializedName(value = "subject", alternate = {"Subject"})
    @Expose
    public GovernanceSubject subject;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
