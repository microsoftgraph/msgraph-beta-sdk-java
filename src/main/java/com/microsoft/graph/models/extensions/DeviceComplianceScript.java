// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.RunAsAccountType;
import com.microsoft.graph.models.extensions.DeviceHealthScriptAssignment;
import com.microsoft.graph.models.extensions.DeviceComplianceScriptDeviceState;
import com.microsoft.graph.models.extensions.DeviceComplianceScriptRunSummary;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptAssignmentCollectionPage;
import com.microsoft.graph.requests.extensions.DeviceComplianceScriptDeviceStateCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Compliance Script.
 */
public class DeviceComplianceScript extends Entity implements IJsonBackedObject {


    /**
     * The Created Date Time.
     * The timestamp of when the device compliance script was created. This property is read-only.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
    public java.util.Calendar createdDateTime;

    /**
     * The Description.
     * Description of the device compliance script
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Detection Script Content.
     * The entire content of the detection powershell script
     */
    @SerializedName(value = "detectionScriptContent", alternate = {"DetectionScriptContent"})
    @Expose
    public byte[] detectionScriptContent;

    /**
     * The Display Name.
     * Name of the device compliance script
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Enforce Signature Check.
     * Indicate whether the script signature needs be checked
     */
    @SerializedName(value = "enforceSignatureCheck", alternate = {"EnforceSignatureCheck"})
    @Expose
    public Boolean enforceSignatureCheck;

    /**
     * The Last Modified Date Time.
     * The timestamp of when the device compliance script was modified. This property is read-only.
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Publisher.
     * Name of the device compliance script publisher
     */
    @SerializedName(value = "publisher", alternate = {"Publisher"})
    @Expose
    public String publisher;

    /**
     * The Role Scope Tag Ids.
     * List of Scope Tag IDs for the device compliance script
     */
    @SerializedName(value = "roleScopeTagIds", alternate = {"RoleScopeTagIds"})
    @Expose
    public java.util.List<String> roleScopeTagIds;

    /**
     * The Run As32Bit.
     * Indicate whether PowerShell script(s) should run as 32-bit
     */
    @SerializedName(value = "runAs32Bit", alternate = {"RunAs32Bit"})
    @Expose
    public Boolean runAs32Bit;

    /**
     * The Run As Account.
     * Indicates the type of execution context
     */
    @SerializedName(value = "runAsAccount", alternate = {"RunAsAccount"})
    @Expose
    public RunAsAccountType runAsAccount;

    /**
     * The Version.
     * Version of the device compliance script
     */
    @SerializedName(value = "version", alternate = {"Version"})
    @Expose
    public String version;

    /**
     * The Assignments.
     * The list of group assignments for the device compliance script
     */
    @SerializedName(value = "assignments", alternate = {"Assignments"})
    @Expose
    public DeviceHealthScriptAssignmentCollectionPage assignments;

    /**
     * The Device Run States.
     * List of run states for the device compliance script across all devices
     */
    @SerializedName(value = "deviceRunStates", alternate = {"DeviceRunStates"})
    @Expose
    public DeviceComplianceScriptDeviceStateCollectionPage deviceRunStates;

    /**
     * The Run Summary.
     * High level run summary for device compliance script.
     */
    @SerializedName(value = "runSummary", alternate = {"RunSummary"})
    @Expose
    public DeviceComplianceScriptRunSummary runSummary;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("assignments")) {
            assignments = serializer.deserializeObject(json.get("assignments").toString(), DeviceHealthScriptAssignmentCollectionPage.class);
        }

        if (json.has("deviceRunStates")) {
            deviceRunStates = serializer.deserializeObject(json.get("deviceRunStates").toString(), DeviceComplianceScriptDeviceStateCollectionPage.class);
        }
    }
}
