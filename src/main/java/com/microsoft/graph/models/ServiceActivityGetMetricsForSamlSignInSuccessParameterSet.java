// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;

import com.microsoft.graph.models.ServiceActivityValueMetric;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Service Activity Get Metrics For Saml Sign In Success Parameter Set.
 */
public class ServiceActivityGetMetricsForSamlSignInSuccessParameterSet {
    /**
     * The inclusive Interval Start Date Time.
     * 
     */
    @SerializedName(value = "inclusiveIntervalStartDateTime", alternate = {"InclusiveIntervalStartDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime inclusiveIntervalStartDateTime;

    /**
     * The exclusive Interval End Date Time.
     * 
     */
    @SerializedName(value = "exclusiveIntervalEndDateTime", alternate = {"ExclusiveIntervalEndDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime exclusiveIntervalEndDateTime;

    /**
     * The aggregation Interval In Minutes.
     * 
     */
    @SerializedName(value = "aggregationIntervalInMinutes", alternate = {"AggregationIntervalInMinutes"})
    @Expose
	@Nullable
    public Integer aggregationIntervalInMinutes;


    /**
     * Instiaciates a new ServiceActivityGetMetricsForSamlSignInSuccessParameterSet
     */
    public ServiceActivityGetMetricsForSamlSignInSuccessParameterSet() {}
    /**
     * Instiaciates a new ServiceActivityGetMetricsForSamlSignInSuccessParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected ServiceActivityGetMetricsForSamlSignInSuccessParameterSet(@Nonnull final ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder builder) {
        this.inclusiveIntervalStartDateTime = builder.inclusiveIntervalStartDateTime;
        this.exclusiveIntervalEndDateTime = builder.exclusiveIntervalEndDateTime;
        this.aggregationIntervalInMinutes = builder.aggregationIntervalInMinutes;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder newBuilder() {
        return new ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder();
    }
    /**
     * Fluent builder for the ServiceActivityGetMetricsForSamlSignInSuccessParameterSet
     */
    public static final class ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder {
        /**
         * The inclusiveIntervalStartDateTime parameter value
         */
        @Nullable
        protected java.time.OffsetDateTime inclusiveIntervalStartDateTime;
        /**
         * Sets the InclusiveIntervalStartDateTime
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder withInclusiveIntervalStartDateTime(@Nullable final java.time.OffsetDateTime val) {
            this.inclusiveIntervalStartDateTime = val;
            return this;
        }
        /**
         * The exclusiveIntervalEndDateTime parameter value
         */
        @Nullable
        protected java.time.OffsetDateTime exclusiveIntervalEndDateTime;
        /**
         * Sets the ExclusiveIntervalEndDateTime
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder withExclusiveIntervalEndDateTime(@Nullable final java.time.OffsetDateTime val) {
            this.exclusiveIntervalEndDateTime = val;
            return this;
        }
        /**
         * The aggregationIntervalInMinutes parameter value
         */
        @Nullable
        protected Integer aggregationIntervalInMinutes;
        /**
         * Sets the AggregationIntervalInMinutes
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder withAggregationIntervalInMinutes(@Nullable final Integer val) {
            this.aggregationIntervalInMinutes = val;
            return this;
        }
        /**
         * Instanciates a new ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder
         */
        @Nullable
        protected ServiceActivityGetMetricsForSamlSignInSuccessParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public ServiceActivityGetMetricsForSamlSignInSuccessParameterSet build() {
            return new ServiceActivityGetMetricsForSamlSignInSuccessParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.inclusiveIntervalStartDateTime != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("inclusiveIntervalStartDateTime", inclusiveIntervalStartDateTime));
        }
        if(this.exclusiveIntervalEndDateTime != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("exclusiveIntervalEndDateTime", exclusiveIntervalEndDateTime));
        }
        if(this.aggregationIntervalInMinutes != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("aggregationIntervalInMinutes", aggregationIntervalInMinutes));
        }
        return result;
    }
}
