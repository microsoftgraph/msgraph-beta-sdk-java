// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.MetaDataKeyStringPair;
import com.microsoft.graph.models.MetaDataKeyValuePair;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Server Processed Content.
 */
public class ServerProcessedContent implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Component Dependencies.
     * A key-value map where keys are string identifiers and values are component ids. SharePoint servers might decide to use this hint to preload the script for corresponding components for performance boost.
     */
    @SerializedName(value = "componentDependencies", alternate = {"ComponentDependencies"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyStringPair> componentDependencies;

    /**
     * The Custom Metadata.
     * A key-value map where keys are string identifier and values are object of custom key-value pair.
     */
    @SerializedName(value = "customMetadata", alternate = {"CustomMetadata"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyValuePair> customMetadata;

    /**
     * The Html Strings.
     * A key-value map where keys are string identifiers and values are rich text with HTML format. SharePoint servers treat the values as HTML content and run services like safety checks, search index and link fixup on them.
     */
    @SerializedName(value = "htmlStrings", alternate = {"HtmlStrings"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyStringPair> htmlStrings;

    /**
     * The Image Sources.
     * A key-value map where keys are string identifiers and values are image sources. SharePoint servers treat the values as image sources and run services like search index and link fixup on them.
     */
    @SerializedName(value = "imageSources", alternate = {"ImageSources"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyStringPair> imageSources;

    /**
     * The Links.
     * A key-value map where keys are string identifiers and values are links. SharePoint servers treat the values as links and run services like link fixup on them.
     */
    @SerializedName(value = "links", alternate = {"Links"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyStringPair> links;

    /**
     * The Searchable Plain Texts.
     * A key-value map where keys are string identifiers and values are strings that should be search indexed.
     */
    @SerializedName(value = "searchablePlainTexts", alternate = {"SearchablePlainTexts"})
    @Expose
	@Nullable
    public java.util.List<MetaDataKeyStringPair> searchablePlainTexts;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
