// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.InboundOutboundPolicyConfiguration;
import com.microsoft.graph.models.CrossTenantAccessPolicyB2BSetting;
import com.microsoft.graph.models.CrossTenantAccessPolicyInboundTrust;
import com.microsoft.graph.models.TemplateApplicationLevel;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Multi Tenant Organization Partner Configuration Template.
 */
public class MultiTenantOrganizationPartnerConfigurationTemplate extends Entity implements IJsonBackedObject {


    /**
     * The Automatic User Consent Settings.
     * Determines the partner-specific configuration for automatic user consent settings. Unless configured, the inboundAllowed and outboundAllowed properties are null and inherit from the default settings, which is always false.
     */
    @SerializedName(value = "automaticUserConsentSettings", alternate = {"AutomaticUserConsentSettings"})
    @Expose
	@Nullable
    public InboundOutboundPolicyConfiguration automaticUserConsentSettings;

    /**
     * The B2b Collaboration Inbound.
     * Defines your partner-specific configuration for users from other organizations accessing your resources via Microsoft Entra B2B collaboration.
     */
    @SerializedName(value = "b2bCollaborationInbound", alternate = {"B2bCollaborationInbound"})
    @Expose
	@Nullable
    public CrossTenantAccessPolicyB2BSetting b2bCollaborationInbound;

    /**
     * The B2b Collaboration Outbound.
     * Defines your partner-specific configuration for users in your organization going outbound to access resources in another organization via Microsoft Entra B2B collaboration.
     */
    @SerializedName(value = "b2bCollaborationOutbound", alternate = {"B2bCollaborationOutbound"})
    @Expose
	@Nullable
    public CrossTenantAccessPolicyB2BSetting b2bCollaborationOutbound;

    /**
     * The B2b Direct Connect Inbound.
     * Defines your partner-specific configuration for users from other organizations accessing your resources via Azure B2B direct connect.
     */
    @SerializedName(value = "b2bDirectConnectInbound", alternate = {"B2bDirectConnectInbound"})
    @Expose
	@Nullable
    public CrossTenantAccessPolicyB2BSetting b2bDirectConnectInbound;

    /**
     * The B2b Direct Connect Outbound.
     * Defines your partner-specific configuration for users in your organization going outbound to access resources in another organization via Microsoft Entra B2B direct connect.
     */
    @SerializedName(value = "b2bDirectConnectOutbound", alternate = {"B2bDirectConnectOutbound"})
    @Expose
	@Nullable
    public CrossTenantAccessPolicyB2BSetting b2bDirectConnectOutbound;

    /**
     * The Inbound Trust.
     * Determines the partner-specific configuration for trusting other Conditional Access claims from external Microsoft Entra organizations.
     */
    @SerializedName(value = "inboundTrust", alternate = {"InboundTrust"})
    @Expose
	@Nullable
    public CrossTenantAccessPolicyInboundTrust inboundTrust;

    /**
     * The Template Application Level.
     * Specifies whether the template will be applied to partner configuration settings of certain tenants. The possible values are: none, newPartners, existingPartners, unknownFutureValue. You can also specify multiple values like newPartners,existingPartners (default). none indicates the template isn't applied to any new or existing partner tenants. newPartners indicates the template is applied to new partner tenants. existingPartners indicates the template is applied to existing partner tenants, those who already had partner-specific partner configurations in place.
     */
    @SerializedName(value = "templateApplicationLevel", alternate = {"TemplateApplicationLevel"})
    @Expose
	@Nullable
    public EnumSet<TemplateApplicationLevel> templateApplicationLevel;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
