// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.AppScope;
import com.microsoft.graph.models.DirectoryObject;
import com.microsoft.graph.models.UnifiedRoleDefinition;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.AppScopeCollectionPage;
import com.microsoft.graph.requests.DirectoryObjectCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Unified Role Assignment Multiple.
 */
public class UnifiedRoleAssignmentMultiple extends Entity implements IJsonBackedObject {


    /**
     * The App Scope Ids.
     * Ids of the app specific scopes when the assignment scopes are app specific. The scopes of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. Use / for tenant-wide scope. App scopes are scopes that are defined and understood by this application only.
     */
    @SerializedName(value = "appScopeIds", alternate = {"AppScopeIds"})
    @Expose
	@Nullable
    public java.util.List<String> appScopeIds;

    /**
     * The Condition.
     * 
     */
    @SerializedName(value = "condition", alternate = {"Condition"})
    @Expose
	@Nullable
    public String condition;

    /**
     * The Description.
     * Description of the role assignment.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Directory Scope Ids.
     * Ids of the directory objects representing the scopes of the assignment. The scopes of an assignment determine the set of resources for which the principals have been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. App scopes are scopes that are defined and understood by this application only.
     */
    @SerializedName(value = "directoryScopeIds", alternate = {"DirectoryScopeIds"})
    @Expose
	@Nullable
    public java.util.List<String> directoryScopeIds;

    /**
     * The Display Name.
     * Name of the role assignment. Required.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The Principal Ids.
     * Identifiers of the principals to which the assignment is granted.  Supports $filter (any operator only).
     */
    @SerializedName(value = "principalIds", alternate = {"PrincipalIds"})
    @Expose
	@Nullable
    public java.util.List<String> principalIds;

    /**
     * The Role Definition Id.
     * Identifier of the unifiedRoleDefinition the assignment is for.
     */
    @SerializedName(value = "roleDefinitionId", alternate = {"RoleDefinitionId"})
    @Expose
	@Nullable
    public String roleDefinitionId;

    /**
     * The App Scopes.
     * Read-only collection with details of the app specific scopes when the assignment scopes are app specific. Containment entity. Read-only.
     */
    @SerializedName(value = "appScopes", alternate = {"AppScopes"})
    @Expose
	@Nullable
    public AppScopeCollectionPage appScopes;

    /**
     * The Directory Scopes.
     * Read-only collection referencing the directory objects that are scope of the assignment. Provided so that callers can get the directory objects using $expand at the same time as getting the role assignment. Read-only.  Supports $expand.
     */
	@Nullable
    public DirectoryObjectCollectionPage directoryScopes;

    /**
     * The Principals.
     * Read-only collection referencing the assigned principals. Provided so that callers can get the principals using $expand at the same time as getting the role assignment. Read-only.  Supports $expand.
     */
	@Nullable
    public DirectoryObjectCollectionPage principals;

    /**
     * The Role Definition.
     * Specifies the roleDefinition that the assignment is for. Provided so that callers can get the role definition using $expand at the same time as getting the role assignment.  Supports $filter (eq operator on id, isBuiltIn, and displayName, and startsWith operator on displayName)  and $expand.
     */
    @SerializedName(value = "roleDefinition", alternate = {"RoleDefinition"})
    @Expose
	@Nullable
    public UnifiedRoleDefinition roleDefinition;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("appScopes")) {
            appScopes = serializer.deserializeObject(json.get("appScopes"), AppScopeCollectionPage.class);
        }

        if (json.has("directoryScopes")) {
            directoryScopes = serializer.deserializeObject(json.get("directoryScopes"), DirectoryObjectCollectionPage.class);
        }

        if (json.has("principals")) {
            principals = serializer.deserializeObject(json.get("principals"), DirectoryObjectCollectionPage.class);
        }
    }
}
