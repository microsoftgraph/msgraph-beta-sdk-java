// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;

import com.microsoft.graph.models.ClassificationJobResponse;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Data Classification Service Classify File Parameter Set.
 */
public class DataClassificationServiceClassifyFileParameterSet {
    /**
     * The file.
     * 
     */
    @SerializedName(value = "file", alternate = {"File"})
    @Expose
	@Nullable
    public byte[] file;

    /**
     * The sensitive Type Ids.
     * 
     */
    @SerializedName(value = "sensitiveTypeIds", alternate = {"SensitiveTypeIds"})
    @Expose
	@Nullable
    public java.util.List<String> sensitiveTypeIds;


    /**
     * Instiaciates a new DataClassificationServiceClassifyFileParameterSet
     */
    public DataClassificationServiceClassifyFileParameterSet() {}
    /**
     * Instiaciates a new DataClassificationServiceClassifyFileParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected DataClassificationServiceClassifyFileParameterSet(@Nonnull final DataClassificationServiceClassifyFileParameterSetBuilder builder) {
        this.file = builder.file;
        this.sensitiveTypeIds = builder.sensitiveTypeIds;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static DataClassificationServiceClassifyFileParameterSetBuilder newBuilder() {
        return new DataClassificationServiceClassifyFileParameterSetBuilder();
    }
    /**
     * Fluent builder for the DataClassificationServiceClassifyFileParameterSet
     */
    public static final class DataClassificationServiceClassifyFileParameterSetBuilder {
        /**
         * The file parameter value
         */
        @Nullable
        protected byte[] file;
        /**
         * Sets the File
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyFileParameterSetBuilder withFile(@Nullable final byte[] val) {
            this.file = val;
            return this;
        }
        /**
         * The sensitiveTypeIds parameter value
         */
        @Nullable
        protected java.util.List<String> sensitiveTypeIds;
        /**
         * Sets the SensitiveTypeIds
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public DataClassificationServiceClassifyFileParameterSetBuilder withSensitiveTypeIds(@Nullable final java.util.List<String> val) {
            this.sensitiveTypeIds = val;
            return this;
        }
        /**
         * Instanciates a new DataClassificationServiceClassifyFileParameterSetBuilder
         */
        @Nullable
        protected DataClassificationServiceClassifyFileParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public DataClassificationServiceClassifyFileParameterSet build() {
            return new DataClassificationServiceClassifyFileParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.file != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("file", file));
        }
        if(this.sensitiveTypeIds != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("sensitiveTypeIds", sensitiveTypeIds));
        }
        return result;
    }
}
