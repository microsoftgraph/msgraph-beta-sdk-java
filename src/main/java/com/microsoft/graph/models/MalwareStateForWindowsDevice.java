package com.microsoft.graph.models;

import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.time.OffsetDateTime;
import java.util.function.Consumer;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
/** Malware state for a windows device */
public class MalwareStateForWindowsDevice extends Entity implements Parsable {
    /** Number of times the malware is detected */
    private Integer _detectionCount;
    /** Device name */
    private String _deviceName;
    /** Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning. */
    private WindowsMalwareExecutionState _executionState;
    /** Initial detection datetime of the malware */
    private OffsetDateTime _initialDetectionDateTime;
    /** The last time this particular threat was changed */
    private OffsetDateTime _lastStateChangeDateTime;
    /** Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared. */
    private WindowsMalwareThreatState _threatState;
    /**
     * Instantiates a new malwareStateForWindowsDevice and sets the default values.
     * @return a void
     */
    @javax.annotation.Nullable
    public MalwareStateForWindowsDevice() {
        super();
        this.setOdataType("#microsoft.graph.malwareStateForWindowsDevice");
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a malwareStateForWindowsDevice
     */
    @javax.annotation.Nonnull
    public static MalwareStateForWindowsDevice createFromDiscriminatorValue(@javax.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        return new MalwareStateForWindowsDevice();
    }
    /**
     * Gets the detectionCount property value. Number of times the malware is detected
     * @return a integer
     */
    @javax.annotation.Nullable
    public Integer getDetectionCount() {
        return this._detectionCount;
    }
    /**
     * Gets the deviceName property value. Device name
     * @return a string
     */
    @javax.annotation.Nullable
    public String getDeviceName() {
        return this._deviceName;
    }
    /**
     * Gets the executionState property value. Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
     * @return a windowsMalwareExecutionState
     */
    @javax.annotation.Nullable
    public WindowsMalwareExecutionState getExecutionState() {
        return this._executionState;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, Consumer<ParseNode>>
     */
    @javax.annotation.Nonnull
    public Map<String, Consumer<ParseNode>> getFieldDeserializers() {
        final MalwareStateForWindowsDevice currentObject = this;
        return new HashMap<String, Consumer<ParseNode>>(super.getFieldDeserializers()) {{
            this.put("detectionCount", (n) -> { currentObject.setDetectionCount(n.getIntegerValue()); });
            this.put("deviceName", (n) -> { currentObject.setDeviceName(n.getStringValue()); });
            this.put("executionState", (n) -> { currentObject.setExecutionState(n.getEnumValue(WindowsMalwareExecutionState.class)); });
            this.put("initialDetectionDateTime", (n) -> { currentObject.setInitialDetectionDateTime(n.getOffsetDateTimeValue()); });
            this.put("lastStateChangeDateTime", (n) -> { currentObject.setLastStateChangeDateTime(n.getOffsetDateTimeValue()); });
            this.put("threatState", (n) -> { currentObject.setThreatState(n.getEnumValue(WindowsMalwareThreatState.class)); });
        }};
    }
    /**
     * Gets the initialDetectionDateTime property value. Initial detection datetime of the malware
     * @return a OffsetDateTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getInitialDetectionDateTime() {
        return this._initialDetectionDateTime;
    }
    /**
     * Gets the lastStateChangeDateTime property value. The last time this particular threat was changed
     * @return a OffsetDateTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getLastStateChangeDateTime() {
        return this._lastStateChangeDateTime;
    }
    /**
     * Gets the threatState property value. Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
     * @return a windowsMalwareThreatState
     */
    @javax.annotation.Nullable
    public WindowsMalwareThreatState getThreatState() {
        return this._threatState;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     * @return a void
     */
    @javax.annotation.Nonnull
    public void serialize(@javax.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        super.serialize(writer);
        writer.writeIntegerValue("detectionCount", this.getDetectionCount());
        writer.writeStringValue("deviceName", this.getDeviceName());
        writer.writeEnumValue("executionState", this.getExecutionState());
        writer.writeOffsetDateTimeValue("initialDetectionDateTime", this.getInitialDetectionDateTime());
        writer.writeOffsetDateTimeValue("lastStateChangeDateTime", this.getLastStateChangeDateTime());
        writer.writeEnumValue("threatState", this.getThreatState());
    }
    /**
     * Sets the detectionCount property value. Number of times the malware is detected
     * @param value Value to set for the detectionCount property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setDetectionCount(@javax.annotation.Nullable final Integer value) {
        this._detectionCount = value;
    }
    /**
     * Sets the deviceName property value. Device name
     * @param value Value to set for the deviceName property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setDeviceName(@javax.annotation.Nullable final String value) {
        this._deviceName = value;
    }
    /**
     * Sets the executionState property value. Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
     * @param value Value to set for the executionState property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setExecutionState(@javax.annotation.Nullable final WindowsMalwareExecutionState value) {
        this._executionState = value;
    }
    /**
     * Sets the initialDetectionDateTime property value. Initial detection datetime of the malware
     * @param value Value to set for the initialDetectionDateTime property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setInitialDetectionDateTime(@javax.annotation.Nullable final OffsetDateTime value) {
        this._initialDetectionDateTime = value;
    }
    /**
     * Sets the lastStateChangeDateTime property value. The last time this particular threat was changed
     * @param value Value to set for the lastStateChangeDateTime property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setLastStateChangeDateTime(@javax.annotation.Nullable final OffsetDateTime value) {
        this._lastStateChangeDateTime = value;
    }
    /**
     * Sets the threatState property value. Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
     * @param value Value to set for the threatState property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setThreatState(@javax.annotation.Nullable final WindowsMalwareThreatState value) {
        this._threatState = value;
    }
}
