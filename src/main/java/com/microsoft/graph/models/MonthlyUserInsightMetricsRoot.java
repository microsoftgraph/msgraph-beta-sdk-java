// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.ActiveUsersMetricCollectionPage;
import com.microsoft.graph.requests.ActiveUsersBreakdownMetricCollectionPage;
import com.microsoft.graph.requests.AuthenticationsMetricCollectionPage;
import com.microsoft.graph.requests.MonthlyInactiveUsersMetricCollectionPage;
import com.microsoft.graph.requests.MonthlyInactiveUsersByApplicationMetricCollectionPage;
import com.microsoft.graph.requests.MfaCompletionMetricCollectionPage;
import com.microsoft.graph.requests.UserRequestsMetricCollectionPage;
import com.microsoft.graph.requests.UserSignUpMetricCollectionPage;
import com.microsoft.graph.requests.InsightSummaryCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Monthly User Insight Metrics Root.
 */
public class MonthlyUserInsightMetricsRoot extends Entity implements IJsonBackedObject {


    /**
     * The Active Users.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.ActiveUsersMetricCollectionPage activeUsers;

    /**
     * The Active Users Breakdown.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.ActiveUsersBreakdownMetricCollectionPage activeUsersBreakdown;

    /**
     * The Authentications.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.AuthenticationsMetricCollectionPage authentications;

    /**
     * The Inactive Users.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.MonthlyInactiveUsersMetricCollectionPage inactiveUsers;

    /**
     * The Inactive Users By Application.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.MonthlyInactiveUsersByApplicationMetricCollectionPage inactiveUsersByApplication;

    /**
     * The Mfa Completions.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.MfaCompletionMetricCollectionPage mfaCompletions;

    /**
     * The Requests.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.UserRequestsMetricCollectionPage requests;

    /**
     * The Sign Ups.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.UserSignUpMetricCollectionPage signUps;

    /**
     * The Summary.
     * 
     */
	@Nullable
    public com.microsoft.graph.requests.InsightSummaryCollectionPage summary;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("activeUsers")) {
            activeUsers = serializer.deserializeObject(json.get("activeUsers"), com.microsoft.graph.requests.ActiveUsersMetricCollectionPage.class);
        }

        if (json.has("activeUsersBreakdown")) {
            activeUsersBreakdown = serializer.deserializeObject(json.get("activeUsersBreakdown"), com.microsoft.graph.requests.ActiveUsersBreakdownMetricCollectionPage.class);
        }

        if (json.has("authentications")) {
            authentications = serializer.deserializeObject(json.get("authentications"), com.microsoft.graph.requests.AuthenticationsMetricCollectionPage.class);
        }

        if (json.has("inactiveUsers")) {
            inactiveUsers = serializer.deserializeObject(json.get("inactiveUsers"), com.microsoft.graph.requests.MonthlyInactiveUsersMetricCollectionPage.class);
        }

        if (json.has("inactiveUsersByApplication")) {
            inactiveUsersByApplication = serializer.deserializeObject(json.get("inactiveUsersByApplication"), com.microsoft.graph.requests.MonthlyInactiveUsersByApplicationMetricCollectionPage.class);
        }

        if (json.has("mfaCompletions")) {
            mfaCompletions = serializer.deserializeObject(json.get("mfaCompletions"), com.microsoft.graph.requests.MfaCompletionMetricCollectionPage.class);
        }

        if (json.has("requests")) {
            requests = serializer.deserializeObject(json.get("requests"), com.microsoft.graph.requests.UserRequestsMetricCollectionPage.class);
        }

        if (json.has("signUps")) {
            signUps = serializer.deserializeObject(json.get("signUps"), com.microsoft.graph.requests.UserSignUpMetricCollectionPage.class);
        }

        if (json.has("summary")) {
            summary = serializer.deserializeObject(json.get("summary"), com.microsoft.graph.requests.InsightSummaryCollectionPage.class);
        }
    }
}
