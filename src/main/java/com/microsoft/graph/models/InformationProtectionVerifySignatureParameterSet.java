// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;

import com.microsoft.graph.models.VerificationResult;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Information Protection Verify Signature Parameter Set.
 * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
 */
@Deprecated
public class InformationProtectionVerifySignatureParameterSet {
    /**
     * The digest.
     * 
     */
    @SerializedName(value = "digest", alternate = {"Digest"})
    @Expose
	@Nonnull
    public byte[] digest;

    /**
     * The signature.
     * 
     */
    @SerializedName(value = "signature", alternate = {"Signature"})
    @Expose
	@Nonnull
    public byte[] signature;

    /**
     * The signing Key Id.
     * 
     */
    @SerializedName(value = "signingKeyId", alternate = {"SigningKeyId"})
    @Expose
	@Nullable
    public String signingKeyId;


    /**
     * Instiaciates a new InformationProtectionVerifySignatureParameterSet
     */
    public InformationProtectionVerifySignatureParameterSet() {}
    /**
     * Instiaciates a new InformationProtectionVerifySignatureParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected InformationProtectionVerifySignatureParameterSet(@Nonnull final InformationProtectionVerifySignatureParameterSetBuilder builder) {
        this.digest = builder.digest;
        this.signature = builder.signature;
        this.signingKeyId = builder.signingKeyId;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static InformationProtectionVerifySignatureParameterSetBuilder newBuilder() {
        return new InformationProtectionVerifySignatureParameterSetBuilder();
    }
    /**
     * Fluent builder for the InformationProtectionVerifySignatureParameterSet
     */
    public static final class InformationProtectionVerifySignatureParameterSetBuilder {
        /**
         * The digest parameter value
         */
        @Nullable
        protected byte[] digest;
        /**
         * Sets the Digest
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public InformationProtectionVerifySignatureParameterSetBuilder withDigest(@Nullable final byte[] val) {
            this.digest = val;
            return this;
        }
        /**
         * The signature parameter value
         */
        @Nullable
        protected byte[] signature;
        /**
         * Sets the Signature
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public InformationProtectionVerifySignatureParameterSetBuilder withSignature(@Nullable final byte[] val) {
            this.signature = val;
            return this;
        }
        /**
         * The signingKeyId parameter value
         */
        @Nullable
        protected String signingKeyId;
        /**
         * Sets the SigningKeyId
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public InformationProtectionVerifySignatureParameterSetBuilder withSigningKeyId(@Nullable final String val) {
            this.signingKeyId = val;
            return this;
        }
        /**
         * Instanciates a new InformationProtectionVerifySignatureParameterSetBuilder
         */
        @Nullable
        protected InformationProtectionVerifySignatureParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public InformationProtectionVerifySignatureParameterSet build() {
            return new InformationProtectionVerifySignatureParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.digest != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("digest", digest));
        }
        if(this.signature != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("signature", signature));
        }
        if(this.signingKeyId != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("signingKeyId", signingKeyId));
        }
        return result;
    }
}
