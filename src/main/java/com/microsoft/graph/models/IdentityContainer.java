// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.ConditionalAccessRoot;
import com.microsoft.graph.models.ContinuousAccessEvaluationPolicy;
import com.microsoft.graph.requests.IdentityApiConnectorCollectionPage;
import com.microsoft.graph.requests.AuthenticationEventListenerCollectionPage;
import com.microsoft.graph.requests.AuthenticationEventsFlowCollectionPage;
import com.microsoft.graph.requests.B2cIdentityUserFlowCollectionPage;
import com.microsoft.graph.requests.B2xIdentityUserFlowCollectionPage;
import com.microsoft.graph.requests.CustomAuthenticationExtensionCollectionPage;
import com.microsoft.graph.requests.IdentityProviderBaseCollectionPage;
import com.microsoft.graph.requests.IdentityUserFlowAttributeCollectionPage;
import com.microsoft.graph.requests.IdentityUserFlowCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Identity Container.
 */
public class IdentityContainer implements IJsonBackedObject {

    /** the OData type of the object as returned by the service */
    @SerializedName("@odata.type")
    @Expose
    @Nullable
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    @Nonnull
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Api Connectors.
     * Represents entry point for API connectors.
     */
    @SerializedName(value = "apiConnectors", alternate = {"ApiConnectors"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.IdentityApiConnectorCollectionPage apiConnectors;

    /**
     * The Authentication Event Listeners.
     * 
     */
    @SerializedName(value = "authenticationEventListeners", alternate = {"AuthenticationEventListeners"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.AuthenticationEventListenerCollectionPage authenticationEventListeners;

    /**
     * The Authentication Events Flows.
     * Represents the entry point for self-service sign up and sign in user flows in both Microsoft Entra workforce and customer tenants.
     */
    @SerializedName(value = "authenticationEventsFlows", alternate = {"AuthenticationEventsFlows"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.AuthenticationEventsFlowCollectionPage authenticationEventsFlows;

    /**
     * The B2c User Flows.
     * Represents entry point for B2C identity userflows.
     */
    @SerializedName(value = "b2cUserFlows", alternate = {"B2cUserFlows"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.B2cIdentityUserFlowCollectionPage b2cUserFlows;

    /**
     * The B2x User Flows.
     * Represents entry point for B2X and self-service sign-up identity userflows.
     */
    @SerializedName(value = "b2xUserFlows", alternate = {"B2xUserFlows"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.B2xIdentityUserFlowCollectionPage b2xUserFlows;

    /**
     * The Custom Authentication Extensions.
     * 
     */
    @SerializedName(value = "customAuthenticationExtensions", alternate = {"CustomAuthenticationExtensions"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.CustomAuthenticationExtensionCollectionPage customAuthenticationExtensions;

    /**
     * The Identity Providers.
     * Represents entry point for identity provider base.
     */
    @SerializedName(value = "identityProviders", alternate = {"IdentityProviders"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.IdentityProviderBaseCollectionPage identityProviders;

    /**
     * The User Flow Attributes.
     * Represents entry point for identity userflow attributes.
     */
    @SerializedName(value = "userFlowAttributes", alternate = {"UserFlowAttributes"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.IdentityUserFlowAttributeCollectionPage userFlowAttributes;

    /**
     * The User Flows.
     * 
     * @deprecated The identity/userflows API is deprecated and will stop returning data on January 2022. Please use the new b2cUserflows or b2xUserflows APIs.
     */
    @Deprecated
    @SerializedName(value = "userFlows", alternate = {"UserFlows"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.IdentityUserFlowCollectionPage userFlows;

    /**
     * The Conditional Access.
     * the entry point for the Conditional Access (CA) object model.
     */
    @SerializedName(value = "conditionalAccess", alternate = {"ConditionalAccess"})
    @Expose
	@Nullable
    public ConditionalAccessRoot conditionalAccess;

    /**
     * The Continuous Access Evaluation Policy.
     * Represents entry point for continuous access evaluation policy.
     */
    @SerializedName(value = "continuousAccessEvaluationPolicy", alternate = {"ContinuousAccessEvaluationPolicy"})
    @Expose
	@Nullable
    public ContinuousAccessEvaluationPolicy continuousAccessEvaluationPolicy;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("apiConnectors")) {
            apiConnectors = serializer.deserializeObject(json.get("apiConnectors"), com.microsoft.graph.requests.IdentityApiConnectorCollectionPage.class);
        }

        if (json.has("authenticationEventListeners")) {
            authenticationEventListeners = serializer.deserializeObject(json.get("authenticationEventListeners"), com.microsoft.graph.requests.AuthenticationEventListenerCollectionPage.class);
        }

        if (json.has("authenticationEventsFlows")) {
            authenticationEventsFlows = serializer.deserializeObject(json.get("authenticationEventsFlows"), com.microsoft.graph.requests.AuthenticationEventsFlowCollectionPage.class);
        }

        if (json.has("b2cUserFlows")) {
            b2cUserFlows = serializer.deserializeObject(json.get("b2cUserFlows"), com.microsoft.graph.requests.B2cIdentityUserFlowCollectionPage.class);
        }

        if (json.has("b2xUserFlows")) {
            b2xUserFlows = serializer.deserializeObject(json.get("b2xUserFlows"), com.microsoft.graph.requests.B2xIdentityUserFlowCollectionPage.class);
        }

        if (json.has("customAuthenticationExtensions")) {
            customAuthenticationExtensions = serializer.deserializeObject(json.get("customAuthenticationExtensions"), com.microsoft.graph.requests.CustomAuthenticationExtensionCollectionPage.class);
        }

        if (json.has("identityProviders")) {
            identityProviders = serializer.deserializeObject(json.get("identityProviders"), com.microsoft.graph.requests.IdentityProviderBaseCollectionPage.class);
        }

        if (json.has("userFlowAttributes")) {
            userFlowAttributes = serializer.deserializeObject(json.get("userFlowAttributes"), com.microsoft.graph.requests.IdentityUserFlowAttributeCollectionPage.class);
        }

        if (json.has("userFlows")) {
            userFlows = serializer.deserializeObject(json.get("userFlows"), com.microsoft.graph.requests.IdentityUserFlowCollectionPage.class);
        }
    }
}
