// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.PlannerBucketCreation;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Planner External Bucket Source.
 */
public class PlannerExternalBucketSource extends PlannerBucketCreation implements IJsonBackedObject {


    /**
     * The Context Scenario Id.
     * Nullable. An identifier for the scenario associated with this external source. This should be in reverse DNS format. For example, Contoso company owned application for customer support would have a value like 'com.constoso.customerSupport'.
     */
    @SerializedName(value = "contextScenarioId", alternate = {"ContextScenarioId"})
    @Expose
	@Nullable
    public String contextScenarioId;

    /**
     * The External Context Id.
     * Nullable. The ID of the external entity's containing entity or context.
     */
    @SerializedName(value = "externalContextId", alternate = {"ExternalContextId"})
    @Expose
	@Nullable
    public String externalContextId;

    /**
     * The External Object Id.
     * Nullable. The ID of the entity that an external service associates with a bucket.
     */
    @SerializedName(value = "externalObjectId", alternate = {"ExternalObjectId"})
    @Expose
	@Nullable
    public String externalObjectId;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
