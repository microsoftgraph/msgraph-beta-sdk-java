// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.ErrorCode;
import com.microsoft.graph.models.PolicySetStatus;
import com.microsoft.graph.models.PolicySetAssignment;
import com.microsoft.graph.models.PolicySetItem;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.PolicySetAssignmentCollectionPage;
import com.microsoft.graph.requests.PolicySetItemCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Policy Set.
 */
public class PolicySet extends Entity implements IJsonBackedObject {


    /**
     * The Created Date Time.
     * Creation time of the PolicySet.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Description.
     * Description of the PolicySet.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Display Name.
     * DisplayName of the PolicySet.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The Error Code.
     * Error code if any occured. Possible values are: noError, unauthorized, notFound, deleted.
     */
    @SerializedName(value = "errorCode", alternate = {"ErrorCode"})
    @Expose
	@Nullable
    public ErrorCode errorCode;

    /**
     * The Guided Deployment Tags.
     * Tags of the guided deployment
     */
    @SerializedName(value = "guidedDeploymentTags", alternate = {"GuidedDeploymentTags"})
    @Expose
	@Nullable
    public java.util.List<String> guidedDeploymentTags;

    /**
     * The Last Modified Date Time.
     * Last modified time of the PolicySet.
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime lastModifiedDateTime;

    /**
     * The Role Scope Tags.
     * RoleScopeTags of the PolicySet
     */
    @SerializedName(value = "roleScopeTags", alternate = {"RoleScopeTags"})
    @Expose
	@Nullable
    public java.util.List<String> roleScopeTags;

    /**
     * The Status.
     * Validation/assignment status of the PolicySet. Possible values are: unknown, validating, partialSuccess, success, error, notAssigned.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
	@Nullable
    public PolicySetStatus status;

    /**
     * The Assignments.
     * Assignments of the PolicySet.
     */
    @SerializedName(value = "assignments", alternate = {"Assignments"})
    @Expose
	@Nullable
    public PolicySetAssignmentCollectionPage assignments;

    /**
     * The Items.
     * Items of the PolicySet with maximum count 100.
     */
    @SerializedName(value = "items", alternate = {"Items"})
    @Expose
	@Nullable
    public PolicySetItemCollectionPage items;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("assignments")) {
            assignments = serializer.deserializeObject(json.get("assignments"), PolicySetAssignmentCollectionPage.class);
        }

        if (json.has("items")) {
            items = serializer.deserializeObject(json.get("items"), PolicySetItemCollectionPage.class);
        }
    }
}
