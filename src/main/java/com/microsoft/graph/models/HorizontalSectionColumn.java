// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.WebPartCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Horizontal Section Column.
 */
public class HorizontalSectionColumn extends Entity implements IJsonBackedObject {


    /**
     * The Width.
     * Width of the column. A horizontal section is divided into 12 grids. A column should have a value of 1-12 to represent its range spans. For example, there can be two columns both have a width of 6 in a section.
     */
    @SerializedName(value = "width", alternate = {"Width"})
    @Expose
	@Nullable
    public Integer width;

    /**
     * The Webparts.
     * The collection of WebParts in this column.
     */
    @SerializedName(value = "webparts", alternate = {"Webparts"})
    @Expose
	@Nullable
    public com.microsoft.graph.requests.WebPartCollectionPage webparts;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("webparts")) {
            webparts = serializer.deserializeObject(json.get("webparts"), com.microsoft.graph.requests.WebPartCollectionPage.class);
        }
    }
}
