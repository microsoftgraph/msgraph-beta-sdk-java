// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.networkaccess.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.networkaccess.models.RemoteNetworkStatus;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Remote Network Health Event.
 */
public class RemoteNetworkHealthEvent extends Entity implements IJsonBackedObject {


    /**
     * The Bgp Routes Advertised Count.
     * The number of BGP routes advertised through tunnel.
     */
    @SerializedName(value = "bgpRoutesAdvertisedCount", alternate = {"BgpRoutesAdvertisedCount"})
    @Expose
	@Nullable
    public Integer bgpRoutesAdvertisedCount;

    /**
     * The Created Date Time.
     * The time of the original event generation in UTC. Supports $filter (ge, le) and $orderby.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Description.
     * The description of the event.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Destination Ip.
     * The IP address of the destination.
     */
    @SerializedName(value = "destinationIp", alternate = {"DestinationIp"})
    @Expose
	@Nullable
    public String destinationIp;

    /**
     * The Received Bytes.
     * The number of bytes sent from the destination to the source.
     */
    @SerializedName(value = "receivedBytes", alternate = {"ReceivedBytes"})
    @Expose
	@Nullable
    public Long receivedBytes;

    /**
     * The Remote Network Id.
     * A unique identifier for each remoteNetwork site. Supports $filter (eq).
     */
    @SerializedName(value = "remoteNetworkId", alternate = {"RemoteNetworkId"})
    @Expose
	@Nullable
    public String remoteNetworkId;

    /**
     * The Sent Bytes.
     * The number of bytes sent from the source to the destination for the connection or session.
     */
    @SerializedName(value = "sentBytes", alternate = {"SentBytes"})
    @Expose
	@Nullable
    public Long sentBytes;

    /**
     * The Source Ip.
     * The public IP address.
     */
    @SerializedName(value = "sourceIp", alternate = {"SourceIp"})
    @Expose
	@Nullable
    public String sourceIp;

    /**
     * The Status.
     * The status of the remote network. The possible values are: tunnelDisconnected, tunnelConnected, bgpDisconnected, bgpConnected, remoteNetworkAlive, unknownFutureValue.
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
	@Nullable
    public RemoteNetworkStatus status;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
