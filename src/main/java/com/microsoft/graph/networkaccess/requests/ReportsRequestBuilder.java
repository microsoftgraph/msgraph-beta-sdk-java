// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.networkaccess.requests;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.networkaccess.models.Reports;
import com.microsoft.graph.networkaccess.models.CrossTenantAccess;
import com.microsoft.graph.networkaccess.models.Destination;
import com.microsoft.graph.networkaccess.models.Device;
import com.microsoft.graph.networkaccess.models.EntitiesSummary;
import com.microsoft.graph.networkaccess.models.CrossTenantSummary;
import com.microsoft.graph.networkaccess.models.AggregationFilter;
import com.microsoft.graph.networkaccess.models.DestinationSummary;
import com.microsoft.graph.networkaccess.models.DeviceUsageSummary;
import com.microsoft.graph.networkaccess.models.TrafficDistributionPoint;
import com.microsoft.graph.networkaccess.models.TransactionSummary;
import com.microsoft.graph.networkaccess.models.User;
import com.microsoft.graph.networkaccess.models.WebCategoriesSummary;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.networkaccess.models.ReportsCrossTenantAccessReportParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsDestinationReportParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsDeviceReportParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsEntitiesSummariesParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsGetCrossTenantSummaryParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsGetDestinationSummariesParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsGetDeviceUsageSummaryParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsTrafficDistributionParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsTransactionSummariesParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsUserReportParameterSet;
import com.microsoft.graph.networkaccess.models.ReportsWebCategoryReportParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Reports Request Builder.
 */
public class ReportsRequestBuilder extends BaseRequestBuilder<Reports> {

    /**
     * The request builder for the Reports
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public ReportsRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient<?> client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the ReportsRequest instance
     */
    @Nonnull
    public ReportsRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ReportsRequest instance
     */
    @Nonnull
    public ReportsRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.networkaccess.requests.ReportsRequest(getRequestUrl(), getClient(), requestOptions);
    }



    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsCrossTenantAccessReportCollectionRequestBuilder crossTenantAccessReport(@Nonnull final ReportsCrossTenantAccessReportParameterSet parameters) {
        return new ReportsCrossTenantAccessReportCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.crossTenantAccessReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsDestinationReportCollectionRequestBuilder destinationReport(@Nonnull final ReportsDestinationReportParameterSet parameters) {
        return new ReportsDestinationReportCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.destinationReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsDeviceReportCollectionRequestBuilder deviceReport(@Nonnull final ReportsDeviceReportParameterSet parameters) {
        return new ReportsDeviceReportCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.deviceReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsEntitiesSummariesCollectionRequestBuilder entitiesSummaries(@Nonnull final ReportsEntitiesSummariesParameterSet parameters) {
        return new ReportsEntitiesSummariesCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.entitiesSummaries"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsGetCrossTenantSummaryRequestBuilder getCrossTenantSummary(@Nonnull final ReportsGetCrossTenantSummaryParameterSet parameters) {
        return new ReportsGetCrossTenantSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.getCrossTenantSummary"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsGetDestinationSummariesCollectionRequestBuilder getDestinationSummaries(@Nonnull final ReportsGetDestinationSummariesParameterSet parameters) {
        return new ReportsGetDestinationSummariesCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.getDestinationSummaries"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsGetDeviceUsageSummaryRequestBuilder getDeviceUsageSummary(@Nonnull final ReportsGetDeviceUsageSummaryParameterSet parameters) {
        return new ReportsGetDeviceUsageSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.getDeviceUsageSummary"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsTrafficDistributionCollectionRequestBuilder trafficDistribution(@Nonnull final ReportsTrafficDistributionParameterSet parameters) {
        return new ReportsTrafficDistributionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.trafficDistribution"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsTransactionSummariesCollectionRequestBuilder transactionSummaries(@Nonnull final ReportsTransactionSummariesParameterSet parameters) {
        return new ReportsTransactionSummariesCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.transactionSummaries"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsUserReportCollectionRequestBuilder userReport(@Nonnull final ReportsUserReportParameterSet parameters) {
        return new ReportsUserReportCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.userReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public ReportsWebCategoryReportCollectionRequestBuilder webCategoryReport(@Nonnull final ReportsWebCategoryReportParameterSet parameters) {
        return new ReportsWebCategoryReportCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.networkaccess.webCategoryReport"), getClient(), null, parameters);
    }
}
