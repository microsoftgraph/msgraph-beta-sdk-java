// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.identitygovernance.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.identitygovernance.models.LifecycleWorkflowProcessingStatus;
import com.microsoft.graph.identitygovernance.models.WorkflowExecutionType;
import com.microsoft.graph.models.User;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.identitygovernance.requests.TaskProcessingResultCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User Processing Result.
 */
public class UserProcessingResult extends Entity implements IJsonBackedObject {


    /**
     * The Completed Date Time.
     * 
     */
    @SerializedName(value = "completedDateTime", alternate = {"CompletedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime completedDateTime;

    /**
     * The Failed Tasks Count.
     * 
     */
    @SerializedName(value = "failedTasksCount", alternate = {"FailedTasksCount"})
    @Expose
	@Nullable
    public Integer failedTasksCount;

    /**
     * The Processing Status.
     * 
     */
    @SerializedName(value = "processingStatus", alternate = {"ProcessingStatus"})
    @Expose
	@Nullable
    public LifecycleWorkflowProcessingStatus processingStatus;

    /**
     * The Scheduled Date Time.
     * 
     */
    @SerializedName(value = "scheduledDateTime", alternate = {"ScheduledDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime scheduledDateTime;

    /**
     * The Started Date Time.
     * 
     */
    @SerializedName(value = "startedDateTime", alternate = {"StartedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime startedDateTime;

    /**
     * The Total Tasks Count.
     * 
     */
    @SerializedName(value = "totalTasksCount", alternate = {"TotalTasksCount"})
    @Expose
	@Nullable
    public Integer totalTasksCount;

    /**
     * The Total Unprocessed Tasks Count.
     * 
     */
    @SerializedName(value = "totalUnprocessedTasksCount", alternate = {"TotalUnprocessedTasksCount"})
    @Expose
	@Nullable
    public Integer totalUnprocessedTasksCount;

    /**
     * The Workflow Execution Type.
     * 
     */
    @SerializedName(value = "workflowExecutionType", alternate = {"WorkflowExecutionType"})
    @Expose
	@Nullable
    public WorkflowExecutionType workflowExecutionType;

    /**
     * The Workflow Version.
     * 
     */
    @SerializedName(value = "workflowVersion", alternate = {"WorkflowVersion"})
    @Expose
	@Nullable
    public Integer workflowVersion;

    /**
     * The Subject.
     * 
     */
    @SerializedName(value = "subject", alternate = {"Subject"})
    @Expose
	@Nullable
    public User subject;

    /**
     * The Task Processing Results.
     * 
     */
    @SerializedName(value = "taskProcessingResults", alternate = {"TaskProcessingResults"})
    @Expose
	@Nullable
    public com.microsoft.graph.identitygovernance.requests.TaskProcessingResultCollectionPage taskProcessingResults;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("taskProcessingResults")) {
            taskProcessingResults = serializer.deserializeObject(json.get("taskProcessingResults"), com.microsoft.graph.identitygovernance.requests.TaskProcessingResultCollectionPage.class);
        }
    }
}
