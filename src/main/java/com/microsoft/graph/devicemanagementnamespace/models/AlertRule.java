// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.devicemanagement.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.devicemanagement.models.AlertRuleTemplate;
import com.microsoft.graph.devicemanagement.models.NotificationChannel;
import com.microsoft.graph.devicemanagement.models.RuleSeverityType;
import com.microsoft.graph.devicemanagement.models.RuleThreshold;
import com.microsoft.graph.models.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Alert Rule.
 */
public class AlertRule extends Entity implements IJsonBackedObject {


    /**
     * The Alert Rule Template.
     * The rule template of the alert event. The possible values are: cloudPcProvisionScenario, cloudPcImageUploadScenario, cloudPcOnPremiseNetworkConnectionCheckScenario, unknownFutureValue, cloudPcInGracePeriodScenario. Note that you must use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: cloudPcInGracePeriodScenario.
     */
    @SerializedName(value = "alertRuleTemplate", alternate = {"AlertRuleTemplate"})
    @Expose
	@Nullable
    public AlertRuleTemplate alertRuleTemplate;

    /**
     * The Description.
     * The rule description.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Display Name.
     * The display name of the rule.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The Enabled.
     * The status of the rule that indicates whether the rule is enabled or disabled. If true, the rule is enabled; otherwise, the rule is disabled.
     */
    @SerializedName(value = "enabled", alternate = {"Enabled"})
    @Expose
	@Nullable
    public Boolean enabled;

    /**
     * The Is System Rule.
     * Indicates whether the rule is a system rule. If true, the rule is a system rule; otherwise, the rule is a custom defined rule and can be edited. System rules are built-in and only a few properties can be edited.
     */
    @SerializedName(value = "isSystemRule", alternate = {"IsSystemRule"})
    @Expose
	@Nullable
    public Boolean isSystemRule;

    /**
     * The Notification Channels.
     * The notification channels of the rule selected by the user.
     */
    @SerializedName(value = "notificationChannels", alternate = {"NotificationChannels"})
    @Expose
	@Nullable
    public java.util.List<NotificationChannel> notificationChannels;

    /**
     * The Severity.
     * The severity of the rule. The possible values are: unknown, informational, warning, critical, unknownFutureValue.
     */
    @SerializedName(value = "severity", alternate = {"Severity"})
    @Expose
	@Nullable
    public RuleSeverityType severity;

    /**
     * The Threshold.
     * The conditions to send alerts. For example, send alert when provisioning has failed for greater than or equal to 6 Cloud PCs.
     */
    @SerializedName(value = "threshold", alternate = {"Threshold"})
    @Expose
	@Nullable
    public RuleThreshold threshold;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
