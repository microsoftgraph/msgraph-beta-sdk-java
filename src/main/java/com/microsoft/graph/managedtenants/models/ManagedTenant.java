// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.managedtenants.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.managedtenants.requests.AggregatedPolicyComplianceCollectionPage;
import com.microsoft.graph.managedtenants.requests.AuditEventCollectionPage;
import com.microsoft.graph.managedtenants.requests.CloudPcConnectionCollectionPage;
import com.microsoft.graph.managedtenants.requests.CloudPcDeviceCollectionPage;
import com.microsoft.graph.managedtenants.requests.CloudPcOverviewCollectionPage;
import com.microsoft.graph.managedtenants.requests.ConditionalAccessPolicyCoverageCollectionPage;
import com.microsoft.graph.managedtenants.requests.CredentialUserRegistrationsSummaryCollectionPage;
import com.microsoft.graph.managedtenants.requests.DeviceCompliancePolicySettingStateSummaryCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceTrendCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleDefinitionCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantAlertCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantTicketingEndpointCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementActionCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementActionTenantDeploymentStatusCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementIntentCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionObjectCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementTemplateStepCollectionPage;
import com.microsoft.graph.managedtenants.requests.ManagementTemplateStepVersionCollectionPage;
import com.microsoft.graph.managedtenants.requests.MyRoleCollectionPage;
import com.microsoft.graph.managedtenants.requests.TenantGroupCollectionPage;
import com.microsoft.graph.managedtenants.requests.TenantCollectionPage;
import com.microsoft.graph.managedtenants.requests.TenantCustomizedInformationCollectionPage;
import com.microsoft.graph.managedtenants.requests.TenantDetailedInformationCollectionPage;
import com.microsoft.graph.managedtenants.requests.TenantTagCollectionPage;
import com.microsoft.graph.managedtenants.requests.WindowsDeviceMalwareStateCollectionPage;
import com.microsoft.graph.managedtenants.requests.WindowsProtectionStateCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Managed Tenant.
 */
public class ManagedTenant extends Entity implements IJsonBackedObject {


    /**
     * The Aggregated Policy Compliances.
     * Aggregate view of device compliance policies across managed tenants.
     */
    @SerializedName(value = "aggregatedPolicyCompliances", alternate = {"AggregatedPolicyCompliances"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.AggregatedPolicyComplianceCollectionPage aggregatedPolicyCompliances;

    /**
     * The Audit Events.
     * The collection of audit events across managed tenants.
     */
    @SerializedName(value = "auditEvents", alternate = {"AuditEvents"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.AuditEventCollectionPage auditEvents;

    /**
     * The Cloud Pc Connections.
     * The collection of cloud PC connections across managed tenants.
     */
    @SerializedName(value = "cloudPcConnections", alternate = {"CloudPcConnections"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.CloudPcConnectionCollectionPage cloudPcConnections;

    /**
     * The Cloud Pc Devices.
     * The collection of cloud PC devices across managed tenants.
     */
    @SerializedName(value = "cloudPcDevices", alternate = {"CloudPcDevices"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.CloudPcDeviceCollectionPage cloudPcDevices;

    /**
     * The Cloud Pcs Overview.
     * Overview of cloud PC information across managed tenants.
     */
    @SerializedName(value = "cloudPcsOverview", alternate = {"CloudPcsOverview"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.CloudPcOverviewCollectionPage cloudPcsOverview;

    /**
     * The Conditional Access Policy Coverages.
     * Aggregate view of conditional access policy coverage across managed tenants.
     */
    @SerializedName(value = "conditionalAccessPolicyCoverages", alternate = {"ConditionalAccessPolicyCoverages"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ConditionalAccessPolicyCoverageCollectionPage conditionalAccessPolicyCoverages;

    /**
     * The Credential User Registrations Summaries.
     * Summary information for user registration for multi-factor authentication and self service password reset across managed tenants.
     */
    @SerializedName(value = "credentialUserRegistrationsSummaries", alternate = {"CredentialUserRegistrationsSummaries"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.CredentialUserRegistrationsSummaryCollectionPage credentialUserRegistrationsSummaries;

    /**
     * The Device Compliance Policy Setting State Summaries.
     * Summary information for device compliance policy setting states across managed tenants.
     */
    @SerializedName(value = "deviceCompliancePolicySettingStateSummaries", alternate = {"DeviceCompliancePolicySettingStateSummaries"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.DeviceCompliancePolicySettingStateSummaryCollectionPage deviceCompliancePolicySettingStateSummaries;

    /**
     * The Managed Device Compliances.
     * The collection of compliance for managed devices across managed tenants.
     */
    @SerializedName(value = "managedDeviceCompliances", alternate = {"ManagedDeviceCompliances"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceCollectionPage managedDeviceCompliances;

    /**
     * The Managed Device Compliance Trends.
     * Trend insights for device compliance across managed tenants.
     */
    @SerializedName(value = "managedDeviceComplianceTrends", alternate = {"ManagedDeviceComplianceTrends"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceTrendCollectionPage managedDeviceComplianceTrends;

    /**
     * The Managed Tenant Alert Logs.
     * 
     */
    @SerializedName(value = "managedTenantAlertLogs", alternate = {"ManagedTenantAlertLogs"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionPage managedTenantAlertLogs;

    /**
     * The Managed Tenant Alert Rule Definitions.
     * 
     */
    @SerializedName(value = "managedTenantAlertRuleDefinitions", alternate = {"ManagedTenantAlertRuleDefinitions"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleDefinitionCollectionPage managedTenantAlertRuleDefinitions;

    /**
     * The Managed Tenant Alert Rules.
     * 
     */
    @SerializedName(value = "managedTenantAlertRules", alternate = {"ManagedTenantAlertRules"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleCollectionPage managedTenantAlertRules;

    /**
     * The Managed Tenant Alerts.
     * 
     */
    @SerializedName(value = "managedTenantAlerts", alternate = {"ManagedTenantAlerts"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantAlertCollectionPage managedTenantAlerts;

    /**
     * The Managed Tenant Api Notifications.
     * 
     */
    @SerializedName(value = "managedTenantApiNotifications", alternate = {"ManagedTenantApiNotifications"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionPage managedTenantApiNotifications;

    /**
     * The Managed Tenant Email Notifications.
     * 
     */
    @SerializedName(value = "managedTenantEmailNotifications", alternate = {"ManagedTenantEmailNotifications"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionPage managedTenantEmailNotifications;

    /**
     * The Managed Tenant Ticketing Endpoints.
     * 
     */
    @SerializedName(value = "managedTenantTicketingEndpoints", alternate = {"ManagedTenantTicketingEndpoints"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantTicketingEndpointCollectionPage managedTenantTicketingEndpoints;

    /**
     * The Management Actions.
     * The collection of baseline management actions across managed tenants.
     */
    @SerializedName(value = "managementActions", alternate = {"ManagementActions"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementActionCollectionPage managementActions;

    /**
     * The Management Action Tenant Deployment Statuses.
     * The tenant level status of management actions across managed tenants.
     */
    @SerializedName(value = "managementActionTenantDeploymentStatuses", alternate = {"ManagementActionTenantDeploymentStatuses"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementActionTenantDeploymentStatusCollectionPage managementActionTenantDeploymentStatuses;

    /**
     * The Management Intents.
     * The collection of baseline management intents across managed tenants.
     */
    @SerializedName(value = "managementIntents", alternate = {"ManagementIntents"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementIntentCollectionPage managementIntents;

    /**
     * The Management Template Collections.
     * 
     */
    @SerializedName(value = "managementTemplateCollections", alternate = {"ManagementTemplateCollections"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionObjectCollectionPage managementTemplateCollections;

    /**
     * The Management Templates.
     * The collection of baseline management templates across managed tenants.
     */
    @SerializedName(value = "managementTemplates", alternate = {"ManagementTemplates"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionPage managementTemplates;

    /**
     * The Management Template Steps.
     * 
     */
    @SerializedName(value = "managementTemplateSteps", alternate = {"ManagementTemplateSteps"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementTemplateStepCollectionPage managementTemplateSteps;

    /**
     * The Management Template Step Versions.
     * 
     */
    @SerializedName(value = "managementTemplateStepVersions", alternate = {"ManagementTemplateStepVersions"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagementTemplateStepVersionCollectionPage managementTemplateStepVersions;

    /**
     * The My Roles.
     * The collection of role assignments to a signed-in user for a managed tenant.
     */
    @SerializedName(value = "myRoles", alternate = {"MyRoles"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.MyRoleCollectionPage myRoles;

    /**
     * The Tenant Groups.
     * The collection of a logical grouping of managed tenants used by the multi-tenant management platform.
     */
    @SerializedName(value = "tenantGroups", alternate = {"TenantGroups"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.TenantGroupCollectionPage tenantGroups;

    /**
     * The Tenants.
     * The collection of tenants associated with the managing entity.
     */
    @SerializedName(value = "tenants", alternate = {"Tenants"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.TenantCollectionPage tenants;

    /**
     * The Tenants Customized Information.
     * The collection of tenant level customized information across managed tenants.
     */
    @SerializedName(value = "tenantsCustomizedInformation", alternate = {"TenantsCustomizedInformation"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.TenantCustomizedInformationCollectionPage tenantsCustomizedInformation;

    /**
     * The Tenants Detailed Information.
     * The collection tenant level detailed information across managed tenants.
     */
    @SerializedName(value = "tenantsDetailedInformation", alternate = {"TenantsDetailedInformation"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.TenantDetailedInformationCollectionPage tenantsDetailedInformation;

    /**
     * The Tenant Tags.
     * The collection of tenant tags across managed tenants.
     */
    @SerializedName(value = "tenantTags", alternate = {"TenantTags"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.TenantTagCollectionPage tenantTags;

    /**
     * The Windows Device Malware States.
     * The state of malware for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.
     */
    @SerializedName(value = "windowsDeviceMalwareStates", alternate = {"WindowsDeviceMalwareStates"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.WindowsDeviceMalwareStateCollectionPage windowsDeviceMalwareStates;

    /**
     * The Windows Protection States.
     * The protection state for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.
     */
    @SerializedName(value = "windowsProtectionStates", alternate = {"WindowsProtectionStates"})
    @Expose
	@Nullable
    public com.microsoft.graph.managedtenants.requests.WindowsProtectionStateCollectionPage windowsProtectionStates;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("aggregatedPolicyCompliances")) {
            aggregatedPolicyCompliances = serializer.deserializeObject(json.get("aggregatedPolicyCompliances"), com.microsoft.graph.managedtenants.requests.AggregatedPolicyComplianceCollectionPage.class);
        }

        if (json.has("auditEvents")) {
            auditEvents = serializer.deserializeObject(json.get("auditEvents"), com.microsoft.graph.managedtenants.requests.AuditEventCollectionPage.class);
        }

        if (json.has("cloudPcConnections")) {
            cloudPcConnections = serializer.deserializeObject(json.get("cloudPcConnections"), com.microsoft.graph.managedtenants.requests.CloudPcConnectionCollectionPage.class);
        }

        if (json.has("cloudPcDevices")) {
            cloudPcDevices = serializer.deserializeObject(json.get("cloudPcDevices"), com.microsoft.graph.managedtenants.requests.CloudPcDeviceCollectionPage.class);
        }

        if (json.has("cloudPcsOverview")) {
            cloudPcsOverview = serializer.deserializeObject(json.get("cloudPcsOverview"), com.microsoft.graph.managedtenants.requests.CloudPcOverviewCollectionPage.class);
        }

        if (json.has("conditionalAccessPolicyCoverages")) {
            conditionalAccessPolicyCoverages = serializer.deserializeObject(json.get("conditionalAccessPolicyCoverages"), com.microsoft.graph.managedtenants.requests.ConditionalAccessPolicyCoverageCollectionPage.class);
        }

        if (json.has("credentialUserRegistrationsSummaries")) {
            credentialUserRegistrationsSummaries = serializer.deserializeObject(json.get("credentialUserRegistrationsSummaries"), com.microsoft.graph.managedtenants.requests.CredentialUserRegistrationsSummaryCollectionPage.class);
        }

        if (json.has("deviceCompliancePolicySettingStateSummaries")) {
            deviceCompliancePolicySettingStateSummaries = serializer.deserializeObject(json.get("deviceCompliancePolicySettingStateSummaries"), com.microsoft.graph.managedtenants.requests.DeviceCompliancePolicySettingStateSummaryCollectionPage.class);
        }

        if (json.has("managedDeviceCompliances")) {
            managedDeviceCompliances = serializer.deserializeObject(json.get("managedDeviceCompliances"), com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceCollectionPage.class);
        }

        if (json.has("managedDeviceComplianceTrends")) {
            managedDeviceComplianceTrends = serializer.deserializeObject(json.get("managedDeviceComplianceTrends"), com.microsoft.graph.managedtenants.requests.ManagedDeviceComplianceTrendCollectionPage.class);
        }

        if (json.has("managedTenantAlertLogs")) {
            managedTenantAlertLogs = serializer.deserializeObject(json.get("managedTenantAlertLogs"), com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionPage.class);
        }

        if (json.has("managedTenantAlertRuleDefinitions")) {
            managedTenantAlertRuleDefinitions = serializer.deserializeObject(json.get("managedTenantAlertRuleDefinitions"), com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleDefinitionCollectionPage.class);
        }

        if (json.has("managedTenantAlertRules")) {
            managedTenantAlertRules = serializer.deserializeObject(json.get("managedTenantAlertRules"), com.microsoft.graph.managedtenants.requests.ManagedTenantAlertRuleCollectionPage.class);
        }

        if (json.has("managedTenantAlerts")) {
            managedTenantAlerts = serializer.deserializeObject(json.get("managedTenantAlerts"), com.microsoft.graph.managedtenants.requests.ManagedTenantAlertCollectionPage.class);
        }

        if (json.has("managedTenantApiNotifications")) {
            managedTenantApiNotifications = serializer.deserializeObject(json.get("managedTenantApiNotifications"), com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionPage.class);
        }

        if (json.has("managedTenantEmailNotifications")) {
            managedTenantEmailNotifications = serializer.deserializeObject(json.get("managedTenantEmailNotifications"), com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionPage.class);
        }

        if (json.has("managedTenantTicketingEndpoints")) {
            managedTenantTicketingEndpoints = serializer.deserializeObject(json.get("managedTenantTicketingEndpoints"), com.microsoft.graph.managedtenants.requests.ManagedTenantTicketingEndpointCollectionPage.class);
        }

        if (json.has("managementActions")) {
            managementActions = serializer.deserializeObject(json.get("managementActions"), com.microsoft.graph.managedtenants.requests.ManagementActionCollectionPage.class);
        }

        if (json.has("managementActionTenantDeploymentStatuses")) {
            managementActionTenantDeploymentStatuses = serializer.deserializeObject(json.get("managementActionTenantDeploymentStatuses"), com.microsoft.graph.managedtenants.requests.ManagementActionTenantDeploymentStatusCollectionPage.class);
        }

        if (json.has("managementIntents")) {
            managementIntents = serializer.deserializeObject(json.get("managementIntents"), com.microsoft.graph.managedtenants.requests.ManagementIntentCollectionPage.class);
        }

        if (json.has("managementTemplateCollections")) {
            managementTemplateCollections = serializer.deserializeObject(json.get("managementTemplateCollections"), com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionObjectCollectionPage.class);
        }

        if (json.has("managementTemplates")) {
            managementTemplates = serializer.deserializeObject(json.get("managementTemplates"), com.microsoft.graph.managedtenants.requests.ManagementTemplateCollectionPage.class);
        }

        if (json.has("managementTemplateSteps")) {
            managementTemplateSteps = serializer.deserializeObject(json.get("managementTemplateSteps"), com.microsoft.graph.managedtenants.requests.ManagementTemplateStepCollectionPage.class);
        }

        if (json.has("managementTemplateStepVersions")) {
            managementTemplateStepVersions = serializer.deserializeObject(json.get("managementTemplateStepVersions"), com.microsoft.graph.managedtenants.requests.ManagementTemplateStepVersionCollectionPage.class);
        }

        if (json.has("myRoles")) {
            myRoles = serializer.deserializeObject(json.get("myRoles"), com.microsoft.graph.managedtenants.requests.MyRoleCollectionPage.class);
        }

        if (json.has("tenantGroups")) {
            tenantGroups = serializer.deserializeObject(json.get("tenantGroups"), com.microsoft.graph.managedtenants.requests.TenantGroupCollectionPage.class);
        }

        if (json.has("tenants")) {
            tenants = serializer.deserializeObject(json.get("tenants"), com.microsoft.graph.managedtenants.requests.TenantCollectionPage.class);
        }

        if (json.has("tenantsCustomizedInformation")) {
            tenantsCustomizedInformation = serializer.deserializeObject(json.get("tenantsCustomizedInformation"), com.microsoft.graph.managedtenants.requests.TenantCustomizedInformationCollectionPage.class);
        }

        if (json.has("tenantsDetailedInformation")) {
            tenantsDetailedInformation = serializer.deserializeObject(json.get("tenantsDetailedInformation"), com.microsoft.graph.managedtenants.requests.TenantDetailedInformationCollectionPage.class);
        }

        if (json.has("tenantTags")) {
            tenantTags = serializer.deserializeObject(json.get("tenantTags"), com.microsoft.graph.managedtenants.requests.TenantTagCollectionPage.class);
        }

        if (json.has("windowsDeviceMalwareStates")) {
            windowsDeviceMalwareStates = serializer.deserializeObject(json.get("windowsDeviceMalwareStates"), com.microsoft.graph.managedtenants.requests.WindowsDeviceMalwareStateCollectionPage.class);
        }

        if (json.has("windowsProtectionStates")) {
            windowsProtectionStates = serializer.deserializeObject(json.get("windowsProtectionStates"), com.microsoft.graph.managedtenants.requests.WindowsProtectionStateCollectionPage.class);
        }
    }
}
