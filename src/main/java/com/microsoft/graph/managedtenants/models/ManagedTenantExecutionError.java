// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.managedtenants.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.managedtenants.models.ManagedTenantOperationError;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Managed Tenant Execution Error.
 */
public class ManagedTenantExecutionError extends ManagedTenantOperationError implements IJsonBackedObject {


    /**
     * The Error Details.
     * Additional error information for the exception. Optional. Read-only.
     */
    @SerializedName(value = "errorDetails", alternate = {"ErrorDetails"})
    @Expose
	@Nullable
    public String errorDetails;

    /**
     * The Node Id.
     * The node identifier where the exception occurred. Required. Read-only.
     */
    @SerializedName(value = "nodeId", alternate = {"NodeId"})
    @Expose
	@Nullable
    public Integer nodeId;

    /**
     * The Raw Token.
     * The token for the exception. Optional. Read-only.
     */
    @SerializedName(value = "rawToken", alternate = {"RawToken"})
    @Expose
	@Nullable
    public String rawToken;

    /**
     * The Statement Index.
     * The statement index for the exception. Required. Read-only.
     */
    @SerializedName(value = "statementIndex", alternate = {"StatementIndex"})
    @Expose
	@Nullable
    public Integer statementIndex;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {

    }
}
