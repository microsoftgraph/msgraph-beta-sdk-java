// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.managedtenants.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.managedtenants.models.AlertData;
import com.microsoft.graph.managedtenants.models.AlertDataReferenceString;
import com.microsoft.graph.managedtenants.models.AlertSeverity;
import com.microsoft.graph.managedtenants.models.AlertStatus;
import com.microsoft.graph.managedtenants.models.ManagedTenantAlertRule;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionWithReferencesPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionWithReferencesPage;
import com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionWithReferencesPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Managed Tenant Alert.
 */
public class ManagedTenantAlert extends Entity implements IJsonBackedObject {


    /**
     * The Alert Data.
     * 
     */
    @SerializedName(value = "alertData", alternate = {"AlertData"})
    @Expose
	@Nullable
    public AlertData alertData;

    /**
     * The Alert Data Reference Strings.
     * 
     */
    @SerializedName(value = "alertDataReferenceStrings", alternate = {"AlertDataReferenceStrings"})
    @Expose
	@Nullable
    public java.util.List<AlertDataReferenceString> alertDataReferenceStrings;

    /**
     * The Alert Rule Display Name.
     * 
     */
    @SerializedName(value = "alertRuleDisplayName", alternate = {"AlertRuleDisplayName"})
    @Expose
	@Nullable
    public String alertRuleDisplayName;

    /**
     * The Assigned To User Id.
     * 
     */
    @SerializedName(value = "assignedToUserId", alternate = {"AssignedToUserId"})
    @Expose
	@Nullable
    public String assignedToUserId;

    /**
     * The Correlation Count.
     * 
     */
    @SerializedName(value = "correlationCount", alternate = {"CorrelationCount"})
    @Expose
	@Nullable
    public Integer correlationCount;

    /**
     * The Correlation Id.
     * 
     */
    @SerializedName(value = "correlationId", alternate = {"CorrelationId"})
    @Expose
	@Nullable
    public String correlationId;

    /**
     * The Created By User Id.
     * 
     */
    @SerializedName(value = "createdByUserId", alternate = {"CreatedByUserId"})
    @Expose
	@Nullable
    public String createdByUserId;

    /**
     * The Created Date Time.
     * 
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Last Action By User Id.
     * 
     */
    @SerializedName(value = "lastActionByUserId", alternate = {"LastActionByUserId"})
    @Expose
	@Nullable
    public String lastActionByUserId;

    /**
     * The Last Action Date Time.
     * 
     */
    @SerializedName(value = "lastActionDateTime", alternate = {"LastActionDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime lastActionDateTime;

    /**
     * The Message.
     * 
     */
    @SerializedName(value = "message", alternate = {"Message"})
    @Expose
	@Nullable
    public String message;

    /**
     * The Severity.
     * 
     */
    @SerializedName(value = "severity", alternate = {"Severity"})
    @Expose
	@Nullable
    public AlertSeverity severity;

    /**
     * The Status.
     * 
     */
    @SerializedName(value = "status", alternate = {"Status"})
    @Expose
	@Nullable
    public AlertStatus status;

    /**
     * The Tenant Id.
     * 
     */
    @SerializedName(value = "tenantId", alternate = {"TenantId"})
    @Expose
	@Nullable
    public String tenantId;

    /**
     * The Title.
     * 
     */
    @SerializedName(value = "title", alternate = {"Title"})
    @Expose
	@Nullable
    public String title;

    /**
     * The Alert Logs.
     * 
     */
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionWithReferencesPage alertLogs;

    /**
     * The Alert Rule.
     * 
     */
    @SerializedName(value = "alertRule", alternate = {"AlertRule"})
    @Expose
	@Nullable
    public ManagedTenantAlertRule alertRule;

    /**
     * The Api Notifications.
     * 
     */
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionWithReferencesPage apiNotifications;

    /**
     * The Email Notifications.
     * 
     */
	@Nullable
    public com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionWithReferencesPage emailNotifications;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("alertLogs")) {
            alertLogs = serializer.deserializeObject(json.get("alertLogs"), com.microsoft.graph.managedtenants.requests.ManagedTenantAlertLogCollectionWithReferencesPage.class);
        }

        if (json.has("apiNotifications")) {
            apiNotifications = serializer.deserializeObject(json.get("apiNotifications"), com.microsoft.graph.managedtenants.requests.ManagedTenantApiNotificationCollectionWithReferencesPage.class);
        }

        if (json.has("emailNotifications")) {
            emailNotifications = serializer.deserializeObject(json.get("emailNotifications"), com.microsoft.graph.managedtenants.requests.ManagedTenantEmailNotificationCollectionWithReferencesPage.class);
        }
    }
}
