// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.PurchaseInvoice;
import com.microsoft.graph.requests.extensions.IPurchaseInvoiceLineCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IPurchaseInvoiceLineRequestBuilder;
import com.microsoft.graph.requests.extensions.PurchaseInvoiceLineCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.PurchaseInvoiceLineRequestBuilder;
import com.microsoft.graph.requests.extensions.ICurrencyRequestBuilder;
import com.microsoft.graph.requests.extensions.CurrencyRequestBuilder;
import com.microsoft.graph.requests.extensions.IVendorRequestBuilder;
import com.microsoft.graph.requests.extensions.VendorRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Purchase Invoice Request.
 */
public class PurchaseInvoiceRequest extends BaseRequest implements IPurchaseInvoiceRequest {
	
    /**
     * The request for the PurchaseInvoice
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public PurchaseInvoiceRequest(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, PurchaseInvoice.class);
    }

    /**
     * Gets the PurchaseInvoice from the service
     *
     * @param callback the callback to be called after success or failure
     */
    public void get(final ICallback<PurchaseInvoice> callback) {
        send(HttpMethod.GET, callback, null);
    }

    /**
     * Gets the PurchaseInvoice from the service
     *
     * @return the PurchaseInvoice from the request
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public PurchaseInvoice get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    /**
     * Delete this item from the service
     *
     * @param callback the callback when the deletion action has completed
     */
    public void delete(final ICallback<PurchaseInvoice> callback) {
        send(HttpMethod.DELETE, callback, null);
    }

    /**
     * Delete this item from the service
     *
     * @throws ClientException if there was an exception during the delete operation
     */
    public void delete() throws ClientException {
        send(HttpMethod.DELETE, null);
    }

    /**
     * Patches this PurchaseInvoice with a source
     *
     * @param sourcePurchaseInvoice the source object with updates
     * @param callback the callback to be called after success or failure
     */
    public void patch(final PurchaseInvoice sourcePurchaseInvoice, final ICallback<PurchaseInvoice> callback) {
        send(HttpMethod.PATCH, callback, sourcePurchaseInvoice);
    }

    /**
     * Patches this PurchaseInvoice with a source
     *
     * @param sourcePurchaseInvoice the source object with updates
     * @return the updated PurchaseInvoice
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public PurchaseInvoice patch(final PurchaseInvoice sourcePurchaseInvoice) throws ClientException {
        return send(HttpMethod.PATCH, sourcePurchaseInvoice);
    }

    /**
     * Creates a PurchaseInvoice with a new object
     *
     * @param newPurchaseInvoice the new object to create
     * @param callback the callback to be called after success or failure
     */
    public void post(final PurchaseInvoice newPurchaseInvoice, final ICallback<PurchaseInvoice> callback) {
        send(HttpMethod.POST, callback, newPurchaseInvoice);
    }

    /**
     * Creates a PurchaseInvoice with a new object
     *
     * @param newPurchaseInvoice the new object to create
     * @return the created PurchaseInvoice
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public PurchaseInvoice post(final PurchaseInvoice newPurchaseInvoice) throws ClientException {
        return send(HttpMethod.POST, newPurchaseInvoice);
    }

    /**
     * Creates a PurchaseInvoice with a new object
     *
     * @param newPurchaseInvoice the object to create/update
     * @param callback the callback to be called after success or failure
     */
    public void put(final PurchaseInvoice newPurchaseInvoice, final ICallback<PurchaseInvoice> callback) {
        send(HttpMethod.PUT, callback, newPurchaseInvoice);
    }

    /**
     * Creates a PurchaseInvoice with a new object
     *
     * @param newPurchaseInvoice the object to create/update
     * @return the created PurchaseInvoice
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public PurchaseInvoice put(final PurchaseInvoice newPurchaseInvoice) throws ClientException {
        return send(HttpMethod.PUT, newPurchaseInvoice);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
     public IPurchaseInvoiceRequest select(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$select", value));
         return (PurchaseInvoiceRequest)this;
     }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
     public IPurchaseInvoiceRequest expand(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$expand", value));
         return (PurchaseInvoiceRequest)this;
     }

    /**
     * Sets the filter clause for the request
     *
     * @param value the filter clause
     * @return the updated request
     */
     public IPurchaseInvoiceRequest filter(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$filter", value));
         return (PurchaseInvoiceRequest)this;
     }

}

