// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.WindowsWifiEnterpriseEAPConfiguration;
import com.microsoft.graph.requests.extensions.IWindows81TrustedRootCertificateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IWindows81TrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.Windows81TrustedRootCertificateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.Windows81TrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.IWindowsCertificateProfileBaseRequestBuilder;
import com.microsoft.graph.requests.extensions.WindowsCertificateProfileBaseRequestBuilder;
import com.microsoft.graph.requests.extensions.IWindows81TrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.Windows81TrustedRootCertificateRequestBuilder;

import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Wifi Enterprise EAPConfiguration Request Builder.
 */
public class WindowsWifiEnterpriseEAPConfigurationRequestBuilder extends BaseRequestBuilder implements IWindowsWifiEnterpriseEAPConfigurationRequestBuilder {

    /**
     * The request builder for the WindowsWifiEnterpriseEAPConfiguration
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public WindowsWifiEnterpriseEAPConfigurationRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IWindowsWifiEnterpriseEAPConfigurationRequest instance
     */
    public IWindowsWifiEnterpriseEAPConfigurationRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IWindowsWifiEnterpriseEAPConfigurationRequest instance
     */
    public IWindowsWifiEnterpriseEAPConfigurationRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.WindowsWifiEnterpriseEAPConfigurationRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IWindows81TrustedRootCertificateCollectionRequestBuilder rootCertificatesForServerValidation() {
        return new Windows81TrustedRootCertificateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificatesForServerValidation"), getClient(), null);
    }

    public IWindows81TrustedRootCertificateRequestBuilder rootCertificatesForServerValidation(final String id) {
        return new Windows81TrustedRootCertificateRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificatesForServerValidation") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for WindowsCertificateProfileBase
     *
     * @return the IWindowsCertificateProfileBaseWithReferenceRequestBuilder instance
     */
    public IWindowsCertificateProfileBaseWithReferenceRequestBuilder identityCertificateForClientAuthentication() {
        return new WindowsCertificateProfileBaseWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("identityCertificateForClientAuthentication"), getClient(), null);
    }

    /**
     * Gets the request builder for Windows81TrustedRootCertificate
     *
     * @return the IWindows81TrustedRootCertificateWithReferenceRequestBuilder instance
     */
    public IWindows81TrustedRootCertificateWithReferenceRequestBuilder rootCertificateForClientValidation() {
        return new Windows81TrustedRootCertificateWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificateForClientValidation"), getClient(), null);
    }
}
