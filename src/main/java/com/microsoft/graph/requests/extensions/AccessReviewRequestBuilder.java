// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.AccessReview;
import com.microsoft.graph.requests.extensions.IAccessReviewReviewerCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewReviewerRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewReviewerCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewReviewerRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewDecisionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewDecisionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewDecisionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewDecisionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Access Review Request Builder.
 */
public class AccessReviewRequestBuilder extends BaseRequestBuilder implements IAccessReviewRequestBuilder {

    /**
     * The request builder for the AccessReview
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public AccessReviewRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IAccessReviewRequest instance
     */
    public IAccessReviewRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IAccessReviewRequest instance
     */
    public IAccessReviewRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.AccessReviewRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IAccessReviewReviewerCollectionRequestBuilder reviewers() {
        return new AccessReviewReviewerCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("reviewers"), getClient(), null);
    }

    public IAccessReviewReviewerRequestBuilder reviewers(final String id) {
        return new AccessReviewReviewerRequestBuilder(getRequestUrlWithAdditionalSegment("reviewers") + "/" + id, getClient(), null);
    }
    public IAccessReviewDecisionCollectionRequestBuilder decisions() {
        return new AccessReviewDecisionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("decisions"), getClient(), null);
    }

    public IAccessReviewDecisionRequestBuilder decisions(final String id) {
        return new AccessReviewDecisionRequestBuilder(getRequestUrlWithAdditionalSegment("decisions") + "/" + id, getClient(), null);
    }
    public IAccessReviewDecisionCollectionRequestBuilder myDecisions() {
        return new AccessReviewDecisionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("myDecisions"), getClient(), null);
    }

    public IAccessReviewDecisionRequestBuilder myDecisions(final String id) {
        return new AccessReviewDecisionRequestBuilder(getRequestUrlWithAdditionalSegment("myDecisions") + "/" + id, getClient(), null);
    }
    public IAccessReviewCollectionRequestBuilder instances() {
        return new AccessReviewCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("instances"), getClient(), null);
    }

    public IAccessReviewRequestBuilder instances(final String id) {
        return new AccessReviewRequestBuilder(getRequestUrlWithAdditionalSegment("instances") + "/" + id, getClient(), null);
    }

    public IAccessReviewStopRequestBuilder stop() {
        return new AccessReviewStopRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.stop"), getClient(), null);
    }

    public IAccessReviewSendReminderRequestBuilder sendReminder() {
        return new AccessReviewSendReminderRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.sendReminder"), getClient(), null);
    }

    public IAccessReviewResetDecisionsRequestBuilder resetDecisions() {
        return new AccessReviewResetDecisionsRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.resetDecisions"), getClient(), null);
    }

    public IAccessReviewApplyDecisionsRequestBuilder applyDecisions() {
        return new AccessReviewApplyDecisionsRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.applyDecisions"), getClient(), null);
    }
}
