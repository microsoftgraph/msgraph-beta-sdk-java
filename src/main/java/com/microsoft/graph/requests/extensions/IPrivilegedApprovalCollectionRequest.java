// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.PrivilegedApproval;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.http.IBaseCollectionPage;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Privileged Approval Collection Request.
 */
public interface IPrivilegedApprovalCollectionRequest {

    void get(final ICallback<IPrivilegedApprovalCollectionPage> callback);

    IPrivilegedApprovalCollectionPage get() throws ClientException;

    void post(final PrivilegedApproval newPrivilegedApproval, final ICallback<PrivilegedApproval> callback);

    PrivilegedApproval post(final PrivilegedApproval newPrivilegedApproval) throws ClientException;

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    IPrivilegedApprovalCollectionRequest expand(final String value);

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    IPrivilegedApprovalCollectionRequest select(final String value);

    /**
     * Sets the top value for the request
     *
     * @param value the max number of items to return
     * @return the updated request
     */
    IPrivilegedApprovalCollectionRequest top(final int value);

}
