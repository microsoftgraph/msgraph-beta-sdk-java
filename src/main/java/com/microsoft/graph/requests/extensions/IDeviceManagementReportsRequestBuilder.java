// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsRequest;
import com.microsoft.graph.requests.extensions.IDeviceManagementCachedReportConfigurationCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementCachedReportConfigurationRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementExportJobCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementExportJobRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportScheduleCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportScheduleRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetActiveMalwareReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetMalwareSummaryReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetSettingNonComplianceReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetReportFiltersRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetHistoricalReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetCachedReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Device Management Reports Request Builder.
 */
public interface IDeviceManagementReportsRequestBuilder extends IRequestBuilder {
    /**
     * Creates the request
     *
     * @return the IDeviceManagementReportsRequest instance
     */
    IDeviceManagementReportsRequest buildRequest();

    /**
     * Creates the request with specific options instead of the existing options
     *
     * @param requestOptions the options for this request
     * @return the IDeviceManagementReportsRequest instance
     */
    IDeviceManagementReportsRequest buildRequest(final java.util.List<? extends Option> requestOptions);


    IDeviceManagementCachedReportConfigurationCollectionRequestBuilder cachedReportConfigurations();

    IDeviceManagementCachedReportConfigurationRequestBuilder cachedReportConfigurations(final String id);

    IDeviceManagementExportJobCollectionRequestBuilder exportJobs();

    IDeviceManagementExportJobRequestBuilder exportJobs(final String id);

    IDeviceManagementReportScheduleCollectionRequestBuilder reportSchedules();

    IDeviceManagementReportScheduleRequestBuilder reportSchedules(final String id);
    IDeviceManagementReportsGetActiveMalwareReportRequestBuilder getActiveMalwareReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder getUnhealthyDefenderAgentsReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetMalwareSummaryReportRequestBuilder getMalwareSummaryReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder getDeviceNonComplianceReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder getPolicyNonComplianceReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder getPolicyNonComplianceMetadata(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder getPolicyNonComplianceSummaryReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetSettingNonComplianceReportRequestBuilder getSettingNonComplianceReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetReportFiltersRequestBuilder getReportFilters(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetHistoricalReportRequestBuilder getHistoricalReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String filter);
    IDeviceManagementReportsGetCachedReportRequestBuilder getCachedReport(final String id, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top);
    IDeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder getWindowsUpdateAlertSummaryReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);
    IDeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder getWindowsUpdateAlertsPerPolicyPerDeviceReport(final String name, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top, final String sessionId, final String filter);

}
