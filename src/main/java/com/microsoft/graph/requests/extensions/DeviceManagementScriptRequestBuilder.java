// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptRequest;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptRequest;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptGroupAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptGroupAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptGroupAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptGroupAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptRunSummaryWithReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptRunSummaryWithReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptUserStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptUserStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptUserStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptUserStateRequestBuilder;
import com.microsoft.graph.models.extensions.DeviceManagementScriptGroupAssignment;
import com.microsoft.graph.models.extensions.DeviceManagementScriptAssignment;
import com.microsoft.graph.requests.extensions.IDeviceManagementScriptAssignRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementScriptAssignRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Script Request Builder.
 */
public class DeviceManagementScriptRequestBuilder extends BaseRequestBuilder implements IDeviceManagementScriptRequestBuilder {

    /**
     * The request builder for the DeviceManagementScript
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceManagementScriptRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IDeviceManagementScriptRequest instance
     */
    public IDeviceManagementScriptRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IDeviceManagementScriptRequest instance
     */
    public IDeviceManagementScriptRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new DeviceManagementScriptRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IDeviceManagementScriptGroupAssignmentCollectionRequestBuilder groupAssignments() {
        return new DeviceManagementScriptGroupAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("groupAssignments"), getClient(), null);
    }

    public IDeviceManagementScriptGroupAssignmentRequestBuilder groupAssignments(final String id) {
        return new DeviceManagementScriptGroupAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("groupAssignments") + "/" + id, getClient(), null);
    }
    public IDeviceManagementScriptAssignmentCollectionRequestBuilder assignments() {
        return new DeviceManagementScriptAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    public IDeviceManagementScriptAssignmentRequestBuilder assignments(final String id) {
        return new DeviceManagementScriptAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DeviceManagementScriptRunSummary
     *
     * @return the IDeviceManagementScriptRunSummaryWithReferenceRequestBuilder instance
     */
    public IDeviceManagementScriptRunSummaryWithReferenceRequestBuilder runSummary() {
        return new DeviceManagementScriptRunSummaryWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("runSummary"), getClient(), null);
    }
    public IDeviceManagementScriptDeviceStateCollectionRequestBuilder deviceRunStates() {
        return new DeviceManagementScriptDeviceStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates"), getClient(), null);
    }

    public IDeviceManagementScriptDeviceStateRequestBuilder deviceRunStates(final String id) {
        return new DeviceManagementScriptDeviceStateRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates") + "/" + id, getClient(), null);
    }
    public IDeviceManagementScriptUserStateCollectionRequestBuilder userRunStates() {
        return new DeviceManagementScriptUserStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("userRunStates"), getClient(), null);
    }

    public IDeviceManagementScriptUserStateRequestBuilder userRunStates(final String id) {
        return new DeviceManagementScriptUserStateRequestBuilder(getRequestUrlWithAdditionalSegment("userRunStates") + "/" + id, getClient(), null);
    }

    public IDeviceManagementScriptAssignRequestBuilder assign(final java.util.List<DeviceManagementScriptGroupAssignment> deviceManagementScriptGroupAssignments, final java.util.List<DeviceManagementScriptAssignment> deviceManagementScriptAssignments) {
        return new DeviceManagementScriptAssignRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.assign"), getClient(), null, deviceManagementScriptGroupAssignments, deviceManagementScriptAssignments);
    }
}

