// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IUserTeamworkSendActivityNotificationRequest;
import com.microsoft.graph.requests.extensions.UserTeamworkSendActivityNotificationRequest;
import com.microsoft.graph.models.extensions.TeamworkActivityTopic;
import com.microsoft.graph.models.extensions.ItemBody;
import com.microsoft.graph.models.extensions.KeyValuePair;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User Teamwork Send Activity Notification Request Builder.
 */
public class UserTeamworkSendActivityNotificationRequestBuilder extends BaseActionRequestBuilder implements IUserTeamworkSendActivityNotificationRequestBuilder {

    /**
     * The request builder for this UserTeamworkSendActivityNotification
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param topic the topic
     * @param activityType the activityType
     * @param chainId the chainId
     * @param previewText the previewText
     * @param templateParameters the templateParameters
     */
    public UserTeamworkSendActivityNotificationRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final TeamworkActivityTopic topic, final String activityType, final Long chainId, final ItemBody previewText, final java.util.List<KeyValuePair> templateParameters) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("topic", topic);
        bodyParams.put("activityType", activityType);
        bodyParams.put("chainId", chainId);
        bodyParams.put("previewText", previewText);
        bodyParams.put("templateParameters", templateParameters);
    }

    /**
     * Creates the IUserTeamworkSendActivityNotificationRequest
     *
     * @return the IUserTeamworkSendActivityNotificationRequest instance
     */
    public IUserTeamworkSendActivityNotificationRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the IUserTeamworkSendActivityNotificationRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IUserTeamworkSendActivityNotificationRequest instance
     */
    public IUserTeamworkSendActivityNotificationRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        UserTeamworkSendActivityNotificationRequest request = new UserTeamworkSendActivityNotificationRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("topic")) {
            request.body.topic = getParameter("topic");
        }

        if (hasParameter("activityType")) {
            request.body.activityType = getParameter("activityType");
        }

        if (hasParameter("chainId")) {
            request.body.chainId = getParameter("chainId");
        }

        if (hasParameter("previewText")) {
            request.body.previewText = getParameter("previewText");
        }

        if (hasParameter("templateParameters")) {
            request.body.templateParameters = getParameter("templateParameters");
        }

        return request;
    }
}
