// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.models.extensions.*;
import com.microsoft.graph.models.generated.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.requests.extensions.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Compliance Policy Has Payload Links Collection Request.
 */
public class DeviceCompliancePolicyHasPayloadLinksCollectionRequest extends BaseCollectionRequest<DeviceCompliancePolicyHasPayloadLinksCollectionResponse, IDeviceCompliancePolicyHasPayloadLinksCollectionPage> implements IDeviceCompliancePolicyHasPayloadLinksCollectionRequest {


    protected final DeviceCompliancePolicyHasPayloadLinksBody body;


    /**
     * The request for this DeviceCompliancePolicyHasPayloadLinks
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceCompliancePolicyHasPayloadLinksCollectionRequest(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions, DeviceCompliancePolicyHasPayloadLinksCollectionResponse.class, IDeviceCompliancePolicyHasPayloadLinksCollectionPage.class);
        body = new DeviceCompliancePolicyHasPayloadLinksBody();
    }


    public void post(final ICallback<IDeviceCompliancePolicyHasPayloadLinksCollectionPage> callback) {
        final IExecutors executors = getBaseRequest().getClient().getExecutors();
        executors.performOnBackground(new Runnable() {
           @Override
           public void run() {
                try {
                    executors.performOnForeground(post(), callback);
                } catch (final ClientException e) {
                    executors.performOnForeground(e, callback);
                }
           }
        });
    }

    public IDeviceCompliancePolicyHasPayloadLinksCollectionPage post() throws ClientException {
        final DeviceCompliancePolicyHasPayloadLinksCollectionResponse response = post(body);
        return buildFromResponse(response);
    }


    public IDeviceCompliancePolicyHasPayloadLinksCollectionPage buildFromResponse(final DeviceCompliancePolicyHasPayloadLinksCollectionResponse response) {
        final IDeviceCompliancePolicyHasPayloadLinksCollectionRequestBuilder builder;
        if (response.nextLink != null) {
            builder = new DeviceCompliancePolicyHasPayloadLinksCollectionRequestBuilder(response.nextLink, getBaseRequest().getClient(), /* options */ null, /* payloadIds */ null);
        } else {
            builder = null;
        }
        final IDeviceCompliancePolicyHasPayloadLinksCollectionPage page = new DeviceCompliancePolicyHasPayloadLinksCollectionPage(response, builder);
        page.setRawObject(response.getSerializer(), response.getRawObject());
        return page;
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    public IDeviceCompliancePolicyHasPayloadLinksCollectionRequest select(final String value) {
        addQueryOption(new QueryOption("$select", value));
        return (IDeviceCompliancePolicyHasPayloadLinksCollectionRequest)this;
    }

    /**
     * Sets the top value for the request
     *
     * @param value the max number of items to return
     * @return the updated request
     */
    public IDeviceCompliancePolicyHasPayloadLinksCollectionRequest top(final int value) {
        addQueryOption(new QueryOption("$top", value+""));
        return (IDeviceCompliancePolicyHasPayloadLinksCollectionRequest)this;
    }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    public IDeviceCompliancePolicyHasPayloadLinksCollectionRequest expand(final String value) {
        addQueryOption(new QueryOption("$expand", value));
        return (IDeviceCompliancePolicyHasPayloadLinksCollectionRequest)this;
    }

}
