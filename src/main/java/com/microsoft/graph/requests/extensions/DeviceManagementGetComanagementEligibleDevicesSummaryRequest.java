// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.models.extensions.ComanagementEligibleDevicesSummary;
import com.microsoft.graph.requests.extensions.IDeviceManagementGetComanagementEligibleDevicesSummaryRequest;
import com.microsoft.graph.requests.extensions.DeviceManagementGetComanagementEligibleDevicesSummaryRequest;

import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.concurrency.IExecutors;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Get Comanagement Eligible Devices Summary Request.
 */
public class DeviceManagementGetComanagementEligibleDevicesSummaryRequest extends BaseRequest implements IDeviceManagementGetComanagementEligibleDevicesSummaryRequest {

    /**
     * The request for this DeviceManagementGetComanagementEligibleDevicesSummary
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceManagementGetComanagementEligibleDevicesSummaryRequest(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, ComanagementEligibleDevicesSummary.class);
    }

    /**
     * Gets the ComanagementEligibleDevicesSummary
     *
     * @param callback the callback to be called after success or failure
     */
    public void get(final ICallback<ComanagementEligibleDevicesSummary> callback) {
        send(HttpMethod.GET, callback, null);
    }

    /**
     * Gets the ComanagementEligibleDevicesSummary
     *
     * @return the ComanagementEligibleDevicesSummary
     * @throws ClientException an exception occurs if there was an error while the request was sent
     */
    public ComanagementEligibleDevicesSummary get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    public IDeviceManagementGetComanagementEligibleDevicesSummaryRequest select(final String value) {
        getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$select", value));
        return (DeviceManagementGetComanagementEligibleDevicesSummaryRequest)this;
    }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    public IDeviceManagementGetComanagementEligibleDevicesSummaryRequest expand(final String value) {
        getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$expand", value));
        return (DeviceManagementGetComanagementEligibleDevicesSummaryRequest)this;
    }

    /**
     * Sets the filter clause for the request
     *
     * @param value the filter clause
     * @return the updated request
     */
    public IDeviceManagementGetComanagementEligibleDevicesSummaryRequest filter(final String value) {
        getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$filter", value));
        return (DeviceManagementGetComanagementEligibleDevicesSummaryRequest)this;
    }

}
