// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.GovernanceRoleAssignment;
import com.microsoft.graph.requests.extensions.IGovernanceResourceRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceResourceRequestBuilder;
import com.microsoft.graph.requests.extensions.IGovernanceRoleDefinitionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleDefinitionRequestBuilder;
import com.microsoft.graph.requests.extensions.IGovernanceSubjectRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceSubjectRequestBuilder;
import com.microsoft.graph.requests.extensions.IGovernanceRoleAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Governance Role Assignment Request Builder.
 */
public class GovernanceRoleAssignmentRequestBuilder extends BaseRequestBuilder implements IGovernanceRoleAssignmentRequestBuilder {

    /**
     * The request builder for the GovernanceRoleAssignment
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public GovernanceRoleAssignmentRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IGovernanceRoleAssignmentRequest instance
     */
    public IGovernanceRoleAssignmentRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IGovernanceRoleAssignmentRequest instance
     */
    public IGovernanceRoleAssignmentRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentRequest(getRequestUrl(), getClient(), requestOptions);
    }



    /**
     * Gets the request builder for GovernanceResource
     *
     * @return the IGovernanceResourceRequestBuilder instance
     */
    public IGovernanceResourceRequestBuilder resource() {
        return new GovernanceResourceRequestBuilder(getRequestUrlWithAdditionalSegment("resource"), getClient(), null);
    }

    /**
     * Gets the request builder for GovernanceRoleDefinition
     *
     * @return the IGovernanceRoleDefinitionRequestBuilder instance
     */
    public IGovernanceRoleDefinitionRequestBuilder roleDefinition() {
        return new GovernanceRoleDefinitionRequestBuilder(getRequestUrlWithAdditionalSegment("roleDefinition"), getClient(), null);
    }

    /**
     * Gets the request builder for GovernanceSubject
     *
     * @return the IGovernanceSubjectRequestBuilder instance
     */
    public IGovernanceSubjectRequestBuilder subject() {
        return new GovernanceSubjectRequestBuilder(getRequestUrlWithAdditionalSegment("subject"), getClient(), null);
    }

    /**
     * Gets the request builder for GovernanceRoleAssignment
     *
     * @return the IGovernanceRoleAssignmentWithReferenceRequestBuilder instance
     */
    public IGovernanceRoleAssignmentWithReferenceRequestBuilder linkedEligibleRoleAssignment() {
        return new GovernanceRoleAssignmentWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("linkedEligibleRoleAssignment"), getClient(), null);
    }
}
