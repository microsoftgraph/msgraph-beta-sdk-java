// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IDeviceManagementReportsGetCachedReportRequest;
import com.microsoft.graph.requests.extensions.DeviceManagementReportsGetCachedReportRequest;

import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Reports Get Cached Report Request Builder.
 */
public class DeviceManagementReportsGetCachedReportRequestBuilder extends BaseActionRequestBuilder implements IDeviceManagementReportsGetCachedReportRequestBuilder {

    /**
     * The request builder for this DeviceManagementReportsGetCachedReport
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param id the id
     * @param select the select
     * @param search the search
     * @param groupBy the groupBy
     * @param orderBy the orderBy
     * @param skip the skip
     * @param top the top
     */
    public DeviceManagementReportsGetCachedReportRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final String id, final java.util.List<String> select, final String search, final java.util.List<String> groupBy, final java.util.List<String> orderBy, final Integer skip, final Integer top) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("id", id);
        bodyParams.put("select", select);
        bodyParams.put("search", search);
        bodyParams.put("groupBy", groupBy);
        bodyParams.put("orderBy", orderBy);
        bodyParams.put("skip", skip);
        bodyParams.put("top", top);
    }

    /**
     * Creates the IDeviceManagementReportsGetCachedReportRequest
     *
     * @return the IDeviceManagementReportsGetCachedReportRequest instance
     */
    public IDeviceManagementReportsGetCachedReportRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the IDeviceManagementReportsGetCachedReportRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IDeviceManagementReportsGetCachedReportRequest instance
     */
    public IDeviceManagementReportsGetCachedReportRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        DeviceManagementReportsGetCachedReportRequest request = new DeviceManagementReportsGetCachedReportRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("id")) {
            request.body.id = getParameter("id");
        }

        if (hasParameter("select")) {
            request.body.select = getParameter("select");
        }

        if (hasParameter("search")) {
            request.body.search = getParameter("search");
        }

        if (hasParameter("groupBy")) {
            request.body.groupBy = getParameter("groupBy");
        }

        if (hasParameter("orderBy")) {
            request.body.orderBy = getParameter("orderBy");
        }

        if (hasParameter("skip")) {
            request.body.skip = getParameter("skip");
        }

        if (hasParameter("top")) {
            request.body.top = getParameter("top");
        }

        return request;
    }
}
