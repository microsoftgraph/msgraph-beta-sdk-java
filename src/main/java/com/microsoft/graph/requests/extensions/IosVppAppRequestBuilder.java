// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.IosVppApp;
import com.microsoft.graph.requests.extensions.IIosVppAppAssignedLicenseCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IIosVppAppAssignedLicenseRequestBuilder;
import com.microsoft.graph.requests.extensions.IosVppAppAssignedLicenseCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IosVppAppAssignedLicenseRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Ios Vpp App Request Builder.
 */
public class IosVppAppRequestBuilder extends BaseRequestBuilder implements IIosVppAppRequestBuilder {

    /**
     * The request builder for the IosVppApp
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public IosVppAppRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IIosVppAppRequest instance
     */
    public IIosVppAppRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IIosVppAppRequest instance
     */
    public IIosVppAppRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.IosVppAppRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IMobileAppCategoryCollectionWithReferencesRequestBuilder categories() {
        return new MobileAppCategoryCollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("categories"), getClient(), null);
    }

    public IMobileAppCategoryWithReferenceRequestBuilder categories(final String id) {
        return new MobileAppCategoryWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("categories") + "/" + id, getClient(), null);
    }
    public IMobileAppAssignmentCollectionRequestBuilder assignments() {
        return new MobileAppAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    public IMobileAppAssignmentRequestBuilder assignments(final String id) {
        return new MobileAppAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for MobileAppInstallSummary
     *
     * @return the IMobileAppInstallSummaryRequestBuilder instance
     */
    public IMobileAppInstallSummaryRequestBuilder installSummary() {
        return new MobileAppInstallSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("installSummary"), getClient(), null);
    }
    public IMobileAppInstallStatusCollectionRequestBuilder deviceStatuses() {
        return new MobileAppInstallStatusCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceStatuses"), getClient(), null);
    }

    public IMobileAppInstallStatusRequestBuilder deviceStatuses(final String id) {
        return new MobileAppInstallStatusRequestBuilder(getRequestUrlWithAdditionalSegment("deviceStatuses") + "/" + id, getClient(), null);
    }
    public IUserAppInstallStatusCollectionRequestBuilder userStatuses() {
        return new UserAppInstallStatusCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("userStatuses"), getClient(), null);
    }

    public IUserAppInstallStatusRequestBuilder userStatuses(final String id) {
        return new UserAppInstallStatusRequestBuilder(getRequestUrlWithAdditionalSegment("userStatuses") + "/" + id, getClient(), null);
    }
    public IMobileAppRelationshipCollectionRequestBuilder relationships() {
        return new MobileAppRelationshipCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("relationships"), getClient(), null);
    }

    public IMobileAppRelationshipRequestBuilder relationships(final String id) {
        return new MobileAppRelationshipRequestBuilder(getRequestUrlWithAdditionalSegment("relationships") + "/" + id, getClient(), null);
    }
    public IIosVppAppAssignedLicenseCollectionRequestBuilder assignedLicenses() {
        return new IosVppAppAssignedLicenseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignedLicenses"), getClient(), null);
    }

    public IIosVppAppAssignedLicenseRequestBuilder assignedLicenses(final String id) {
        return new IosVppAppAssignedLicenseRequestBuilder(getRequestUrlWithAdditionalSegment("assignedLicenses") + "/" + id, getClient(), null);
    }

    public IIosVppAppRevokeAllLicensesRequestBuilder revokeAllLicenses(final Boolean notifyManagedDevices) {
        return new IosVppAppRevokeAllLicensesRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.revokeAllLicenses"), getClient(), null, notifyManagedDevices);
    }

    public IIosVppAppRevokeUserLicenseRequestBuilder revokeUserLicense(final String userId, final Boolean notifyManagedDevices) {
        return new IosVppAppRevokeUserLicenseRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.revokeUserLicense"), getClient(), null, userId, notifyManagedDevices);
    }

    public IIosVppAppRevokeDeviceLicenseRequestBuilder revokeDeviceLicense(final String managedDeviceId, final Boolean notifyManagedDevices) {
        return new IosVppAppRevokeDeviceLicenseRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.revokeDeviceLicense"), getClient(), null, managedDeviceId, notifyManagedDevices);
    }
}
