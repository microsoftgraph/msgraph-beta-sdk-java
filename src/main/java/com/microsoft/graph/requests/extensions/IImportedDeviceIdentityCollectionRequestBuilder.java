// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DeviceManagement;
import com.microsoft.graph.models.extensions.ImportedDeviceIdentity;
import com.microsoft.graph.models.extensions.ImportedDeviceIdentityResult;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.requests.extensions.IImportedDeviceIdentityRequestBuilder;
import com.microsoft.graph.requests.extensions.IImportedDeviceIdentityCollectionRequest;
import com.microsoft.graph.requests.extensions.IImportedDeviceIdentityImportDeviceIdentityListCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IImportedDeviceIdentitySearchExistingIdentitiesCollectionRequestBuilder;
import com.microsoft.graph.http.IBaseCollectionPage;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Imported Device Identity Collection Request Builder.
 */
public interface IImportedDeviceIdentityCollectionRequestBuilder extends IRequestBuilder {

    IImportedDeviceIdentityCollectionRequest buildRequest();

    IImportedDeviceIdentityCollectionRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions);

    IImportedDeviceIdentityRequestBuilder byId(final String id);


    IImportedDeviceIdentityImportDeviceIdentityListCollectionRequestBuilder importDeviceIdentityList(final java.util.List<ImportedDeviceIdentity> importedDeviceIdentities, final Boolean overwriteImportedDeviceIdentities);

    IImportedDeviceIdentitySearchExistingIdentitiesCollectionRequestBuilder searchExistingIdentities(final java.util.List<ImportedDeviceIdentity> importedDeviceIdentities);
}
