// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DeviceComplianceScript;
import com.microsoft.graph.models.extensions.DeviceHealthScriptAssignment;
import com.microsoft.graph.requests.extensions.IDeviceHealthScriptAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceHealthScriptAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceComplianceScriptDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceComplianceScriptDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceComplianceScriptDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceComplianceScriptDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.IDeviceComplianceScriptRunSummaryRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceComplianceScriptRunSummaryRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Compliance Script Request Builder.
 */
public class DeviceComplianceScriptRequestBuilder extends BaseRequestBuilder implements IDeviceComplianceScriptRequestBuilder {

    /**
     * The request builder for the DeviceComplianceScript
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceComplianceScriptRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IDeviceComplianceScriptRequest instance
     */
    public IDeviceComplianceScriptRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IDeviceComplianceScriptRequest instance
     */
    public IDeviceComplianceScriptRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.DeviceComplianceScriptRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IDeviceHealthScriptAssignmentCollectionRequestBuilder assignments() {
        return new DeviceHealthScriptAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    public IDeviceHealthScriptAssignmentRequestBuilder assignments(final String id) {
        return new DeviceHealthScriptAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DeviceComplianceScriptRunSummary
     *
     * @return the IDeviceComplianceScriptRunSummaryRequestBuilder instance
     */
    public IDeviceComplianceScriptRunSummaryRequestBuilder runSummary() {
        return new DeviceComplianceScriptRunSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("runSummary"), getClient(), null);
    }
    public IDeviceComplianceScriptDeviceStateCollectionRequestBuilder deviceRunStates() {
        return new DeviceComplianceScriptDeviceStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates"), getClient(), null);
    }

    public IDeviceComplianceScriptDeviceStateRequestBuilder deviceRunStates(final String id) {
        return new DeviceComplianceScriptDeviceStateRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates") + "/" + id, getClient(), null);
    }

    public IDeviceComplianceScriptAssignRequestBuilder assign(final java.util.List<DeviceHealthScriptAssignment> deviceHealthScriptAssignments) {
        return new DeviceComplianceScriptAssignRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.assign"), getClient(), null, deviceHealthScriptAssignments);
    }
}
