// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IPrivilegedRoleAssignmentRequest;
import com.microsoft.graph.requests.extensions.PrivilegedRoleAssignmentRequest;
import com.microsoft.graph.requests.extensions.IPrivilegedRoleRequestBuilder;
import com.microsoft.graph.requests.extensions.PrivilegedRoleRequestBuilder;
import com.microsoft.graph.requests.extensions.IPrivilegedRoleAssignmentMakePermanentRequestBuilder;
import com.microsoft.graph.requests.extensions.PrivilegedRoleAssignmentMakePermanentRequestBuilder;
import com.microsoft.graph.requests.extensions.IPrivilegedRoleAssignmentMakeEligibleRequestBuilder;
import com.microsoft.graph.requests.extensions.PrivilegedRoleAssignmentMakeEligibleRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Privileged Role Assignment Request Builder.
 */
public class PrivilegedRoleAssignmentRequestBuilder extends BaseRequestBuilder implements IPrivilegedRoleAssignmentRequestBuilder {

    /**
     * The request builder for the PrivilegedRoleAssignment
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public PrivilegedRoleAssignmentRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IPrivilegedRoleAssignmentRequest instance
     */
    public IPrivilegedRoleAssignmentRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IPrivilegedRoleAssignmentRequest instance
     */
    public IPrivilegedRoleAssignmentRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new PrivilegedRoleAssignmentRequest(getRequestUrl(), getClient(), requestOptions);
    }



    /**
     * Gets the request builder for PrivilegedRole
     *
     * @return the IPrivilegedRoleRequestBuilder instance
     */
    public IPrivilegedRoleRequestBuilder roleInfo() {
        return new PrivilegedRoleRequestBuilder(getRequestUrlWithAdditionalSegment("roleInfo"), getClient(), null);
    }

    public IPrivilegedRoleAssignmentMakePermanentRequestBuilder makePermanent(final String reason, final String ticketNumber, final String ticketSystem) {
        return new PrivilegedRoleAssignmentMakePermanentRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.makePermanent"), getClient(), null, reason, ticketNumber, ticketSystem);
    }

    public IPrivilegedRoleAssignmentMakeEligibleRequestBuilder makeEligible() {
        return new PrivilegedRoleAssignmentMakeEligibleRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.makeEligible"), getClient(), null);
    }
}

