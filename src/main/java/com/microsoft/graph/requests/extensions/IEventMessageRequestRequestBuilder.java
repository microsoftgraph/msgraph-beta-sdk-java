// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IEventMessageRequestRequest;
import com.microsoft.graph.requests.extensions.IEventRequestBuilder;
import com.microsoft.graph.requests.extensions.IEventMessageRequestAcceptRequestBuilder;
import com.microsoft.graph.models.extensions.TimeSlot;
import com.microsoft.graph.requests.extensions.IEventMessageRequestDeclineRequestBuilder;
import com.microsoft.graph.models.extensions.TimeSlot;
import com.microsoft.graph.requests.extensions.IEventMessageRequestTentativelyAcceptRequestBuilder;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Event Message Request Request Builder.
 */
public interface IEventMessageRequestRequestBuilder extends IRequestBuilder {
    /**
     * Creates the request
     *
     * @return the IEventMessageRequestRequest instance
     */
    IEventMessageRequestRequest buildRequest();

    /**
     * Creates the request with specific options instead of the existing options
     *
     * @param requestOptions the options for this request
     * @return the IEventMessageRequestRequest instance
     */
    IEventMessageRequestRequest buildRequest(final java.util.List<? extends Option> requestOptions);


    /**
     * Gets the request builder for Event
     *
     * @return the IEventRequestBuilder instance
     */
    IEventRequestBuilder event();
    IEventMessageRequestAcceptRequestBuilder accept(final Boolean sendResponse, final String comment);
    IEventMessageRequestDeclineRequestBuilder decline(final TimeSlot proposedNewTime, final Boolean sendResponse, final String comment);
    IEventMessageRequestTentativelyAcceptRequestBuilder tentativelyAccept(final TimeSlot proposedNewTime, final Boolean sendResponse, final String comment);

}
