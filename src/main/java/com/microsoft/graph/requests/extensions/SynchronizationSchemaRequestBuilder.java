// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.ISynchronizationSchemaRequest;
import com.microsoft.graph.requests.extensions.IDirectoryDefinitionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DirectoryDefinitionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IDirectoryDefinitionRequestBuilder;
import com.microsoft.graph.requests.extensions.DirectoryDefinitionRequestBuilder;
import com.microsoft.graph.models.extensions.ExpressionInputObject;
import com.microsoft.graph.models.extensions.AttributeDefinition;
import com.microsoft.graph.requests.extensions.ISynchronizationSchemaParseExpressionRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationSchemaParseExpressionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationSchemaFunctionsCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationSchemaFunctionsCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationSchemaFilterOperatorsCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationSchemaFilterOperatorsCollectionRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Synchronization Schema Request Builder.
 */
public class SynchronizationSchemaRequestBuilder extends BaseRequestBuilder implements ISynchronizationSchemaRequestBuilder {

    /**
     * The request builder for the SynchronizationSchema
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public SynchronizationSchemaRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the ISynchronizationSchemaRequest instance
     */
    public ISynchronizationSchemaRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ISynchronizationSchemaRequest instance
     */
    public ISynchronizationSchemaRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.SynchronizationSchemaRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IDirectoryDefinitionCollectionRequestBuilder directories() {
        return new DirectoryDefinitionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("directories"), getClient(), null);
    }

    public IDirectoryDefinitionRequestBuilder directories(final String id) {
        return new DirectoryDefinitionRequestBuilder(getRequestUrlWithAdditionalSegment("directories") + "/" + id, getClient(), null);
    }

    public ISynchronizationSchemaParseExpressionRequestBuilder parseExpression(final String expression, final ExpressionInputObject testInputObject, final AttributeDefinition targetAttributeDefinition) {
        return new SynchronizationSchemaParseExpressionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.parseExpression"), getClient(), null, expression, testInputObject, targetAttributeDefinition);
    }

    public ISynchronizationSchemaFunctionsCollectionRequestBuilder functions() {
        return new SynchronizationSchemaFunctionsCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.functions"), getClient(), null);
    }

    public ISynchronizationSchemaFilterOperatorsCollectionRequestBuilder filterOperators() {
        return new SynchronizationSchemaFilterOperatorsCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.filterOperators"), getClient(), null);
    }
}
