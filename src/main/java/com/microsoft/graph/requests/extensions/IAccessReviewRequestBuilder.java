// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.AccessReview;
import com.microsoft.graph.requests.extensions.IAccessReviewDecisionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewDecisionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewReviewerCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IAccessReviewReviewerRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Access Review Request Builder.
 */
public interface IAccessReviewRequestBuilder extends IRequestBuilder {
    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IAccessReviewRequest instance
     */
    IAccessReviewRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions);

    /**
     * Creates the request with specific options instead of the existing options
     *
     * @param requestOptions the options for this request
     * @return the IAccessReviewRequest instance
     */
    IAccessReviewRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions);


    IAccessReviewDecisionCollectionRequestBuilder decisions();

    IAccessReviewDecisionRequestBuilder decisions(final String id);

    IAccessReviewCollectionRequestBuilder instances();

    IAccessReviewRequestBuilder instances(final String id);

    IAccessReviewDecisionCollectionRequestBuilder myDecisions();

    IAccessReviewDecisionRequestBuilder myDecisions(final String id);

    IAccessReviewReviewerCollectionRequestBuilder reviewers();

    IAccessReviewReviewerRequestBuilder reviewers(final String id);
    IAccessReviewStopRequestBuilder stop();
    IAccessReviewApplyDecisionsRequestBuilder applyDecisions();
    IAccessReviewResetDecisionsRequestBuilder resetDecisions();
    IAccessReviewSendReminderRequestBuilder sendReminder();

}