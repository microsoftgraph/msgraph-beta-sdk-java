// Template Source: BaseMethodRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IUnifiedRbacResourceNamespaceImportResourceActionsRequest;
import com.microsoft.graph.requests.extensions.UnifiedRbacResourceNamespaceImportResourceActionsRequest;
import com.microsoft.graph.models.extensions.UnifiedRbacResourceNamespace;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Unified Rbac Resource Namespace Import Resource Actions Request Builder.
 */
public class UnifiedRbacResourceNamespaceImportResourceActionsRequestBuilder extends BaseActionRequestBuilder implements IUnifiedRbacResourceNamespaceImportResourceActionsRequestBuilder {

    /**
     * The request builder for this UnifiedRbacResourceNamespaceImportResourceActions
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param format the format
     * @param value the value
     * @param overwriteResourceNamespace the overwriteResourceNamespace
     */
    public UnifiedRbacResourceNamespaceImportResourceActionsRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final String format, final String value, final Boolean overwriteResourceNamespace) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("format", format);
        bodyParams.put("value", value);
        bodyParams.put("overwriteResourceNamespace", overwriteResourceNamespace);
    }

    /**
     * Creates the IUnifiedRbacResourceNamespaceImportResourceActionsRequest
     *
     * @param requestOptions the options for the request
     * @return the IUnifiedRbacResourceNamespaceImportResourceActionsRequest instance
     */
    public IUnifiedRbacResourceNamespaceImportResourceActionsRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the IUnifiedRbacResourceNamespaceImportResourceActionsRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IUnifiedRbacResourceNamespaceImportResourceActionsRequest instance
     */
    public IUnifiedRbacResourceNamespaceImportResourceActionsRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        UnifiedRbacResourceNamespaceImportResourceActionsRequest request = new UnifiedRbacResourceNamespaceImportResourceActionsRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("format")) {
            request.body.format = getParameter("format");
        }

        if (hasParameter("value")) {
            request.body.value = getParameter("value");
        }

        if (hasParameter("overwriteResourceNamespace")) {
            request.body.overwriteResourceNamespace = getParameter("overwriteResourceNamespace");
        }

        return request;
    }
}
