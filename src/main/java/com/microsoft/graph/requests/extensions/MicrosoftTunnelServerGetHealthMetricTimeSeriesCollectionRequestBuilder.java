// Template Source: BaseMethodCollectionRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.KeyValuePair;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.requests.extensions.IMicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IMicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest;
import com.microsoft.graph.requests.extensions.MicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest;
import com.microsoft.graph.options.FunctionOption;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.core.BaseActionRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Microsoft Tunnel Server Get Health Metric Time Series Collection Request Builder.
 */
public class MicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequestBuilder extends BaseActionRequestBuilder implements IMicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequestBuilder {

    /**
     * The request builder for this collection of MicrosoftTunnelServer
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param metricName the metricName
     * @param startTime the startTime
     * @param endTime the endTime
     */
    public MicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final String metricName, final java.util.Calendar startTime, final java.util.Calendar endTime) {
        super(requestUrl, client, requestOptions);
  	 if(metricName!=null){
			bodyParams.put("metricName", metricName);
		}
    	 if(startTime!=null){
			bodyParams.put("startTime", startTime);
		}
    	 if(endTime!=null){
			bodyParams.put("endTime", endTime);
		}
      }
    
    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IUserRequest instance
     */
    public IMicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IUserRequest instance
     */
    public IMicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        MicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest request = new MicrosoftTunnelServerGetHealthMetricTimeSeriesCollectionRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("metricName")) {
            request.body.metricName = getParameter("metricName");
        }
        if (hasParameter("startTime")) {
            request.body.startTime = getParameter("startTime");
        }
        if (hasParameter("endTime")) {
            request.body.endTime = getParameter("endTime");
        }
  
        return request;
    }
}
