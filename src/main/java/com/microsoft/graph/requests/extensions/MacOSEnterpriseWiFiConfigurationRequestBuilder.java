// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.MacOSEnterpriseWiFiConfiguration;
import com.microsoft.graph.requests.extensions.IMacOSTrustedRootCertificateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IMacOSTrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.MacOSTrustedRootCertificateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.MacOSTrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.IMacOSTrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.MacOSTrustedRootCertificateRequestBuilder;
import com.microsoft.graph.requests.extensions.IMacOSCertificateProfileBaseRequestBuilder;
import com.microsoft.graph.requests.extensions.MacOSCertificateProfileBaseRequestBuilder;

import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Mac OSEnterprise Wi Fi Configuration Request Builder.
 */
public class MacOSEnterpriseWiFiConfigurationRequestBuilder extends BaseRequestBuilder implements IMacOSEnterpriseWiFiConfigurationRequestBuilder {

    /**
     * The request builder for the MacOSEnterpriseWiFiConfiguration
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public MacOSEnterpriseWiFiConfigurationRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IMacOSEnterpriseWiFiConfigurationRequest instance
     */
    public IMacOSEnterpriseWiFiConfigurationRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IMacOSEnterpriseWiFiConfigurationRequest instance
     */
    public IMacOSEnterpriseWiFiConfigurationRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.MacOSEnterpriseWiFiConfigurationRequest(getRequestUrl(), getClient(), requestOptions);
    }



    /**
     * Gets the request builder for MacOSTrustedRootCertificate
     *
     * @return the IMacOSTrustedRootCertificateWithReferenceRequestBuilder instance
     */
    public IMacOSTrustedRootCertificateWithReferenceRequestBuilder rootCertificateForServerValidation() {
        return new MacOSTrustedRootCertificateWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificateForServerValidation"), getClient(), null);
    }
    public IMacOSTrustedRootCertificateCollectionRequestBuilder rootCertificatesForServerValidation() {
        return new MacOSTrustedRootCertificateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificatesForServerValidation"), getClient(), null);
    }

    public IMacOSTrustedRootCertificateRequestBuilder rootCertificatesForServerValidation(final String id) {
        return new MacOSTrustedRootCertificateRequestBuilder(getRequestUrlWithAdditionalSegment("rootCertificatesForServerValidation") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for MacOSCertificateProfileBase
     *
     * @return the IMacOSCertificateProfileBaseWithReferenceRequestBuilder instance
     */
    public IMacOSCertificateProfileBaseWithReferenceRequestBuilder identityCertificateForClientAuthentication() {
        return new MacOSCertificateProfileBaseWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("identityCertificateForClientAuthentication"), getClient(), null);
    }
}
