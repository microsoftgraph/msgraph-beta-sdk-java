// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.ISynchronizationSchemaParseExpressionRequest;
import com.microsoft.graph.requests.extensions.SynchronizationSchemaParseExpressionRequest;
import com.microsoft.graph.models.extensions.ExpressionInputObject;
import com.microsoft.graph.models.extensions.AttributeDefinition;
import com.microsoft.graph.models.extensions.ParseExpressionResponse;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Synchronization Schema Parse Expression Request Builder.
 */
public class SynchronizationSchemaParseExpressionRequestBuilder extends BaseActionRequestBuilder implements ISynchronizationSchemaParseExpressionRequestBuilder {

    /**
     * The request builder for this SynchronizationSchemaParseExpression
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param expression the expression
     * @param testInputObject the testInputObject
     * @param targetAttributeDefinition the targetAttributeDefinition
     */
    public SynchronizationSchemaParseExpressionRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final String expression, final ExpressionInputObject testInputObject, final AttributeDefinition targetAttributeDefinition) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("expression", expression);
        bodyParams.put("testInputObject", testInputObject);
        bodyParams.put("targetAttributeDefinition", targetAttributeDefinition);
    }

    /**
     * Creates the ISynchronizationSchemaParseExpressionRequest
     *
     * @return the ISynchronizationSchemaParseExpressionRequest instance
     */
    public ISynchronizationSchemaParseExpressionRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the ISynchronizationSchemaParseExpressionRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the ISynchronizationSchemaParseExpressionRequest instance
     */
    public ISynchronizationSchemaParseExpressionRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        SynchronizationSchemaParseExpressionRequest request = new SynchronizationSchemaParseExpressionRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("expression")) {
            request.body.expression = getParameter("expression");
        }

        if (hasParameter("testInputObject")) {
            request.body.testInputObject = getParameter("testInputObject");
        }

        if (hasParameter("targetAttributeDefinition")) {
            request.body.targetAttributeDefinition = getParameter("targetAttributeDefinition");
        }

        return request;
    }
}
