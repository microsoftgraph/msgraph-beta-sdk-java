// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IOfficeClientConfigurationUpdatePrioritiesRequest;
import com.microsoft.graph.requests.extensions.OfficeClientConfigurationUpdatePrioritiesRequest;

import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Office Client Configuration Update Priorities Request Builder.
 */
public class OfficeClientConfigurationUpdatePrioritiesRequestBuilder extends BaseActionRequestBuilder implements IOfficeClientConfigurationUpdatePrioritiesRequestBuilder {

    /**
     * The request builder for this OfficeClientConfigurationUpdatePriorities
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param officeConfigurationPolicyIds the officeConfigurationPolicyIds
     * @param officeConfigurationPriorities the officeConfigurationPriorities
     */
    public OfficeClientConfigurationUpdatePrioritiesRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final java.util.List<String> officeConfigurationPolicyIds, final java.util.List<Integer> officeConfigurationPriorities) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("officeConfigurationPolicyIds", officeConfigurationPolicyIds);
        bodyParams.put("officeConfigurationPriorities", officeConfigurationPriorities);
    }

    /**
     * Creates the IOfficeClientConfigurationUpdatePrioritiesRequest
     *
     * @return the IOfficeClientConfigurationUpdatePrioritiesRequest instance
     */
    public IOfficeClientConfigurationUpdatePrioritiesRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the IOfficeClientConfigurationUpdatePrioritiesRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IOfficeClientConfigurationUpdatePrioritiesRequest instance
     */
    public IOfficeClientConfigurationUpdatePrioritiesRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        OfficeClientConfigurationUpdatePrioritiesRequest request = new OfficeClientConfigurationUpdatePrioritiesRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("officeConfigurationPolicyIds")) {
            request.body.officeConfigurationPolicyIds = getParameter("officeConfigurationPolicyIds");
        }

        if (hasParameter("officeConfigurationPriorities")) {
            request.body.officeConfigurationPriorities = getParameter("officeConfigurationPriorities");
        }

        return request;
    }
}
