// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IEventMessageRequestRequest;
import com.microsoft.graph.requests.extensions.EventMessageRequestRequest;
import com.microsoft.graph.requests.extensions.IEventMessageRequestAcceptRequestBuilder;
import com.microsoft.graph.requests.extensions.EventMessageRequestAcceptRequestBuilder;
import com.microsoft.graph.models.extensions.TimeSlot;
import com.microsoft.graph.requests.extensions.IEventMessageRequestDeclineRequestBuilder;
import com.microsoft.graph.requests.extensions.EventMessageRequestDeclineRequestBuilder;
import com.microsoft.graph.models.extensions.TimeSlot;
import com.microsoft.graph.requests.extensions.IEventMessageRequestTentativelyAcceptRequestBuilder;
import com.microsoft.graph.requests.extensions.EventMessageRequestTentativelyAcceptRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Event Message Request Request Builder.
 */
public class EventMessageRequestRequestBuilder extends BaseRequestBuilder implements IEventMessageRequestRequestBuilder {

    /**
     * The request builder for the EventMessageRequest
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public EventMessageRequestRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the IEventMessageRequestRequest instance
     */
    public IEventMessageRequestRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the IEventMessageRequestRequest instance
     */
    public IEventMessageRequestRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new EventMessageRequestRequest(getRequestUrl(), getClient(), requestOptions);
    }



    public IEventMessageRequestAcceptRequestBuilder accept(final Boolean sendResponse, final String comment) {
        return new EventMessageRequestAcceptRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.accept"), getClient(), null, sendResponse, comment);
    }

    public IEventMessageRequestDeclineRequestBuilder decline(final TimeSlot proposedNewTime, final Boolean sendResponse, final String comment) {
        return new EventMessageRequestDeclineRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.decline"), getClient(), null, proposedNewTime, sendResponse, comment);
    }

    public IEventMessageRequestTentativelyAcceptRequestBuilder tentativelyAccept(final TimeSlot proposedNewTime, final Boolean sendResponse, final String comment) {
        return new EventMessageRequestTentativelyAcceptRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.tentativelyAccept"), getClient(), null, proposedNewTime, sendResponse, comment);
    }
}
