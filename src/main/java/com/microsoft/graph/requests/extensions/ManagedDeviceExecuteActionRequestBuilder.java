// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IManagedDeviceExecuteActionRequest;
import com.microsoft.graph.requests.extensions.ManagedDeviceExecuteActionRequest;
import com.microsoft.graph.models.generated.ManagedDeviceRemoteAction;
import com.microsoft.graph.models.extensions.BulkManagedDeviceActionResult;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Managed Device Execute Action Request Builder.
 */
public class ManagedDeviceExecuteActionRequestBuilder extends BaseActionRequestBuilder implements IManagedDeviceExecuteActionRequestBuilder {

    /**
     * The request builder for this ManagedDeviceExecuteAction
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param actionName the actionName
     * @param keepEnrollmentData the keepEnrollmentData
     * @param keepUserData the keepUserData
     * @param deviceIds the deviceIds
     * @param notificationTitle the notificationTitle
     * @param notificationBody the notificationBody
     * @param deviceName the deviceName
     */
    public ManagedDeviceExecuteActionRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final ManagedDeviceRemoteAction actionName, final Boolean keepEnrollmentData, final Boolean keepUserData, final java.util.List<String> deviceIds, final String notificationTitle, final String notificationBody, final String deviceName) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("actionName", actionName);
        bodyParams.put("keepEnrollmentData", keepEnrollmentData);
        bodyParams.put("keepUserData", keepUserData);
        bodyParams.put("deviceIds", deviceIds);
        bodyParams.put("notificationTitle", notificationTitle);
        bodyParams.put("notificationBody", notificationBody);
        bodyParams.put("deviceName", deviceName);
    }

    /**
     * Creates the IManagedDeviceExecuteActionRequest
     *
     * @return the IManagedDeviceExecuteActionRequest instance
     */
    public IManagedDeviceExecuteActionRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the IManagedDeviceExecuteActionRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IManagedDeviceExecuteActionRequest instance
     */
    public IManagedDeviceExecuteActionRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        ManagedDeviceExecuteActionRequest request = new ManagedDeviceExecuteActionRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("actionName")) {
            request.body.actionName = getParameter("actionName");
        }

        if (hasParameter("keepEnrollmentData")) {
            request.body.keepEnrollmentData = getParameter("keepEnrollmentData");
        }

        if (hasParameter("keepUserData")) {
            request.body.keepUserData = getParameter("keepUserData");
        }

        if (hasParameter("deviceIds")) {
            request.body.deviceIds = getParameter("deviceIds");
        }

        if (hasParameter("notificationTitle")) {
            request.body.notificationTitle = getParameter("notificationTitle");
        }

        if (hasParameter("notificationBody")) {
            request.body.notificationBody = getParameter("notificationBody");
        }

        if (hasParameter("deviceName")) {
            request.body.deviceName = getParameter("deviceName");
        }

        return request;
    }
}
