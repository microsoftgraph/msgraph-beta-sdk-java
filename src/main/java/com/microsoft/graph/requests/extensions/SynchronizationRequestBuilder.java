// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.ISynchronizationRequest;
import com.microsoft.graph.requests.extensions.SynchronizationRequest;
import com.microsoft.graph.requests.extensions.ISynchronizationJobCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationJobCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationJobRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationJobRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationTemplateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationTemplateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationTemplateRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationTemplateRequestBuilder;
import com.microsoft.graph.models.extensions.SynchronizationSecretKeyStringValuePair;
import com.microsoft.graph.requests.extensions.ISynchronizationAcquireAccessTokenRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationAcquireAccessTokenRequestBuilder;
import com.microsoft.graph.requests.extensions.ISynchronizationPingRequestBuilder;
import com.microsoft.graph.requests.extensions.SynchronizationPingRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Synchronization Request Builder.
 */
public class SynchronizationRequestBuilder extends BaseRequestBuilder implements ISynchronizationRequestBuilder {

    /**
     * The request builder for the Synchronization
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public SynchronizationRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the ISynchronizationRequest instance
     */
    public ISynchronizationRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ISynchronizationRequest instance
     */
    public ISynchronizationRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new SynchronizationRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public ISynchronizationJobCollectionRequestBuilder jobs() {
        return new SynchronizationJobCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("jobs"), getClient(), null);
    }

    public ISynchronizationJobRequestBuilder jobs(final String id) {
        return new SynchronizationJobRequestBuilder(getRequestUrlWithAdditionalSegment("jobs") + "/" + id, getClient(), null);
    }
    public ISynchronizationTemplateCollectionRequestBuilder templates() {
        return new SynchronizationTemplateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("templates"), getClient(), null);
    }

    public ISynchronizationTemplateRequestBuilder templates(final String id) {
        return new SynchronizationTemplateRequestBuilder(getRequestUrlWithAdditionalSegment("templates") + "/" + id, getClient(), null);
    }

    public ISynchronizationAcquireAccessTokenRequestBuilder acquireAccessToken(final java.util.List<SynchronizationSecretKeyStringValuePair> credentials) {
        return new SynchronizationAcquireAccessTokenRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.acquireAccessToken"), getClient(), null, credentials);
    }

    public ISynchronizationPingRequestBuilder ping() {
        return new SynchronizationPingRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.Ping"), getClient(), null);
    }
}
