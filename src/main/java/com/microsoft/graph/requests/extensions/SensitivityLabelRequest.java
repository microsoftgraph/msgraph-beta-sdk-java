// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.SensitivityLabel;
import com.microsoft.graph.models.extensions.DiscoveredSensitiveType;
import com.microsoft.graph.models.extensions.CurrentLabel;
import com.microsoft.graph.models.extensions.EvaluateLabelJobResponse;
import com.microsoft.graph.requests.extensions.ISensitivityLabelCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISensitivityLabelRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitivityLabelCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitivityLabelRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Sensitivity Label Request.
 */
public class SensitivityLabelRequest extends BaseRequest implements ISensitivityLabelRequest {
	
    /**
     * The request for the SensitivityLabel
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public SensitivityLabelRequest(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, SensitivityLabel.class);
    }

    /**
     * Gets the SensitivityLabel from the service
     *
     * @param callback the callback to be called after success or failure
     */
    public void get(final ICallback<SensitivityLabel> callback) {
        send(HttpMethod.GET, callback, null);
    }

    /**
     * Gets the SensitivityLabel from the service
     *
     * @return the SensitivityLabel from the request
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public SensitivityLabel get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    /**
     * Delete this item from the service
     *
     * @param callback the callback when the deletion action has completed
     */
    public void delete(final ICallback<SensitivityLabel> callback) {
        send(HttpMethod.DELETE, callback, null);
    }

    /**
     * Delete this item from the service
     *
     * @throws ClientException if there was an exception during the delete operation
     */
    public void delete() throws ClientException {
        send(HttpMethod.DELETE, null);
    }

    /**
     * Patches this SensitivityLabel with a source
     *
     * @param sourceSensitivityLabel the source object with updates
     * @param callback the callback to be called after success or failure
     */
    public void patch(final SensitivityLabel sourceSensitivityLabel, final ICallback<SensitivityLabel> callback) {
        send(HttpMethod.PATCH, callback, sourceSensitivityLabel);
    }

    /**
     * Patches this SensitivityLabel with a source
     *
     * @param sourceSensitivityLabel the source object with updates
     * @return the updated SensitivityLabel
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public SensitivityLabel patch(final SensitivityLabel sourceSensitivityLabel) throws ClientException {
        return send(HttpMethod.PATCH, sourceSensitivityLabel);
    }

    /**
     * Creates a SensitivityLabel with a new object
     *
     * @param newSensitivityLabel the new object to create
     * @param callback the callback to be called after success or failure
     */
    public void post(final SensitivityLabel newSensitivityLabel, final ICallback<SensitivityLabel> callback) {
        send(HttpMethod.POST, callback, newSensitivityLabel);
    }

    /**
     * Creates a SensitivityLabel with a new object
     *
     * @param newSensitivityLabel the new object to create
     * @return the created SensitivityLabel
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public SensitivityLabel post(final SensitivityLabel newSensitivityLabel) throws ClientException {
        return send(HttpMethod.POST, newSensitivityLabel);
    }

    /**
     * Creates a SensitivityLabel with a new object
     *
     * @param newSensitivityLabel the object to create/update
     * @param callback the callback to be called after success or failure
     */
    public void put(final SensitivityLabel newSensitivityLabel, final ICallback<SensitivityLabel> callback) {
        send(HttpMethod.PUT, callback, newSensitivityLabel);
    }

    /**
     * Creates a SensitivityLabel with a new object
     *
     * @param newSensitivityLabel the object to create/update
     * @return the created SensitivityLabel
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    public SensitivityLabel put(final SensitivityLabel newSensitivityLabel) throws ClientException {
        return send(HttpMethod.PUT, newSensitivityLabel);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
     public ISensitivityLabelRequest select(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$select", value));
         return (SensitivityLabelRequest)this;
     }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
     public ISensitivityLabelRequest expand(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$expand", value));
         return (SensitivityLabelRequest)this;
     }

    /**
     * Sets the filter clause for the request
     *
     * @param value the filter clause
     * @return the updated request
     */
     public ISensitivityLabelRequest filter(final String value) {
         getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$filter", value));
         return (SensitivityLabelRequest)this;
     }

}

