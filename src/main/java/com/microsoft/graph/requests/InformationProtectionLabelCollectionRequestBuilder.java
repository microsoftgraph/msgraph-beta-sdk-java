// Template Source: BaseEntityCollectionRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.models.InformationProtectionPolicy;
import com.microsoft.graph.models.InformationProtectionLabel;
import com.microsoft.graph.models.ContentInfo;
import com.microsoft.graph.models.LabelingOptions;
import com.microsoft.graph.models.InformationProtectionAction;
import com.microsoft.graph.models.ClassificationResult;
import com.microsoft.graph.models.DowngradeJustification;
import com.microsoft.graph.models.InformationProtectionContentLabel;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

import com.microsoft.graph.requests.InformationProtectionLabelCollectionRequestBuilder;
import com.microsoft.graph.requests.InformationProtectionLabelRequestBuilder;
import com.microsoft.graph.requests.InformationProtectionLabelCollectionRequest;
import com.microsoft.graph.requests.InformationProtectionLabelEvaluateApplicationCollectionRequestBuilder;
import com.microsoft.graph.requests.InformationProtectionLabelEvaluateClassificationResultsCollectionRequestBuilder;
import com.microsoft.graph.requests.InformationProtectionLabelEvaluateRemovalCollectionRequestBuilder;
import com.microsoft.graph.requests.InformationProtectionLabelExtractLabelRequestBuilder;
import com.microsoft.graph.http.BaseCollectionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.PrimitiveRequestBuilder;
import com.microsoft.graph.models.InformationProtectionLabelEvaluateApplicationParameterSet;
import com.microsoft.graph.models.InformationProtectionLabelEvaluateClassificationResultsParameterSet;
import com.microsoft.graph.models.InformationProtectionLabelEvaluateRemovalParameterSet;
import com.microsoft.graph.models.InformationProtectionLabelExtractLabelParameterSet;
// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Information Protection Label Collection Request Builder.
 * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
 */
@Deprecated
public class InformationProtectionLabelCollectionRequestBuilder extends BaseCollectionRequestBuilder<InformationProtectionLabel, InformationProtectionLabelRequestBuilder, InformationProtectionLabelCollectionResponse, InformationProtectionLabelCollectionPage, InformationProtectionLabelCollectionRequest> {

    /**
     * The request builder for this collection of InformationProtectionPolicy
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public InformationProtectionLabelCollectionRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient<?> client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, InformationProtectionLabelRequestBuilder.class, InformationProtectionLabelCollectionRequest.class);
    }



    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
     */
    @Deprecated
    @Nonnull
    public InformationProtectionLabelEvaluateApplicationCollectionRequestBuilder evaluateApplication(@Nonnull final InformationProtectionLabelEvaluateApplicationParameterSet parameters) {
        return new InformationProtectionLabelEvaluateApplicationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.evaluateApplication"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
     */
    @Deprecated
    @Nonnull
    public InformationProtectionLabelEvaluateClassificationResultsCollectionRequestBuilder evaluateClassificationResults(@Nonnull final InformationProtectionLabelEvaluateClassificationResultsParameterSet parameters) {
        return new InformationProtectionLabelEvaluateClassificationResultsCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.evaluateClassificationResults"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
     */
    @Deprecated
    @Nonnull
    public InformationProtectionLabelEvaluateRemovalCollectionRequestBuilder evaluateRemoval(@Nonnull final InformationProtectionLabelEvaluateRemovalParameterSet parameters) {
        return new InformationProtectionLabelEvaluateRemovalCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.evaluateRemoval"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs.
     */
    @Deprecated
    @Nonnull
    public InformationProtectionLabelExtractLabelRequestBuilder extractLabel(@Nonnull final InformationProtectionLabelExtractLabelParameterSet parameters) {
        return new InformationProtectionLabelExtractLabelRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.extractLabel"), getClient(), null, parameters);
    }

    /**
     * Gets the raw count request for the collection
     * @return The raw count request for the collection
     */
    @Nonnull
    public PrimitiveRequestBuilder<Long> count() {
        return new PrimitiveRequestBuilder<Long>(getRequestUrlWithAdditionalSegment("$count"), getClient(), null, Long.class);
    }
}
