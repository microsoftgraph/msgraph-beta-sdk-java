// Template Source: BaseEntityRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.models.SuperAwsRoleFinding;
import com.microsoft.graph.models.PermissionsAnalyticsAggregatedIdentitySummary;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Super Aws Role Finding Request.
 */
public class SuperAwsRoleFindingRequest extends BaseRequest<SuperAwsRoleFinding> {
	
    /**
     * The request for the SuperAwsRoleFinding
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public SuperAwsRoleFindingRequest(@Nonnull final String requestUrl, @Nonnull final IBaseClient<?> client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, SuperAwsRoleFinding.class);
    }

    /**
     * Gets the SuperAwsRoleFinding from the service
     *
     * @return a future with the result
     */
    @Nonnull
    public java.util.concurrent.CompletableFuture<SuperAwsRoleFinding> getAsync() {
        return sendAsync(HttpMethod.GET, null);
    }

    /**
     * Gets the SuperAwsRoleFinding from the service
     *
     * @return the SuperAwsRoleFinding from the request
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public SuperAwsRoleFinding get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    /**
     * Delete this item from the service
     *
     * @return a future with the deletion result
     */
    @Nonnull
    public java.util.concurrent.CompletableFuture<SuperAwsRoleFinding> deleteAsync() {
        return sendAsync(HttpMethod.DELETE, null);
    }

    /**
     * Delete this item from the service
     * @return the resulting response if the service returns anything on deletion
     *
     * @throws ClientException if there was an exception during the delete operation
     */
    @Nullable
    public SuperAwsRoleFinding delete() throws ClientException {
        return send(HttpMethod.DELETE, null);
    }

    /**
     * Patches this SuperAwsRoleFinding with a source
     *
     * @param sourceSuperAwsRoleFinding the source object with updates
     * @return a future with the result
     */
    @Nonnull
    public java.util.concurrent.CompletableFuture<SuperAwsRoleFinding> patchAsync(@Nonnull final SuperAwsRoleFinding sourceSuperAwsRoleFinding) {
        return sendAsync(HttpMethod.PATCH, sourceSuperAwsRoleFinding);
    }

    /**
     * Patches this SuperAwsRoleFinding with a source
     *
     * @param sourceSuperAwsRoleFinding the source object with updates
     * @return the updated SuperAwsRoleFinding
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public SuperAwsRoleFinding patch(@Nonnull final SuperAwsRoleFinding sourceSuperAwsRoleFinding) throws ClientException {
        return send(HttpMethod.PATCH, sourceSuperAwsRoleFinding);
    }

    /**
     * Creates a SuperAwsRoleFinding with a new object
     *
     * @param newSuperAwsRoleFinding the new object to create
     * @return a future with the result
     */
    @Nonnull
    public java.util.concurrent.CompletableFuture<SuperAwsRoleFinding> postAsync(@Nonnull final SuperAwsRoleFinding newSuperAwsRoleFinding) {
        return sendAsync(HttpMethod.POST, newSuperAwsRoleFinding);
    }

    /**
     * Creates a SuperAwsRoleFinding with a new object
     *
     * @param newSuperAwsRoleFinding the new object to create
     * @return the created SuperAwsRoleFinding
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public SuperAwsRoleFinding post(@Nonnull final SuperAwsRoleFinding newSuperAwsRoleFinding) throws ClientException {
        return send(HttpMethod.POST, newSuperAwsRoleFinding);
    }

    /**
     * Creates a SuperAwsRoleFinding with a new object
     *
     * @param newSuperAwsRoleFinding the object to create/update
     * @return a future with the result
     */
    @Nonnull
    public java.util.concurrent.CompletableFuture<SuperAwsRoleFinding> putAsync(@Nonnull final SuperAwsRoleFinding newSuperAwsRoleFinding) {
        return sendAsync(HttpMethod.PUT, newSuperAwsRoleFinding);
    }

    /**
     * Creates a SuperAwsRoleFinding with a new object
     *
     * @param newSuperAwsRoleFinding the object to create/update
     * @return the created SuperAwsRoleFinding
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public SuperAwsRoleFinding put(@Nonnull final SuperAwsRoleFinding newSuperAwsRoleFinding) throws ClientException {
        return send(HttpMethod.PUT, newSuperAwsRoleFinding);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
     @Nonnull
     public SuperAwsRoleFindingRequest select(@Nonnull final String value) {
         addSelectOption(value);
         return this;
     }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
     @Nonnull
     public SuperAwsRoleFindingRequest expand(@Nonnull final String value) {
         addExpandOption(value);
         return this;
     }

}

