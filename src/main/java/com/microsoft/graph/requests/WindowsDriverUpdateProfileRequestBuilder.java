// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.models.WindowsDriverUpdateProfile;
import com.microsoft.graph.models.WindowsDriverUpdateProfileAssignment;
import com.microsoft.graph.models.DriverApprovalAction;
import com.microsoft.graph.models.BulkDriverActionResult;
import com.microsoft.graph.requests.WindowsDriverUpdateProfileAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.WindowsDriverUpdateProfileAssignmentRequestBuilder;
import com.microsoft.graph.requests.WindowsDriverUpdateInventoryCollectionRequestBuilder;
import com.microsoft.graph.requests.WindowsDriverUpdateInventoryRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.models.WindowsDriverUpdateProfileAssignParameterSet;
import com.microsoft.graph.models.WindowsDriverUpdateProfileExecuteActionParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Driver Update Profile Request Builder.
 */
public class WindowsDriverUpdateProfileRequestBuilder extends BaseRequestBuilder<WindowsDriverUpdateProfile> {

    /**
     * The request builder for the WindowsDriverUpdateProfile
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public WindowsDriverUpdateProfileRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient<?> client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the WindowsDriverUpdateProfileRequest instance
     */
    @Nonnull
    public WindowsDriverUpdateProfileRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the WindowsDriverUpdateProfileRequest instance
     */
    @Nonnull
    public WindowsDriverUpdateProfileRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.WindowsDriverUpdateProfileRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the WindowsDriverUpdateProfileAssignment collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public WindowsDriverUpdateProfileAssignmentCollectionRequestBuilder assignments() {
        return new WindowsDriverUpdateProfileAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    /**
     * Gets a request builder for the WindowsDriverUpdateProfileAssignment item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public WindowsDriverUpdateProfileAssignmentRequestBuilder assignments(@Nonnull final String id) {
        return new WindowsDriverUpdateProfileAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the WindowsDriverUpdateInventory collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public WindowsDriverUpdateInventoryCollectionRequestBuilder driverInventories() {
        return new WindowsDriverUpdateInventoryCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("driverInventories"), getClient(), null);
    }

    /**
     * Gets a request builder for the WindowsDriverUpdateInventory item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public WindowsDriverUpdateInventoryRequestBuilder driverInventories(@Nonnull final String id) {
        return new WindowsDriverUpdateInventoryRequestBuilder(getRequestUrlWithAdditionalSegment("driverInventories") + "/" + id, getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public WindowsDriverUpdateProfileAssignRequestBuilder assign(@Nonnull final WindowsDriverUpdateProfileAssignParameterSet parameters) {
        return new WindowsDriverUpdateProfileAssignRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.assign"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public WindowsDriverUpdateProfileExecuteActionRequestBuilder executeAction(@Nonnull final WindowsDriverUpdateProfileExecuteActionParameterSet parameters) {
        return new WindowsDriverUpdateProfileExecuteActionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.executeAction"), getClient(), null, parameters);
    }

    /**
     * Sync the driver inventory of a WindowsDriverUpdateProfile.
     * @return the request builder
     */
    @Nonnull
    public WindowsDriverUpdateProfileSyncInventoryRequestBuilder syncInventory() {
        return new WindowsDriverUpdateProfileSyncInventoryRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.syncInventory"), getClient(), null);
    }
}
